// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mesh/v1alpha1/proxy.proto

#ifndef PROTOBUF_mesh_2fv1alpha1_2fproxy_2eproto__INCLUDED
#define PROTOBUF_mesh_2fv1alpha1_2fproxy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/duration.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_mesh_2fv1alpha1_2fproxy_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsTracing_ZipkinImpl();
void InitDefaultsTracing_Zipkin();
void InitDefaultsTracing_LightstepImpl();
void InitDefaultsTracing_Lightstep();
void InitDefaultsTracingImpl();
void InitDefaultsTracing();
void InitDefaultsProxyConfigImpl();
void InitDefaultsProxyConfig();
inline void InitDefaults() {
  InitDefaultsTracing_Zipkin();
  InitDefaultsTracing_Lightstep();
  InitDefaultsTracing();
  InitDefaultsProxyConfig();
}
}  // namespace protobuf_mesh_2fv1alpha1_2fproxy_2eproto
namespace istio {
namespace mesh {
namespace v1alpha1 {
class ProxyConfig;
class ProxyConfigDefaultTypeInternal;
extern ProxyConfigDefaultTypeInternal _ProxyConfig_default_instance_;
class Tracing;
class TracingDefaultTypeInternal;
extern TracingDefaultTypeInternal _Tracing_default_instance_;
class Tracing_Lightstep;
class Tracing_LightstepDefaultTypeInternal;
extern Tracing_LightstepDefaultTypeInternal _Tracing_Lightstep_default_instance_;
class Tracing_Zipkin;
class Tracing_ZipkinDefaultTypeInternal;
extern Tracing_ZipkinDefaultTypeInternal _Tracing_Zipkin_default_instance_;
}  // namespace v1alpha1
}  // namespace mesh
}  // namespace istio
namespace istio {
namespace mesh {
namespace v1alpha1 {

enum ProxyConfig_InboundInterceptionMode {
  ProxyConfig_InboundInterceptionMode_REDIRECT = 0,
  ProxyConfig_InboundInterceptionMode_TPROXY = 1,
  ProxyConfig_InboundInterceptionMode_ProxyConfig_InboundInterceptionMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ProxyConfig_InboundInterceptionMode_ProxyConfig_InboundInterceptionMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ProxyConfig_InboundInterceptionMode_IsValid(int value);
const ProxyConfig_InboundInterceptionMode ProxyConfig_InboundInterceptionMode_InboundInterceptionMode_MIN = ProxyConfig_InboundInterceptionMode_REDIRECT;
const ProxyConfig_InboundInterceptionMode ProxyConfig_InboundInterceptionMode_InboundInterceptionMode_MAX = ProxyConfig_InboundInterceptionMode_TPROXY;
const int ProxyConfig_InboundInterceptionMode_InboundInterceptionMode_ARRAYSIZE = ProxyConfig_InboundInterceptionMode_InboundInterceptionMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ProxyConfig_InboundInterceptionMode_descriptor();
inline const ::std::string& ProxyConfig_InboundInterceptionMode_Name(ProxyConfig_InboundInterceptionMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ProxyConfig_InboundInterceptionMode_descriptor(), value);
}
inline bool ProxyConfig_InboundInterceptionMode_Parse(
    const ::std::string& name, ProxyConfig_InboundInterceptionMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ProxyConfig_InboundInterceptionMode>(
    ProxyConfig_InboundInterceptionMode_descriptor(), name, value);
}
enum AuthenticationPolicy {
  NONE = 0,
  MUTUAL_TLS = 1,
  INHERIT = 1000,
  AuthenticationPolicy_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AuthenticationPolicy_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AuthenticationPolicy_IsValid(int value);
const AuthenticationPolicy AuthenticationPolicy_MIN = NONE;
const AuthenticationPolicy AuthenticationPolicy_MAX = INHERIT;
const int AuthenticationPolicy_ARRAYSIZE = AuthenticationPolicy_MAX + 1;

const ::google::protobuf::EnumDescriptor* AuthenticationPolicy_descriptor();
inline const ::std::string& AuthenticationPolicy_Name(AuthenticationPolicy value) {
  return ::google::protobuf::internal::NameOfEnum(
    AuthenticationPolicy_descriptor(), value);
}
inline bool AuthenticationPolicy_Parse(
    const ::std::string& name, AuthenticationPolicy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AuthenticationPolicy>(
    AuthenticationPolicy_descriptor(), name, value);
}
// ===================================================================

class Tracing_Zipkin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.Tracing.Zipkin) */ {
 public:
  Tracing_Zipkin();
  virtual ~Tracing_Zipkin();

  Tracing_Zipkin(const Tracing_Zipkin& from);

  inline Tracing_Zipkin& operator=(const Tracing_Zipkin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tracing_Zipkin(Tracing_Zipkin&& from) noexcept
    : Tracing_Zipkin() {
    *this = ::std::move(from);
  }

  inline Tracing_Zipkin& operator=(Tracing_Zipkin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Tracing_Zipkin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tracing_Zipkin* internal_default_instance() {
    return reinterpret_cast<const Tracing_Zipkin*>(
               &_Tracing_Zipkin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Tracing_Zipkin* other);
  friend void swap(Tracing_Zipkin& a, Tracing_Zipkin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tracing_Zipkin* New() const PROTOBUF_FINAL { return New(NULL); }

  Tracing_Zipkin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Tracing_Zipkin& from);
  void MergeFrom(const Tracing_Zipkin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Tracing_Zipkin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string address = 1;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.Tracing.Zipkin)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  mutable int _cached_size_;
  friend struct ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsTracing_ZipkinImpl();
};
// -------------------------------------------------------------------

class Tracing_Lightstep : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.Tracing.Lightstep) */ {
 public:
  Tracing_Lightstep();
  virtual ~Tracing_Lightstep();

  Tracing_Lightstep(const Tracing_Lightstep& from);

  inline Tracing_Lightstep& operator=(const Tracing_Lightstep& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tracing_Lightstep(Tracing_Lightstep&& from) noexcept
    : Tracing_Lightstep() {
    *this = ::std::move(from);
  }

  inline Tracing_Lightstep& operator=(Tracing_Lightstep&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Tracing_Lightstep& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tracing_Lightstep* internal_default_instance() {
    return reinterpret_cast<const Tracing_Lightstep*>(
               &_Tracing_Lightstep_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Tracing_Lightstep* other);
  friend void swap(Tracing_Lightstep& a, Tracing_Lightstep& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tracing_Lightstep* New() const PROTOBUF_FINAL { return New(NULL); }

  Tracing_Lightstep* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Tracing_Lightstep& from);
  void MergeFrom(const Tracing_Lightstep& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Tracing_Lightstep* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string address = 1;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // string access_token = 2;
  void clear_access_token();
  static const int kAccessTokenFieldNumber = 2;
  const ::std::string& access_token() const;
  void set_access_token(const ::std::string& value);
  #if LANG_CXX11
  void set_access_token(::std::string&& value);
  #endif
  void set_access_token(const char* value);
  void set_access_token(const char* value, size_t size);
  ::std::string* mutable_access_token();
  ::std::string* release_access_token();
  void set_allocated_access_token(::std::string* access_token);

  // string cacert_path = 4;
  void clear_cacert_path();
  static const int kCacertPathFieldNumber = 4;
  const ::std::string& cacert_path() const;
  void set_cacert_path(const ::std::string& value);
  #if LANG_CXX11
  void set_cacert_path(::std::string&& value);
  #endif
  void set_cacert_path(const char* value);
  void set_cacert_path(const char* value, size_t size);
  ::std::string* mutable_cacert_path();
  ::std::string* release_cacert_path();
  void set_allocated_cacert_path(::std::string* cacert_path);

  // bool secure = 3;
  void clear_secure();
  static const int kSecureFieldNumber = 3;
  bool secure() const;
  void set_secure(bool value);

  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.Tracing.Lightstep)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::google::protobuf::internal::ArenaStringPtr access_token_;
  ::google::protobuf::internal::ArenaStringPtr cacert_path_;
  bool secure_;
  mutable int _cached_size_;
  friend struct ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsTracing_LightstepImpl();
};
// -------------------------------------------------------------------

class Tracing : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.Tracing) */ {
 public:
  Tracing();
  virtual ~Tracing();

  Tracing(const Tracing& from);

  inline Tracing& operator=(const Tracing& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Tracing(Tracing&& from) noexcept
    : Tracing() {
    *this = ::std::move(from);
  }

  inline Tracing& operator=(Tracing&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Tracing& default_instance();

  enum TracerCase {
    kZipkin = 1,
    kLightstep = 2,
    TRACER_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Tracing* internal_default_instance() {
    return reinterpret_cast<const Tracing*>(
               &_Tracing_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Tracing* other);
  friend void swap(Tracing& a, Tracing& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Tracing* New() const PROTOBUF_FINAL { return New(NULL); }

  Tracing* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Tracing& from);
  void MergeFrom(const Tracing& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Tracing* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Tracing_Zipkin Zipkin;
  typedef Tracing_Lightstep Lightstep;

  // accessors -------------------------------------------------------

  // .istio.mesh.v1alpha1.Tracing.Zipkin zipkin = 1;
  bool has_zipkin() const;
  void clear_zipkin();
  static const int kZipkinFieldNumber = 1;
  const ::istio::mesh::v1alpha1::Tracing_Zipkin& zipkin() const;
  ::istio::mesh::v1alpha1::Tracing_Zipkin* release_zipkin();
  ::istio::mesh::v1alpha1::Tracing_Zipkin* mutable_zipkin();
  void set_allocated_zipkin(::istio::mesh::v1alpha1::Tracing_Zipkin* zipkin);

  // .istio.mesh.v1alpha1.Tracing.Lightstep lightstep = 2;
  bool has_lightstep() const;
  void clear_lightstep();
  static const int kLightstepFieldNumber = 2;
  const ::istio::mesh::v1alpha1::Tracing_Lightstep& lightstep() const;
  ::istio::mesh::v1alpha1::Tracing_Lightstep* release_lightstep();
  ::istio::mesh::v1alpha1::Tracing_Lightstep* mutable_lightstep();
  void set_allocated_lightstep(::istio::mesh::v1alpha1::Tracing_Lightstep* lightstep);

  TracerCase tracer_case() const;
  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.Tracing)
 private:
  void set_has_zipkin();
  void set_has_lightstep();

  inline bool has_tracer() const;
  void clear_tracer();
  inline void clear_has_tracer();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union TracerUnion {
    TracerUnion() {}
    ::istio::mesh::v1alpha1::Tracing_Zipkin* zipkin_;
    ::istio::mesh::v1alpha1::Tracing_Lightstep* lightstep_;
  } tracer_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsTracingImpl();
};
// -------------------------------------------------------------------

class ProxyConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.ProxyConfig) */ {
 public:
  ProxyConfig();
  virtual ~ProxyConfig();

  ProxyConfig(const ProxyConfig& from);

  inline ProxyConfig& operator=(const ProxyConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProxyConfig(ProxyConfig&& from) noexcept
    : ProxyConfig() {
    *this = ::std::move(from);
  }

  inline ProxyConfig& operator=(ProxyConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProxyConfig* internal_default_instance() {
    return reinterpret_cast<const ProxyConfig*>(
               &_ProxyConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ProxyConfig* other);
  friend void swap(ProxyConfig& a, ProxyConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProxyConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  ProxyConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProxyConfig& from);
  void MergeFrom(const ProxyConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProxyConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ProxyConfig_InboundInterceptionMode InboundInterceptionMode;
  static const InboundInterceptionMode REDIRECT =
    ProxyConfig_InboundInterceptionMode_REDIRECT;
  static const InboundInterceptionMode TPROXY =
    ProxyConfig_InboundInterceptionMode_TPROXY;
  static inline bool InboundInterceptionMode_IsValid(int value) {
    return ProxyConfig_InboundInterceptionMode_IsValid(value);
  }
  static const InboundInterceptionMode InboundInterceptionMode_MIN =
    ProxyConfig_InboundInterceptionMode_InboundInterceptionMode_MIN;
  static const InboundInterceptionMode InboundInterceptionMode_MAX =
    ProxyConfig_InboundInterceptionMode_InboundInterceptionMode_MAX;
  static const int InboundInterceptionMode_ARRAYSIZE =
    ProxyConfig_InboundInterceptionMode_InboundInterceptionMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  InboundInterceptionMode_descriptor() {
    return ProxyConfig_InboundInterceptionMode_descriptor();
  }
  static inline const ::std::string& InboundInterceptionMode_Name(InboundInterceptionMode value) {
    return ProxyConfig_InboundInterceptionMode_Name(value);
  }
  static inline bool InboundInterceptionMode_Parse(const ::std::string& name,
      InboundInterceptionMode* value) {
    return ProxyConfig_InboundInterceptionMode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string config_path = 1;
  void clear_config_path();
  static const int kConfigPathFieldNumber = 1;
  const ::std::string& config_path() const;
  void set_config_path(const ::std::string& value);
  #if LANG_CXX11
  void set_config_path(::std::string&& value);
  #endif
  void set_config_path(const char* value);
  void set_config_path(const char* value, size_t size);
  ::std::string* mutable_config_path();
  ::std::string* release_config_path();
  void set_allocated_config_path(::std::string* config_path);

  // string binary_path = 2;
  void clear_binary_path();
  static const int kBinaryPathFieldNumber = 2;
  const ::std::string& binary_path() const;
  void set_binary_path(const ::std::string& value);
  #if LANG_CXX11
  void set_binary_path(::std::string&& value);
  #endif
  void set_binary_path(const char* value);
  void set_binary_path(const char* value, size_t size);
  ::std::string* mutable_binary_path();
  ::std::string* release_binary_path();
  void set_allocated_binary_path(::std::string* binary_path);

  // string service_cluster = 3;
  void clear_service_cluster();
  static const int kServiceClusterFieldNumber = 3;
  const ::std::string& service_cluster() const;
  void set_service_cluster(const ::std::string& value);
  #if LANG_CXX11
  void set_service_cluster(::std::string&& value);
  #endif
  void set_service_cluster(const char* value);
  void set_service_cluster(const char* value, size_t size);
  ::std::string* mutable_service_cluster();
  ::std::string* release_service_cluster();
  void set_allocated_service_cluster(::std::string* service_cluster);

  // string discovery_address = 6;
  void clear_discovery_address();
  static const int kDiscoveryAddressFieldNumber = 6;
  const ::std::string& discovery_address() const;
  void set_discovery_address(const ::std::string& value);
  #if LANG_CXX11
  void set_discovery_address(::std::string&& value);
  #endif
  void set_discovery_address(const char* value);
  void set_discovery_address(const char* value, size_t size);
  ::std::string* mutable_discovery_address();
  ::std::string* release_discovery_address();
  void set_allocated_discovery_address(::std::string* discovery_address);

  // string zipkin_address = 8 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_zipkin_address();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kZipkinAddressFieldNumber = 8;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::std::string& zipkin_address() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_zipkin_address(const ::std::string& value);
  #if LANG_CXX11
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_zipkin_address(::std::string&& value);
  #endif
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_zipkin_address(const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_zipkin_address(const char* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_zipkin_address();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* release_zipkin_address();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_zipkin_address(::std::string* zipkin_address);

  // string statsd_udp_address = 10;
  void clear_statsd_udp_address();
  static const int kStatsdUdpAddressFieldNumber = 10;
  const ::std::string& statsd_udp_address() const;
  void set_statsd_udp_address(const ::std::string& value);
  #if LANG_CXX11
  void set_statsd_udp_address(::std::string&& value);
  #endif
  void set_statsd_udp_address(const char* value);
  void set_statsd_udp_address(const char* value, size_t size);
  ::std::string* mutable_statsd_udp_address();
  ::std::string* release_statsd_udp_address();
  void set_allocated_statsd_udp_address(::std::string* statsd_udp_address);

  // string availability_zone = 12 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_availability_zone();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kAvailabilityZoneFieldNumber = 12;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::std::string& availability_zone() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_availability_zone(const ::std::string& value);
  #if LANG_CXX11
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_availability_zone(::std::string&& value);
  #endif
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_availability_zone(const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_availability_zone(const char* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_availability_zone();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* release_availability_zone();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_availability_zone(::std::string* availability_zone);

  // string custom_config_file = 14;
  void clear_custom_config_file();
  static const int kCustomConfigFileFieldNumber = 14;
  const ::std::string& custom_config_file() const;
  void set_custom_config_file(const ::std::string& value);
  #if LANG_CXX11
  void set_custom_config_file(::std::string&& value);
  #endif
  void set_custom_config_file(const char* value);
  void set_custom_config_file(const char* value, size_t size);
  ::std::string* mutable_custom_config_file();
  ::std::string* release_custom_config_file();
  void set_allocated_custom_config_file(::std::string* custom_config_file);

  // string proxy_bootstrap_template_path = 17;
  void clear_proxy_bootstrap_template_path();
  static const int kProxyBootstrapTemplatePathFieldNumber = 17;
  const ::std::string& proxy_bootstrap_template_path() const;
  void set_proxy_bootstrap_template_path(const ::std::string& value);
  #if LANG_CXX11
  void set_proxy_bootstrap_template_path(::std::string&& value);
  #endif
  void set_proxy_bootstrap_template_path(const char* value);
  void set_proxy_bootstrap_template_path(const char* value, size_t size);
  ::std::string* mutable_proxy_bootstrap_template_path();
  ::std::string* release_proxy_bootstrap_template_path();
  void set_allocated_proxy_bootstrap_template_path(::std::string* proxy_bootstrap_template_path);

  // string envoy_metrics_service_address = 20;
  void clear_envoy_metrics_service_address();
  static const int kEnvoyMetricsServiceAddressFieldNumber = 20;
  const ::std::string& envoy_metrics_service_address() const;
  void set_envoy_metrics_service_address(const ::std::string& value);
  #if LANG_CXX11
  void set_envoy_metrics_service_address(::std::string&& value);
  #endif
  void set_envoy_metrics_service_address(const char* value);
  void set_envoy_metrics_service_address(const char* value, size_t size);
  ::std::string* mutable_envoy_metrics_service_address();
  ::std::string* release_envoy_metrics_service_address();
  void set_allocated_envoy_metrics_service_address(::std::string* envoy_metrics_service_address);

  // .google.protobuf.Duration drain_duration = 4;
  bool has_drain_duration() const;
  void clear_drain_duration();
  static const int kDrainDurationFieldNumber = 4;
  const ::google::protobuf::Duration& drain_duration() const;
  ::google::protobuf::Duration* release_drain_duration();
  ::google::protobuf::Duration* mutable_drain_duration();
  void set_allocated_drain_duration(::google::protobuf::Duration* drain_duration);

  // .google.protobuf.Duration parent_shutdown_duration = 5;
  bool has_parent_shutdown_duration() const;
  void clear_parent_shutdown_duration();
  static const int kParentShutdownDurationFieldNumber = 5;
  const ::google::protobuf::Duration& parent_shutdown_duration() const;
  ::google::protobuf::Duration* release_parent_shutdown_duration();
  ::google::protobuf::Duration* mutable_parent_shutdown_duration();
  void set_allocated_parent_shutdown_duration(::google::protobuf::Duration* parent_shutdown_duration);

  // .google.protobuf.Duration discovery_refresh_delay = 7 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_discovery_refresh_delay() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_discovery_refresh_delay();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kDiscoveryRefreshDelayFieldNumber = 7;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::google::protobuf::Duration& discovery_refresh_delay() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::Duration* release_discovery_refresh_delay();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::Duration* mutable_discovery_refresh_delay();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_discovery_refresh_delay(::google::protobuf::Duration* discovery_refresh_delay);

  // .google.protobuf.Duration connect_timeout = 9;
  bool has_connect_timeout() const;
  void clear_connect_timeout();
  static const int kConnectTimeoutFieldNumber = 9;
  const ::google::protobuf::Duration& connect_timeout() const;
  ::google::protobuf::Duration* release_connect_timeout();
  ::google::protobuf::Duration* mutable_connect_timeout();
  void set_allocated_connect_timeout(::google::protobuf::Duration* connect_timeout);

  // .istio.mesh.v1alpha1.Tracing tracing = 19;
  bool has_tracing() const;
  void clear_tracing();
  static const int kTracingFieldNumber = 19;
  const ::istio::mesh::v1alpha1::Tracing& tracing() const;
  ::istio::mesh::v1alpha1::Tracing* release_tracing();
  ::istio::mesh::v1alpha1::Tracing* mutable_tracing();
  void set_allocated_tracing(::istio::mesh::v1alpha1::Tracing* tracing);

  // int32 proxy_admin_port = 11;
  void clear_proxy_admin_port();
  static const int kProxyAdminPortFieldNumber = 11;
  ::google::protobuf::int32 proxy_admin_port() const;
  void set_proxy_admin_port(::google::protobuf::int32 value);

  // .istio.mesh.v1alpha1.AuthenticationPolicy control_plane_auth_policy = 13;
  void clear_control_plane_auth_policy();
  static const int kControlPlaneAuthPolicyFieldNumber = 13;
  ::istio::mesh::v1alpha1::AuthenticationPolicy control_plane_auth_policy() const;
  void set_control_plane_auth_policy(::istio::mesh::v1alpha1::AuthenticationPolicy value);

  // int32 stat_name_length = 15;
  void clear_stat_name_length();
  static const int kStatNameLengthFieldNumber = 15;
  ::google::protobuf::int32 stat_name_length() const;
  void set_stat_name_length(::google::protobuf::int32 value);

  // int32 concurrency = 16;
  void clear_concurrency();
  static const int kConcurrencyFieldNumber = 16;
  ::google::protobuf::int32 concurrency() const;
  void set_concurrency(::google::protobuf::int32 value);

  // .istio.mesh.v1alpha1.ProxyConfig.InboundInterceptionMode interception_mode = 18;
  void clear_interception_mode();
  static const int kInterceptionModeFieldNumber = 18;
  ::istio::mesh::v1alpha1::ProxyConfig_InboundInterceptionMode interception_mode() const;
  void set_interception_mode(::istio::mesh::v1alpha1::ProxyConfig_InboundInterceptionMode value);

  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.ProxyConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr config_path_;
  ::google::protobuf::internal::ArenaStringPtr binary_path_;
  ::google::protobuf::internal::ArenaStringPtr service_cluster_;
  ::google::protobuf::internal::ArenaStringPtr discovery_address_;
  ::google::protobuf::internal::ArenaStringPtr zipkin_address_;
  ::google::protobuf::internal::ArenaStringPtr statsd_udp_address_;
  ::google::protobuf::internal::ArenaStringPtr availability_zone_;
  ::google::protobuf::internal::ArenaStringPtr custom_config_file_;
  ::google::protobuf::internal::ArenaStringPtr proxy_bootstrap_template_path_;
  ::google::protobuf::internal::ArenaStringPtr envoy_metrics_service_address_;
  ::google::protobuf::Duration* drain_duration_;
  ::google::protobuf::Duration* parent_shutdown_duration_;
  ::google::protobuf::Duration* discovery_refresh_delay_;
  ::google::protobuf::Duration* connect_timeout_;
  ::istio::mesh::v1alpha1::Tracing* tracing_;
  ::google::protobuf::int32 proxy_admin_port_;
  int control_plane_auth_policy_;
  ::google::protobuf::int32 stat_name_length_;
  ::google::protobuf::int32 concurrency_;
  int interception_mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsProxyConfigImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Tracing_Zipkin

// string address = 1;
inline void Tracing_Zipkin::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tracing_Zipkin::address() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Tracing.Zipkin.address)
  return address_.GetNoArena();
}
inline void Tracing_Zipkin::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Tracing.Zipkin.address)
}
#if LANG_CXX11
inline void Tracing_Zipkin::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.Tracing.Zipkin.address)
}
#endif
inline void Tracing_Zipkin::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.Tracing.Zipkin.address)
}
inline void Tracing_Zipkin::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.Tracing.Zipkin.address)
}
inline ::std::string* Tracing_Zipkin::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.Tracing.Zipkin.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tracing_Zipkin::release_address() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.Tracing.Zipkin.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tracing_Zipkin::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.Tracing.Zipkin.address)
}

// -------------------------------------------------------------------

// Tracing_Lightstep

// string address = 1;
inline void Tracing_Lightstep::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tracing_Lightstep::address() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Tracing.Lightstep.address)
  return address_.GetNoArena();
}
inline void Tracing_Lightstep::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Tracing.Lightstep.address)
}
#if LANG_CXX11
inline void Tracing_Lightstep::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.Tracing.Lightstep.address)
}
#endif
inline void Tracing_Lightstep::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.Tracing.Lightstep.address)
}
inline void Tracing_Lightstep::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.Tracing.Lightstep.address)
}
inline ::std::string* Tracing_Lightstep::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.Tracing.Lightstep.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tracing_Lightstep::release_address() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.Tracing.Lightstep.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tracing_Lightstep::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.Tracing.Lightstep.address)
}

// string access_token = 2;
inline void Tracing_Lightstep::clear_access_token() {
  access_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tracing_Lightstep::access_token() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Tracing.Lightstep.access_token)
  return access_token_.GetNoArena();
}
inline void Tracing_Lightstep::set_access_token(const ::std::string& value) {
  
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Tracing.Lightstep.access_token)
}
#if LANG_CXX11
inline void Tracing_Lightstep::set_access_token(::std::string&& value) {
  
  access_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.Tracing.Lightstep.access_token)
}
#endif
inline void Tracing_Lightstep::set_access_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.Tracing.Lightstep.access_token)
}
inline void Tracing_Lightstep::set_access_token(const char* value, size_t size) {
  
  access_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.Tracing.Lightstep.access_token)
}
inline ::std::string* Tracing_Lightstep::mutable_access_token() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.Tracing.Lightstep.access_token)
  return access_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tracing_Lightstep::release_access_token() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.Tracing.Lightstep.access_token)
  
  return access_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tracing_Lightstep::set_allocated_access_token(::std::string* access_token) {
  if (access_token != NULL) {
    
  } else {
    
  }
  access_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_token);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.Tracing.Lightstep.access_token)
}

// bool secure = 3;
inline void Tracing_Lightstep::clear_secure() {
  secure_ = false;
}
inline bool Tracing_Lightstep::secure() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Tracing.Lightstep.secure)
  return secure_;
}
inline void Tracing_Lightstep::set_secure(bool value) {
  
  secure_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Tracing.Lightstep.secure)
}

// string cacert_path = 4;
inline void Tracing_Lightstep::clear_cacert_path() {
  cacert_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Tracing_Lightstep::cacert_path() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Tracing.Lightstep.cacert_path)
  return cacert_path_.GetNoArena();
}
inline void Tracing_Lightstep::set_cacert_path(const ::std::string& value) {
  
  cacert_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Tracing.Lightstep.cacert_path)
}
#if LANG_CXX11
inline void Tracing_Lightstep::set_cacert_path(::std::string&& value) {
  
  cacert_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.Tracing.Lightstep.cacert_path)
}
#endif
inline void Tracing_Lightstep::set_cacert_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  cacert_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.Tracing.Lightstep.cacert_path)
}
inline void Tracing_Lightstep::set_cacert_path(const char* value, size_t size) {
  
  cacert_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.Tracing.Lightstep.cacert_path)
}
inline ::std::string* Tracing_Lightstep::mutable_cacert_path() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.Tracing.Lightstep.cacert_path)
  return cacert_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Tracing_Lightstep::release_cacert_path() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.Tracing.Lightstep.cacert_path)
  
  return cacert_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Tracing_Lightstep::set_allocated_cacert_path(::std::string* cacert_path) {
  if (cacert_path != NULL) {
    
  } else {
    
  }
  cacert_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cacert_path);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.Tracing.Lightstep.cacert_path)
}

// -------------------------------------------------------------------

// Tracing

// .istio.mesh.v1alpha1.Tracing.Zipkin zipkin = 1;
inline bool Tracing::has_zipkin() const {
  return tracer_case() == kZipkin;
}
inline void Tracing::set_has_zipkin() {
  _oneof_case_[0] = kZipkin;
}
inline void Tracing::clear_zipkin() {
  if (has_zipkin()) {
    delete tracer_.zipkin_;
    clear_has_tracer();
  }
}
inline ::istio::mesh::v1alpha1::Tracing_Zipkin* Tracing::release_zipkin() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.Tracing.zipkin)
  if (has_zipkin()) {
    clear_has_tracer();
      ::istio::mesh::v1alpha1::Tracing_Zipkin* temp = tracer_.zipkin_;
    tracer_.zipkin_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::istio::mesh::v1alpha1::Tracing_Zipkin& Tracing::zipkin() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Tracing.zipkin)
  return has_zipkin()
      ? *tracer_.zipkin_
      : *reinterpret_cast< ::istio::mesh::v1alpha1::Tracing_Zipkin*>(&::istio::mesh::v1alpha1::_Tracing_Zipkin_default_instance_);
}
inline ::istio::mesh::v1alpha1::Tracing_Zipkin* Tracing::mutable_zipkin() {
  if (!has_zipkin()) {
    clear_tracer();
    set_has_zipkin();
    tracer_.zipkin_ = new ::istio::mesh::v1alpha1::Tracing_Zipkin;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.Tracing.zipkin)
  return tracer_.zipkin_;
}

// .istio.mesh.v1alpha1.Tracing.Lightstep lightstep = 2;
inline bool Tracing::has_lightstep() const {
  return tracer_case() == kLightstep;
}
inline void Tracing::set_has_lightstep() {
  _oneof_case_[0] = kLightstep;
}
inline void Tracing::clear_lightstep() {
  if (has_lightstep()) {
    delete tracer_.lightstep_;
    clear_has_tracer();
  }
}
inline ::istio::mesh::v1alpha1::Tracing_Lightstep* Tracing::release_lightstep() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.Tracing.lightstep)
  if (has_lightstep()) {
    clear_has_tracer();
      ::istio::mesh::v1alpha1::Tracing_Lightstep* temp = tracer_.lightstep_;
    tracer_.lightstep_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::istio::mesh::v1alpha1::Tracing_Lightstep& Tracing::lightstep() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Tracing.lightstep)
  return has_lightstep()
      ? *tracer_.lightstep_
      : *reinterpret_cast< ::istio::mesh::v1alpha1::Tracing_Lightstep*>(&::istio::mesh::v1alpha1::_Tracing_Lightstep_default_instance_);
}
inline ::istio::mesh::v1alpha1::Tracing_Lightstep* Tracing::mutable_lightstep() {
  if (!has_lightstep()) {
    clear_tracer();
    set_has_lightstep();
    tracer_.lightstep_ = new ::istio::mesh::v1alpha1::Tracing_Lightstep;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.Tracing.lightstep)
  return tracer_.lightstep_;
}

inline bool Tracing::has_tracer() const {
  return tracer_case() != TRACER_NOT_SET;
}
inline void Tracing::clear_has_tracer() {
  _oneof_case_[0] = TRACER_NOT_SET;
}
inline Tracing::TracerCase Tracing::tracer_case() const {
  return Tracing::TracerCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// ProxyConfig

// string config_path = 1;
inline void ProxyConfig::clear_config_path() {
  config_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyConfig::config_path() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.config_path)
  return config_path_.GetNoArena();
}
inline void ProxyConfig::set_config_path(const ::std::string& value) {
  
  config_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.config_path)
}
#if LANG_CXX11
inline void ProxyConfig::set_config_path(::std::string&& value) {
  
  config_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.ProxyConfig.config_path)
}
#endif
inline void ProxyConfig::set_config_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  config_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.ProxyConfig.config_path)
}
inline void ProxyConfig::set_config_path(const char* value, size_t size) {
  
  config_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.ProxyConfig.config_path)
}
inline ::std::string* ProxyConfig::mutable_config_path() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.config_path)
  return config_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyConfig::release_config_path() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.config_path)
  
  return config_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConfig::set_allocated_config_path(::std::string* config_path) {
  if (config_path != NULL) {
    
  } else {
    
  }
  config_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), config_path);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.config_path)
}

// string binary_path = 2;
inline void ProxyConfig::clear_binary_path() {
  binary_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyConfig::binary_path() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.binary_path)
  return binary_path_.GetNoArena();
}
inline void ProxyConfig::set_binary_path(const ::std::string& value) {
  
  binary_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.binary_path)
}
#if LANG_CXX11
inline void ProxyConfig::set_binary_path(::std::string&& value) {
  
  binary_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.ProxyConfig.binary_path)
}
#endif
inline void ProxyConfig::set_binary_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  binary_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.ProxyConfig.binary_path)
}
inline void ProxyConfig::set_binary_path(const char* value, size_t size) {
  
  binary_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.ProxyConfig.binary_path)
}
inline ::std::string* ProxyConfig::mutable_binary_path() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.binary_path)
  return binary_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyConfig::release_binary_path() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.binary_path)
  
  return binary_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConfig::set_allocated_binary_path(::std::string* binary_path) {
  if (binary_path != NULL) {
    
  } else {
    
  }
  binary_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), binary_path);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.binary_path)
}

// string service_cluster = 3;
inline void ProxyConfig::clear_service_cluster() {
  service_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyConfig::service_cluster() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.service_cluster)
  return service_cluster_.GetNoArena();
}
inline void ProxyConfig::set_service_cluster(const ::std::string& value) {
  
  service_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.service_cluster)
}
#if LANG_CXX11
inline void ProxyConfig::set_service_cluster(::std::string&& value) {
  
  service_cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.ProxyConfig.service_cluster)
}
#endif
inline void ProxyConfig::set_service_cluster(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  service_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.ProxyConfig.service_cluster)
}
inline void ProxyConfig::set_service_cluster(const char* value, size_t size) {
  
  service_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.ProxyConfig.service_cluster)
}
inline ::std::string* ProxyConfig::mutable_service_cluster() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.service_cluster)
  return service_cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyConfig::release_service_cluster() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.service_cluster)
  
  return service_cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConfig::set_allocated_service_cluster(::std::string* service_cluster) {
  if (service_cluster != NULL) {
    
  } else {
    
  }
  service_cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service_cluster);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.service_cluster)
}

// .google.protobuf.Duration drain_duration = 4;
inline bool ProxyConfig::has_drain_duration() const {
  return this != internal_default_instance() && drain_duration_ != NULL;
}
inline const ::google::protobuf::Duration& ProxyConfig::drain_duration() const {
  const ::google::protobuf::Duration* p = drain_duration_;
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.drain_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* ProxyConfig::release_drain_duration() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.drain_duration)
  
  ::google::protobuf::Duration* temp = drain_duration_;
  drain_duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* ProxyConfig::mutable_drain_duration() {
  
  if (drain_duration_ == NULL) {
    drain_duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.drain_duration)
  return drain_duration_;
}
inline void ProxyConfig::set_allocated_drain_duration(::google::protobuf::Duration* drain_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(drain_duration_);
  }
  if (drain_duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(drain_duration)->GetArena();
    if (message_arena != submessage_arena) {
      drain_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, drain_duration, submessage_arena);
    }
    
  } else {
    
  }
  drain_duration_ = drain_duration;
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.drain_duration)
}

// .google.protobuf.Duration parent_shutdown_duration = 5;
inline bool ProxyConfig::has_parent_shutdown_duration() const {
  return this != internal_default_instance() && parent_shutdown_duration_ != NULL;
}
inline const ::google::protobuf::Duration& ProxyConfig::parent_shutdown_duration() const {
  const ::google::protobuf::Duration* p = parent_shutdown_duration_;
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.parent_shutdown_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* ProxyConfig::release_parent_shutdown_duration() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.parent_shutdown_duration)
  
  ::google::protobuf::Duration* temp = parent_shutdown_duration_;
  parent_shutdown_duration_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* ProxyConfig::mutable_parent_shutdown_duration() {
  
  if (parent_shutdown_duration_ == NULL) {
    parent_shutdown_duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.parent_shutdown_duration)
  return parent_shutdown_duration_;
}
inline void ProxyConfig::set_allocated_parent_shutdown_duration(::google::protobuf::Duration* parent_shutdown_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(parent_shutdown_duration_);
  }
  if (parent_shutdown_duration) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(parent_shutdown_duration)->GetArena();
    if (message_arena != submessage_arena) {
      parent_shutdown_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, parent_shutdown_duration, submessage_arena);
    }
    
  } else {
    
  }
  parent_shutdown_duration_ = parent_shutdown_duration;
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.parent_shutdown_duration)
}

// string discovery_address = 6;
inline void ProxyConfig::clear_discovery_address() {
  discovery_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyConfig::discovery_address() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.discovery_address)
  return discovery_address_.GetNoArena();
}
inline void ProxyConfig::set_discovery_address(const ::std::string& value) {
  
  discovery_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.discovery_address)
}
#if LANG_CXX11
inline void ProxyConfig::set_discovery_address(::std::string&& value) {
  
  discovery_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.ProxyConfig.discovery_address)
}
#endif
inline void ProxyConfig::set_discovery_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  discovery_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.ProxyConfig.discovery_address)
}
inline void ProxyConfig::set_discovery_address(const char* value, size_t size) {
  
  discovery_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.ProxyConfig.discovery_address)
}
inline ::std::string* ProxyConfig::mutable_discovery_address() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.discovery_address)
  return discovery_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyConfig::release_discovery_address() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.discovery_address)
  
  return discovery_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConfig::set_allocated_discovery_address(::std::string* discovery_address) {
  if (discovery_address != NULL) {
    
  } else {
    
  }
  discovery_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), discovery_address);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.discovery_address)
}

// .google.protobuf.Duration discovery_refresh_delay = 7 [deprecated = true];
inline bool ProxyConfig::has_discovery_refresh_delay() const {
  return this != internal_default_instance() && discovery_refresh_delay_ != NULL;
}
inline const ::google::protobuf::Duration& ProxyConfig::discovery_refresh_delay() const {
  const ::google::protobuf::Duration* p = discovery_refresh_delay_;
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.discovery_refresh_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* ProxyConfig::release_discovery_refresh_delay() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.discovery_refresh_delay)
  
  ::google::protobuf::Duration* temp = discovery_refresh_delay_;
  discovery_refresh_delay_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* ProxyConfig::mutable_discovery_refresh_delay() {
  
  if (discovery_refresh_delay_ == NULL) {
    discovery_refresh_delay_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.discovery_refresh_delay)
  return discovery_refresh_delay_;
}
inline void ProxyConfig::set_allocated_discovery_refresh_delay(::google::protobuf::Duration* discovery_refresh_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(discovery_refresh_delay_);
  }
  if (discovery_refresh_delay) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(discovery_refresh_delay)->GetArena();
    if (message_arena != submessage_arena) {
      discovery_refresh_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, discovery_refresh_delay, submessage_arena);
    }
    
  } else {
    
  }
  discovery_refresh_delay_ = discovery_refresh_delay;
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.discovery_refresh_delay)
}

// string zipkin_address = 8 [deprecated = true];
inline void ProxyConfig::clear_zipkin_address() {
  zipkin_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyConfig::zipkin_address() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.zipkin_address)
  return zipkin_address_.GetNoArena();
}
inline void ProxyConfig::set_zipkin_address(const ::std::string& value) {
  
  zipkin_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.zipkin_address)
}
#if LANG_CXX11
inline void ProxyConfig::set_zipkin_address(::std::string&& value) {
  
  zipkin_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.ProxyConfig.zipkin_address)
}
#endif
inline void ProxyConfig::set_zipkin_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  zipkin_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.ProxyConfig.zipkin_address)
}
inline void ProxyConfig::set_zipkin_address(const char* value, size_t size) {
  
  zipkin_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.ProxyConfig.zipkin_address)
}
inline ::std::string* ProxyConfig::mutable_zipkin_address() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.zipkin_address)
  return zipkin_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyConfig::release_zipkin_address() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.zipkin_address)
  
  return zipkin_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConfig::set_allocated_zipkin_address(::std::string* zipkin_address) {
  if (zipkin_address != NULL) {
    
  } else {
    
  }
  zipkin_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), zipkin_address);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.zipkin_address)
}

// .google.protobuf.Duration connect_timeout = 9;
inline bool ProxyConfig::has_connect_timeout() const {
  return this != internal_default_instance() && connect_timeout_ != NULL;
}
inline const ::google::protobuf::Duration& ProxyConfig::connect_timeout() const {
  const ::google::protobuf::Duration* p = connect_timeout_;
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.connect_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* ProxyConfig::release_connect_timeout() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.connect_timeout)
  
  ::google::protobuf::Duration* temp = connect_timeout_;
  connect_timeout_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* ProxyConfig::mutable_connect_timeout() {
  
  if (connect_timeout_ == NULL) {
    connect_timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.connect_timeout)
  return connect_timeout_;
}
inline void ProxyConfig::set_allocated_connect_timeout(::google::protobuf::Duration* connect_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connect_timeout_);
  }
  if (connect_timeout) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(connect_timeout)->GetArena();
    if (message_arena != submessage_arena) {
      connect_timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connect_timeout, submessage_arena);
    }
    
  } else {
    
  }
  connect_timeout_ = connect_timeout;
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.connect_timeout)
}

// string statsd_udp_address = 10;
inline void ProxyConfig::clear_statsd_udp_address() {
  statsd_udp_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyConfig::statsd_udp_address() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.statsd_udp_address)
  return statsd_udp_address_.GetNoArena();
}
inline void ProxyConfig::set_statsd_udp_address(const ::std::string& value) {
  
  statsd_udp_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.statsd_udp_address)
}
#if LANG_CXX11
inline void ProxyConfig::set_statsd_udp_address(::std::string&& value) {
  
  statsd_udp_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.ProxyConfig.statsd_udp_address)
}
#endif
inline void ProxyConfig::set_statsd_udp_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  statsd_udp_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.ProxyConfig.statsd_udp_address)
}
inline void ProxyConfig::set_statsd_udp_address(const char* value, size_t size) {
  
  statsd_udp_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.ProxyConfig.statsd_udp_address)
}
inline ::std::string* ProxyConfig::mutable_statsd_udp_address() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.statsd_udp_address)
  return statsd_udp_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyConfig::release_statsd_udp_address() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.statsd_udp_address)
  
  return statsd_udp_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConfig::set_allocated_statsd_udp_address(::std::string* statsd_udp_address) {
  if (statsd_udp_address != NULL) {
    
  } else {
    
  }
  statsd_udp_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), statsd_udp_address);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.statsd_udp_address)
}

// string envoy_metrics_service_address = 20;
inline void ProxyConfig::clear_envoy_metrics_service_address() {
  envoy_metrics_service_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyConfig::envoy_metrics_service_address() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.envoy_metrics_service_address)
  return envoy_metrics_service_address_.GetNoArena();
}
inline void ProxyConfig::set_envoy_metrics_service_address(const ::std::string& value) {
  
  envoy_metrics_service_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.envoy_metrics_service_address)
}
#if LANG_CXX11
inline void ProxyConfig::set_envoy_metrics_service_address(::std::string&& value) {
  
  envoy_metrics_service_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.ProxyConfig.envoy_metrics_service_address)
}
#endif
inline void ProxyConfig::set_envoy_metrics_service_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  envoy_metrics_service_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.ProxyConfig.envoy_metrics_service_address)
}
inline void ProxyConfig::set_envoy_metrics_service_address(const char* value, size_t size) {
  
  envoy_metrics_service_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.ProxyConfig.envoy_metrics_service_address)
}
inline ::std::string* ProxyConfig::mutable_envoy_metrics_service_address() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.envoy_metrics_service_address)
  return envoy_metrics_service_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyConfig::release_envoy_metrics_service_address() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.envoy_metrics_service_address)
  
  return envoy_metrics_service_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConfig::set_allocated_envoy_metrics_service_address(::std::string* envoy_metrics_service_address) {
  if (envoy_metrics_service_address != NULL) {
    
  } else {
    
  }
  envoy_metrics_service_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), envoy_metrics_service_address);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.envoy_metrics_service_address)
}

// int32 proxy_admin_port = 11;
inline void ProxyConfig::clear_proxy_admin_port() {
  proxy_admin_port_ = 0;
}
inline ::google::protobuf::int32 ProxyConfig::proxy_admin_port() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.proxy_admin_port)
  return proxy_admin_port_;
}
inline void ProxyConfig::set_proxy_admin_port(::google::protobuf::int32 value) {
  
  proxy_admin_port_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.proxy_admin_port)
}

// string availability_zone = 12 [deprecated = true];
inline void ProxyConfig::clear_availability_zone() {
  availability_zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyConfig::availability_zone() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.availability_zone)
  return availability_zone_.GetNoArena();
}
inline void ProxyConfig::set_availability_zone(const ::std::string& value) {
  
  availability_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.availability_zone)
}
#if LANG_CXX11
inline void ProxyConfig::set_availability_zone(::std::string&& value) {
  
  availability_zone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.ProxyConfig.availability_zone)
}
#endif
inline void ProxyConfig::set_availability_zone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  availability_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.ProxyConfig.availability_zone)
}
inline void ProxyConfig::set_availability_zone(const char* value, size_t size) {
  
  availability_zone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.ProxyConfig.availability_zone)
}
inline ::std::string* ProxyConfig::mutable_availability_zone() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.availability_zone)
  return availability_zone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyConfig::release_availability_zone() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.availability_zone)
  
  return availability_zone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConfig::set_allocated_availability_zone(::std::string* availability_zone) {
  if (availability_zone != NULL) {
    
  } else {
    
  }
  availability_zone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), availability_zone);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.availability_zone)
}

// .istio.mesh.v1alpha1.AuthenticationPolicy control_plane_auth_policy = 13;
inline void ProxyConfig::clear_control_plane_auth_policy() {
  control_plane_auth_policy_ = 0;
}
inline ::istio::mesh::v1alpha1::AuthenticationPolicy ProxyConfig::control_plane_auth_policy() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.control_plane_auth_policy)
  return static_cast< ::istio::mesh::v1alpha1::AuthenticationPolicy >(control_plane_auth_policy_);
}
inline void ProxyConfig::set_control_plane_auth_policy(::istio::mesh::v1alpha1::AuthenticationPolicy value) {
  
  control_plane_auth_policy_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.control_plane_auth_policy)
}

// string custom_config_file = 14;
inline void ProxyConfig::clear_custom_config_file() {
  custom_config_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyConfig::custom_config_file() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.custom_config_file)
  return custom_config_file_.GetNoArena();
}
inline void ProxyConfig::set_custom_config_file(const ::std::string& value) {
  
  custom_config_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.custom_config_file)
}
#if LANG_CXX11
inline void ProxyConfig::set_custom_config_file(::std::string&& value) {
  
  custom_config_file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.ProxyConfig.custom_config_file)
}
#endif
inline void ProxyConfig::set_custom_config_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  custom_config_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.ProxyConfig.custom_config_file)
}
inline void ProxyConfig::set_custom_config_file(const char* value, size_t size) {
  
  custom_config_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.ProxyConfig.custom_config_file)
}
inline ::std::string* ProxyConfig::mutable_custom_config_file() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.custom_config_file)
  return custom_config_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyConfig::release_custom_config_file() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.custom_config_file)
  
  return custom_config_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConfig::set_allocated_custom_config_file(::std::string* custom_config_file) {
  if (custom_config_file != NULL) {
    
  } else {
    
  }
  custom_config_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custom_config_file);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.custom_config_file)
}

// int32 stat_name_length = 15;
inline void ProxyConfig::clear_stat_name_length() {
  stat_name_length_ = 0;
}
inline ::google::protobuf::int32 ProxyConfig::stat_name_length() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.stat_name_length)
  return stat_name_length_;
}
inline void ProxyConfig::set_stat_name_length(::google::protobuf::int32 value) {
  
  stat_name_length_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.stat_name_length)
}

// int32 concurrency = 16;
inline void ProxyConfig::clear_concurrency() {
  concurrency_ = 0;
}
inline ::google::protobuf::int32 ProxyConfig::concurrency() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.concurrency)
  return concurrency_;
}
inline void ProxyConfig::set_concurrency(::google::protobuf::int32 value) {
  
  concurrency_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.concurrency)
}

// string proxy_bootstrap_template_path = 17;
inline void ProxyConfig::clear_proxy_bootstrap_template_path() {
  proxy_bootstrap_template_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyConfig::proxy_bootstrap_template_path() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.proxy_bootstrap_template_path)
  return proxy_bootstrap_template_path_.GetNoArena();
}
inline void ProxyConfig::set_proxy_bootstrap_template_path(const ::std::string& value) {
  
  proxy_bootstrap_template_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.proxy_bootstrap_template_path)
}
#if LANG_CXX11
inline void ProxyConfig::set_proxy_bootstrap_template_path(::std::string&& value) {
  
  proxy_bootstrap_template_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.ProxyConfig.proxy_bootstrap_template_path)
}
#endif
inline void ProxyConfig::set_proxy_bootstrap_template_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  proxy_bootstrap_template_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.ProxyConfig.proxy_bootstrap_template_path)
}
inline void ProxyConfig::set_proxy_bootstrap_template_path(const char* value, size_t size) {
  
  proxy_bootstrap_template_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.ProxyConfig.proxy_bootstrap_template_path)
}
inline ::std::string* ProxyConfig::mutable_proxy_bootstrap_template_path() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.proxy_bootstrap_template_path)
  return proxy_bootstrap_template_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyConfig::release_proxy_bootstrap_template_path() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.proxy_bootstrap_template_path)
  
  return proxy_bootstrap_template_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyConfig::set_allocated_proxy_bootstrap_template_path(::std::string* proxy_bootstrap_template_path) {
  if (proxy_bootstrap_template_path != NULL) {
    
  } else {
    
  }
  proxy_bootstrap_template_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy_bootstrap_template_path);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.proxy_bootstrap_template_path)
}

// .istio.mesh.v1alpha1.ProxyConfig.InboundInterceptionMode interception_mode = 18;
inline void ProxyConfig::clear_interception_mode() {
  interception_mode_ = 0;
}
inline ::istio::mesh::v1alpha1::ProxyConfig_InboundInterceptionMode ProxyConfig::interception_mode() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.interception_mode)
  return static_cast< ::istio::mesh::v1alpha1::ProxyConfig_InboundInterceptionMode >(interception_mode_);
}
inline void ProxyConfig::set_interception_mode(::istio::mesh::v1alpha1::ProxyConfig_InboundInterceptionMode value) {
  
  interception_mode_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ProxyConfig.interception_mode)
}

// .istio.mesh.v1alpha1.Tracing tracing = 19;
inline bool ProxyConfig::has_tracing() const {
  return this != internal_default_instance() && tracing_ != NULL;
}
inline void ProxyConfig::clear_tracing() {
  if (GetArenaNoVirtual() == NULL && tracing_ != NULL) {
    delete tracing_;
  }
  tracing_ = NULL;
}
inline const ::istio::mesh::v1alpha1::Tracing& ProxyConfig::tracing() const {
  const ::istio::mesh::v1alpha1::Tracing* p = tracing_;
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ProxyConfig.tracing)
  return p != NULL ? *p : *reinterpret_cast<const ::istio::mesh::v1alpha1::Tracing*>(
      &::istio::mesh::v1alpha1::_Tracing_default_instance_);
}
inline ::istio::mesh::v1alpha1::Tracing* ProxyConfig::release_tracing() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ProxyConfig.tracing)
  
  ::istio::mesh::v1alpha1::Tracing* temp = tracing_;
  tracing_ = NULL;
  return temp;
}
inline ::istio::mesh::v1alpha1::Tracing* ProxyConfig::mutable_tracing() {
  
  if (tracing_ == NULL) {
    tracing_ = new ::istio::mesh::v1alpha1::Tracing;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ProxyConfig.tracing)
  return tracing_;
}
inline void ProxyConfig::set_allocated_tracing(::istio::mesh::v1alpha1::Tracing* tracing) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tracing_;
  }
  if (tracing) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tracing = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tracing, submessage_arena);
    }
    
  } else {
    
  }
  tracing_ = tracing;
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ProxyConfig.tracing)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha1
}  // namespace mesh
}  // namespace istio

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::istio::mesh::v1alpha1::ProxyConfig_InboundInterceptionMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::istio::mesh::v1alpha1::ProxyConfig_InboundInterceptionMode>() {
  return ::istio::mesh::v1alpha1::ProxyConfig_InboundInterceptionMode_descriptor();
}
template <> struct is_proto_enum< ::istio::mesh::v1alpha1::AuthenticationPolicy> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::istio::mesh::v1alpha1::AuthenticationPolicy>() {
  return ::istio::mesh::v1alpha1::AuthenticationPolicy_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mesh_2fv1alpha1_2fproxy_2eproto__INCLUDED
