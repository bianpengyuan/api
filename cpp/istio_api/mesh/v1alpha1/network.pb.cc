// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mesh/v1alpha1/network.proto

#include "mesh/v1alpha1/network.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace istio {
namespace mesh {
namespace v1alpha1 {
class Network_NetworkEndpointsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Network_NetworkEndpoints>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr from_cidr_;
  ::google::protobuf::internal::ArenaStringPtr from_registry_;
} _Network_NetworkEndpoints_default_instance_;
class Network_IstioNetworkGatewayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Network_IstioNetworkGateway>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr registry_service_name_;
  ::google::protobuf::internal::ArenaStringPtr address_;
} _Network_IstioNetworkGateway_default_instance_;
class NetworkDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Network>
      _instance;
} _Network_default_instance_;
class MeshNetworks_NetworksEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeshNetworks_NetworksEntry_DoNotUse>
      _instance;
} _MeshNetworks_NetworksEntry_DoNotUse_default_instance_;
class MeshNetworksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeshNetworks>
      _instance;
} _MeshNetworks_default_instance_;
}  // namespace v1alpha1
}  // namespace mesh
}  // namespace istio
namespace protobuf_mesh_2fv1alpha1_2fnetwork_2eproto {
void InitDefaultsNetwork_NetworkEndpointsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mesh::v1alpha1::_Network_NetworkEndpoints_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::Network_NetworkEndpoints();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::Network_NetworkEndpoints::InitAsDefaultInstance();
}

void InitDefaultsNetwork_NetworkEndpoints() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNetwork_NetworkEndpointsImpl);
}

void InitDefaultsNetwork_IstioNetworkGatewayImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mesh::v1alpha1::_Network_IstioNetworkGateway_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::Network_IstioNetworkGateway();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::Network_IstioNetworkGateway::InitAsDefaultInstance();
}

void InitDefaultsNetwork_IstioNetworkGateway() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNetwork_IstioNetworkGatewayImpl);
}

void InitDefaultsNetworkImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsNetwork_NetworkEndpoints();
  protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsNetwork_IstioNetworkGateway();
  {
    void* ptr = &::istio::mesh::v1alpha1::_Network_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::Network();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::Network::InitAsDefaultInstance();
}

void InitDefaultsNetwork() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNetworkImpl);
}

void InitDefaultsMeshNetworks_NetworksEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsNetwork();
  {
    void* ptr = &::istio::mesh::v1alpha1::_MeshNetworks_NetworksEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::MeshNetworks_NetworksEntry_DoNotUse();
  }
  ::istio::mesh::v1alpha1::MeshNetworks_NetworksEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsMeshNetworks_NetworksEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMeshNetworks_NetworksEntry_DoNotUseImpl);
}

void InitDefaultsMeshNetworksImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsMeshNetworks_NetworksEntry_DoNotUse();
  {
    void* ptr = &::istio::mesh::v1alpha1::_MeshNetworks_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::MeshNetworks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::MeshNetworks::InitAsDefaultInstance();
}

void InitDefaultsMeshNetworks() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMeshNetworksImpl);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Network_NetworkEndpoints, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Network_NetworkEndpoints, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::istio::mesh::v1alpha1::Network_NetworkEndpointsDefaultTypeInternal, from_cidr_),
  offsetof(::istio::mesh::v1alpha1::Network_NetworkEndpointsDefaultTypeInternal, from_registry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Network_NetworkEndpoints, ne_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Network_IstioNetworkGateway, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Network_IstioNetworkGateway, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::istio::mesh::v1alpha1::Network_IstioNetworkGatewayDefaultTypeInternal, registry_service_name_),
  offsetof(::istio::mesh::v1alpha1::Network_IstioNetworkGatewayDefaultTypeInternal, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Network_IstioNetworkGateway, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Network_IstioNetworkGateway, locality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Network_IstioNetworkGateway, gw_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Network, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Network, endpoints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Network, gateways_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshNetworks_NetworksEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshNetworks_NetworksEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshNetworks_NetworksEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshNetworks_NetworksEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshNetworks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshNetworks, networks_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::istio::mesh::v1alpha1::Network_NetworkEndpoints)},
  { 8, -1, sizeof(::istio::mesh::v1alpha1::Network_IstioNetworkGateway)},
  { 18, -1, sizeof(::istio::mesh::v1alpha1::Network)},
  { 25, 32, sizeof(::istio::mesh::v1alpha1::MeshNetworks_NetworksEntry_DoNotUse)},
  { 34, -1, sizeof(::istio::mesh::v1alpha1::MeshNetworks)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_Network_NetworkEndpoints_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_Network_IstioNetworkGateway_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_Network_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_MeshNetworks_NetworksEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_MeshNetworks_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mesh/v1alpha1/network.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\033mesh/v1alpha1/network.proto\022\023istio.mes"
      "h.v1alpha1\"\310\002\n\007Network\022@\n\tendpoints\030\002 \003("
      "\0132-.istio.mesh.v1alpha1.Network.NetworkE"
      "ndpoints\022B\n\010gateways\030\003 \003(\01320.istio.mesh."
      "v1alpha1.Network.IstioNetworkGateway\032F\n\020"
      "NetworkEndpoints\022\023\n\tfrom_cidr\030\001 \001(\tH\000\022\027\n"
      "\rfrom_registry\030\002 \001(\tH\000B\004\n\002ne\032o\n\023IstioNet"
      "workGateway\022\037\n\025registry_service_name\030\001 \001"
      "(\tH\000\022\021\n\007address\030\002 \001(\tH\000\022\014\n\004port\030\003 \001(\r\022\020\n"
      "\010locality\030\004 \001(\tB\004\n\002gw\"\240\001\n\014MeshNetworks\022A"
      "\n\010networks\030\001 \003(\0132/.istio.mesh.v1alpha1.M"
      "eshNetworks.NetworksEntry\032M\n\rNetworksEnt"
      "ry\022\013\n\003key\030\001 \001(\t\022+\n\005value\030\002 \001(\0132\034.istio.m"
      "esh.v1alpha1.Network:\0028\001B\034Z\032istio.io/api"
      "/mesh/v1alpha1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 582);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mesh/v1alpha1/network.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mesh_2fv1alpha1_2fnetwork_2eproto
namespace istio {
namespace mesh {
namespace v1alpha1 {

// ===================================================================

void Network_NetworkEndpoints::InitAsDefaultInstance() {
  ::istio::mesh::v1alpha1::_Network_NetworkEndpoints_default_instance_.from_cidr_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::istio::mesh::v1alpha1::_Network_NetworkEndpoints_default_instance_.from_registry_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Network_NetworkEndpoints::kFromCidrFieldNumber;
const int Network_NetworkEndpoints::kFromRegistryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Network_NetworkEndpoints::Network_NetworkEndpoints()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsNetwork_NetworkEndpoints();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.Network.NetworkEndpoints)
}
Network_NetworkEndpoints::Network_NetworkEndpoints(const Network_NetworkEndpoints& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_ne();
  switch (from.ne_case()) {
    case kFromCidr: {
      set_from_cidr(from.from_cidr());
      break;
    }
    case kFromRegistry: {
      set_from_registry(from.from_registry());
      break;
    }
    case NE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.Network.NetworkEndpoints)
}

void Network_NetworkEndpoints::SharedCtor() {
  clear_has_ne();
  _cached_size_ = 0;
}

Network_NetworkEndpoints::~Network_NetworkEndpoints() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  SharedDtor();
}

void Network_NetworkEndpoints::SharedDtor() {
  if (has_ne()) {
    clear_ne();
  }
}

void Network_NetworkEndpoints::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Network_NetworkEndpoints::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Network_NetworkEndpoints& Network_NetworkEndpoints::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsNetwork_NetworkEndpoints();
  return *internal_default_instance();
}

Network_NetworkEndpoints* Network_NetworkEndpoints::New(::google::protobuf::Arena* arena) const {
  Network_NetworkEndpoints* n = new Network_NetworkEndpoints;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Network_NetworkEndpoints::clear_ne() {
// @@protoc_insertion_point(one_of_clear_start:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  switch (ne_case()) {
    case kFromCidr: {
      ne_.from_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kFromRegistry: {
      ne_.from_registry_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case NE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = NE_NOT_SET;
}


void Network_NetworkEndpoints::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_ne();
  _internal_metadata_.Clear();
}

bool Network_NetworkEndpoints::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_cidr = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_cidr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_cidr().data(), static_cast<int>(this->from_cidr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.Network.NetworkEndpoints.from_cidr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_registry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_registry()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_registry().data(), static_cast<int>(this->from_registry().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.Network.NetworkEndpoints.from_registry"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  return false;
#undef DO_
}

void Network_NetworkEndpoints::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_cidr = 1;
  if (has_from_cidr()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_cidr().data(), static_cast<int>(this->from_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Network.NetworkEndpoints.from_cidr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_cidr(), output);
  }

  // string from_registry = 2;
  if (has_from_registry()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_registry().data(), static_cast<int>(this->from_registry().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Network.NetworkEndpoints.from_registry");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_registry(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.Network.NetworkEndpoints)
}

::google::protobuf::uint8* Network_NetworkEndpoints::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_cidr = 1;
  if (has_from_cidr()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_cidr().data(), static_cast<int>(this->from_cidr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Network.NetworkEndpoints.from_cidr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_cidr(), target);
  }

  // string from_registry = 2;
  if (has_from_registry()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_registry().data(), static_cast<int>(this->from_registry().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Network.NetworkEndpoints.from_registry");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_registry(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  return target;
}

size_t Network_NetworkEndpoints::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (ne_case()) {
    // string from_cidr = 1;
    case kFromCidr: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->from_cidr());
      break;
    }
    // string from_registry = 2;
    case kFromRegistry: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->from_registry());
      break;
    }
    case NE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Network_NetworkEndpoints::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  GOOGLE_DCHECK_NE(&from, this);
  const Network_NetworkEndpoints* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Network_NetworkEndpoints>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.Network.NetworkEndpoints)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.Network.NetworkEndpoints)
    MergeFrom(*source);
  }
}

void Network_NetworkEndpoints::MergeFrom(const Network_NetworkEndpoints& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.ne_case()) {
    case kFromCidr: {
      set_from_cidr(from.from_cidr());
      break;
    }
    case kFromRegistry: {
      set_from_registry(from.from_registry());
      break;
    }
    case NE_NOT_SET: {
      break;
    }
  }
}

void Network_NetworkEndpoints::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Network_NetworkEndpoints::CopyFrom(const Network_NetworkEndpoints& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.Network.NetworkEndpoints)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Network_NetworkEndpoints::IsInitialized() const {
  return true;
}

void Network_NetworkEndpoints::Swap(Network_NetworkEndpoints* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Network_NetworkEndpoints::InternalSwap(Network_NetworkEndpoints* other) {
  using std::swap;
  swap(ne_, other->ne_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Network_NetworkEndpoints::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Network_IstioNetworkGateway::InitAsDefaultInstance() {
  ::istio::mesh::v1alpha1::_Network_IstioNetworkGateway_default_instance_.registry_service_name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::istio::mesh::v1alpha1::_Network_IstioNetworkGateway_default_instance_.address_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Network_IstioNetworkGateway::kRegistryServiceNameFieldNumber;
const int Network_IstioNetworkGateway::kAddressFieldNumber;
const int Network_IstioNetworkGateway::kPortFieldNumber;
const int Network_IstioNetworkGateway::kLocalityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Network_IstioNetworkGateway::Network_IstioNetworkGateway()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsNetwork_IstioNetworkGateway();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
}
Network_IstioNetworkGateway::Network_IstioNetworkGateway(const Network_IstioNetworkGateway& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  locality_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.locality().size() > 0) {
    locality_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locality_);
  }
  port_ = from.port_;
  clear_has_gw();
  switch (from.gw_case()) {
    case kRegistryServiceName: {
      set_registry_service_name(from.registry_service_name());
      break;
    }
    case kAddress: {
      set_address(from.address());
      break;
    }
    case GW_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
}

void Network_IstioNetworkGateway::SharedCtor() {
  locality_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  clear_has_gw();
  _cached_size_ = 0;
}

Network_IstioNetworkGateway::~Network_IstioNetworkGateway() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  SharedDtor();
}

void Network_IstioNetworkGateway::SharedDtor() {
  locality_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_gw()) {
    clear_gw();
  }
}

void Network_IstioNetworkGateway::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Network_IstioNetworkGateway::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Network_IstioNetworkGateway& Network_IstioNetworkGateway::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsNetwork_IstioNetworkGateway();
  return *internal_default_instance();
}

Network_IstioNetworkGateway* Network_IstioNetworkGateway::New(::google::protobuf::Arena* arena) const {
  Network_IstioNetworkGateway* n = new Network_IstioNetworkGateway;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Network_IstioNetworkGateway::clear_gw() {
// @@protoc_insertion_point(one_of_clear_start:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  switch (gw_case()) {
    case kRegistryServiceName: {
      gw_.registry_service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kAddress: {
      gw_.address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case GW_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = GW_NOT_SET;
}


void Network_IstioNetworkGateway::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  locality_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  port_ = 0u;
  clear_gw();
  _internal_metadata_.Clear();
}

bool Network_IstioNetworkGateway::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string registry_service_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_registry_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->registry_service_name().data(), static_cast<int>(this->registry_service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.Network.IstioNetworkGateway.registry_service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.Network.IstioNetworkGateway.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string locality = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locality()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locality().data(), static_cast<int>(this->locality().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.Network.IstioNetworkGateway.locality"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  return false;
#undef DO_
}

void Network_IstioNetworkGateway::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string registry_service_name = 1;
  if (has_registry_service_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->registry_service_name().data(), static_cast<int>(this->registry_service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Network.IstioNetworkGateway.registry_service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->registry_service_name(), output);
  }

  // string address = 2;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Network.IstioNetworkGateway.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  // string locality = 4;
  if (this->locality().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locality().data(), static_cast<int>(this->locality().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Network.IstioNetworkGateway.locality");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->locality(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
}

::google::protobuf::uint8* Network_IstioNetworkGateway::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string registry_service_name = 1;
  if (has_registry_service_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->registry_service_name().data(), static_cast<int>(this->registry_service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Network.IstioNetworkGateway.registry_service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->registry_service_name(), target);
  }

  // string address = 2;
  if (has_address()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Network.IstioNetworkGateway.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->port(), target);
  }

  // string locality = 4;
  if (this->locality().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locality().data(), static_cast<int>(this->locality().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Network.IstioNetworkGateway.locality");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->locality(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  return target;
}

size_t Network_IstioNetworkGateway::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string locality = 4;
  if (this->locality().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locality());
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  switch (gw_case()) {
    // string registry_service_name = 1;
    case kRegistryServiceName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->registry_service_name());
      break;
    }
    // string address = 2;
    case kAddress: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->address());
      break;
    }
    case GW_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Network_IstioNetworkGateway::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  GOOGLE_DCHECK_NE(&from, this);
  const Network_IstioNetworkGateway* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Network_IstioNetworkGateway>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
    MergeFrom(*source);
  }
}

void Network_IstioNetworkGateway::MergeFrom(const Network_IstioNetworkGateway& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.locality().size() > 0) {

    locality_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locality_);
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  switch (from.gw_case()) {
    case kRegistryServiceName: {
      set_registry_service_name(from.registry_service_name());
      break;
    }
    case kAddress: {
      set_address(from.address());
      break;
    }
    case GW_NOT_SET: {
      break;
    }
  }
}

void Network_IstioNetworkGateway::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Network_IstioNetworkGateway::CopyFrom(const Network_IstioNetworkGateway& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Network_IstioNetworkGateway::IsInitialized() const {
  return true;
}

void Network_IstioNetworkGateway::Swap(Network_IstioNetworkGateway* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Network_IstioNetworkGateway::InternalSwap(Network_IstioNetworkGateway* other) {
  using std::swap;
  locality_.Swap(&other->locality_);
  swap(port_, other->port_);
  swap(gw_, other->gw_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Network_IstioNetworkGateway::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Network::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Network::kEndpointsFieldNumber;
const int Network::kGatewaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Network::Network()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsNetwork();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.Network)
}
Network::Network(const Network& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      endpoints_(from.endpoints_),
      gateways_(from.gateways_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.Network)
}

void Network::SharedCtor() {
  _cached_size_ = 0;
}

Network::~Network() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.Network)
  SharedDtor();
}

void Network::SharedDtor() {
}

void Network::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Network::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Network& Network::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsNetwork();
  return *internal_default_instance();
}

Network* Network::New(::google::protobuf::Arena* arena) const {
  Network* n = new Network;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Network::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.Network)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  endpoints_.Clear();
  gateways_.Clear();
  _internal_metadata_.Clear();
}

bool Network::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.Network)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .istio.mesh.v1alpha1.Network.NetworkEndpoints endpoints = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_endpoints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.mesh.v1alpha1.Network.IstioNetworkGateway gateways = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_gateways()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.Network)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.Network)
  return false;
#undef DO_
}

void Network::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.Network)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mesh.v1alpha1.Network.NetworkEndpoints endpoints = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->endpoints(static_cast<int>(i)), output);
  }

  // repeated .istio.mesh.v1alpha1.Network.IstioNetworkGateway gateways = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gateways_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->gateways(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.Network)
}

::google::protobuf::uint8* Network::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.Network)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mesh.v1alpha1.Network.NetworkEndpoints endpoints = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->endpoints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->endpoints(static_cast<int>(i)), deterministic, target);
  }

  // repeated .istio.mesh.v1alpha1.Network.IstioNetworkGateway gateways = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->gateways_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->gateways(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.Network)
  return target;
}

size_t Network::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.Network)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.mesh.v1alpha1.Network.NetworkEndpoints endpoints = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->endpoints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->endpoints(static_cast<int>(i)));
    }
  }

  // repeated .istio.mesh.v1alpha1.Network.IstioNetworkGateway gateways = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->gateways_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->gateways(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Network::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.Network)
  GOOGLE_DCHECK_NE(&from, this);
  const Network* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Network>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.Network)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.Network)
    MergeFrom(*source);
  }
}

void Network::MergeFrom(const Network& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.Network)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  endpoints_.MergeFrom(from.endpoints_);
  gateways_.MergeFrom(from.gateways_);
}

void Network::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.Network)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Network::CopyFrom(const Network& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.Network)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Network::IsInitialized() const {
  return true;
}

void Network::Swap(Network* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Network::InternalSwap(Network* other) {
  using std::swap;
  endpoints_.InternalSwap(&other->endpoints_);
  gateways_.InternalSwap(&other->gateways_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Network::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

MeshNetworks_NetworksEntry_DoNotUse::MeshNetworks_NetworksEntry_DoNotUse() {}
MeshNetworks_NetworksEntry_DoNotUse::MeshNetworks_NetworksEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void MeshNetworks_NetworksEntry_DoNotUse::MergeFrom(const MeshNetworks_NetworksEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata MeshNetworks_NetworksEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::file_level_metadata[3];
}
void MeshNetworks_NetworksEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void MeshNetworks::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeshNetworks::kNetworksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeshNetworks::MeshNetworks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsMeshNetworks();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.MeshNetworks)
}
MeshNetworks::MeshNetworks(const MeshNetworks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  networks_.MergeFrom(from.networks_);
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.MeshNetworks)
}

void MeshNetworks::SharedCtor() {
  _cached_size_ = 0;
}

MeshNetworks::~MeshNetworks() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.MeshNetworks)
  SharedDtor();
}

void MeshNetworks::SharedDtor() {
}

void MeshNetworks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeshNetworks::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeshNetworks& MeshNetworks::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsMeshNetworks();
  return *internal_default_instance();
}

MeshNetworks* MeshNetworks::New(::google::protobuf::Arena* arena) const {
  MeshNetworks* n = new MeshNetworks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeshNetworks::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.MeshNetworks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  networks_.Clear();
  _internal_metadata_.Clear();
}

bool MeshNetworks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.MeshNetworks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .istio.mesh.v1alpha1.Network> networks = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          MeshNetworks_NetworksEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              MeshNetworks_NetworksEntry_DoNotUse,
              ::std::string, ::istio::mesh::v1alpha1::Network,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network > > parser(&networks_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshNetworks.NetworksEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.MeshNetworks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.MeshNetworks)
  return false;
#undef DO_
}

void MeshNetworks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.MeshNetworks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .istio.mesh.v1alpha1.Network> networks = 1;
  if (!this->networks().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mesh.v1alpha1.MeshNetworks.NetworksEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->networks().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->networks().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network >::const_iterator
          it = this->networks().begin();
          it != this->networks().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<MeshNetworks_NetworksEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(networks_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<MeshNetworks_NetworksEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network >::const_iterator
          it = this->networks().begin();
          it != this->networks().end(); ++it) {
        entry.reset(networks_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.MeshNetworks)
}

::google::protobuf::uint8* MeshNetworks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.MeshNetworks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .istio.mesh.v1alpha1.Network> networks = 1;
  if (!this->networks().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mesh.v1alpha1.MeshNetworks.NetworksEntry.key");
      }
    };

    if (deterministic &&
        this->networks().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->networks().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network >::const_iterator
          it = this->networks().begin();
          it != this->networks().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<MeshNetworks_NetworksEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(networks_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<MeshNetworks_NetworksEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network >::const_iterator
          it = this->networks().begin();
          it != this->networks().end(); ++it) {
        entry.reset(networks_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.MeshNetworks)
  return target;
}

size_t MeshNetworks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.MeshNetworks)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .istio.mesh.v1alpha1.Network> networks = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->networks_size());
  {
    ::google::protobuf::scoped_ptr<MeshNetworks_NetworksEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network >::const_iterator
        it = this->networks().begin();
        it != this->networks().end(); ++it) {
      entry.reset(networks_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeshNetworks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.MeshNetworks)
  GOOGLE_DCHECK_NE(&from, this);
  const MeshNetworks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeshNetworks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.MeshNetworks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.MeshNetworks)
    MergeFrom(*source);
  }
}

void MeshNetworks::MergeFrom(const MeshNetworks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.MeshNetworks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  networks_.MergeFrom(from.networks_);
}

void MeshNetworks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.MeshNetworks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeshNetworks::CopyFrom(const MeshNetworks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.MeshNetworks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeshNetworks::IsInitialized() const {
  return true;
}

void MeshNetworks::Swap(MeshNetworks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeshNetworks::InternalSwap(MeshNetworks* other) {
  using std::swap;
  networks_.Swap(&other->networks_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeshNetworks::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace mesh
}  // namespace istio

// @@protoc_insertion_point(global_scope)
