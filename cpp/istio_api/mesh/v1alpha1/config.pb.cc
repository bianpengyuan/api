// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mesh/v1alpha1/config.proto

#include "mesh/v1alpha1/config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace istio {
namespace mesh {
namespace v1alpha1 {
class MeshConfig_OutboundTrafficPolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeshConfig_OutboundTrafficPolicy>
      _instance;
} _MeshConfig_OutboundTrafficPolicy_default_instance_;
class MeshConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeshConfig>
      _instance;
} _MeshConfig_default_instance_;
class ConfigSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConfigSource>
      _instance;
} _ConfigSource_default_instance_;
class LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse>
      _instance;
} _LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse_default_instance_;
class LocalityLoadBalancerSetting_DistributeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalityLoadBalancerSetting_Distribute>
      _instance;
} _LocalityLoadBalancerSetting_Distribute_default_instance_;
class LocalityLoadBalancerSetting_FailoverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalityLoadBalancerSetting_Failover>
      _instance;
} _LocalityLoadBalancerSetting_Failover_default_instance_;
class LocalityLoadBalancerSettingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LocalityLoadBalancerSetting>
      _instance;
} _LocalityLoadBalancerSetting_default_instance_;
}  // namespace v1alpha1
}  // namespace mesh
}  // namespace istio
namespace protobuf_mesh_2fv1alpha1_2fconfig_2eproto {
void InitDefaultsMeshConfig_OutboundTrafficPolicyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mesh::v1alpha1::_MeshConfig_OutboundTrafficPolicy_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy::InitAsDefaultInstance();
}

void InitDefaultsMeshConfig_OutboundTrafficPolicy() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMeshConfig_OutboundTrafficPolicyImpl);
}

void InitDefaultsMeshConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  protobuf_networking_2fv1alpha3_2fdestination_5frule_2eproto::InitDefaultsConnectionPoolSettings_TCPSettings_TcpKeepalive();
  protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsProxyConfig();
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsMeshConfig_OutboundTrafficPolicy();
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsConfigSource();
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsLocalityLoadBalancerSetting();
  {
    void* ptr = &::istio::mesh::v1alpha1::_MeshConfig_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::MeshConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::MeshConfig::InitAsDefaultInstance();
}

void InitDefaultsMeshConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMeshConfigImpl);
}

void InitDefaultsConfigSourceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_networking_2fv1alpha3_2fdestination_5frule_2eproto::InitDefaultsTLSSettings();
  {
    void* ptr = &::istio::mesh::v1alpha1::_ConfigSource_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::ConfigSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::ConfigSource::InitAsDefaultInstance();
}

void InitDefaultsConfigSource() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsConfigSourceImpl);
}

void InitDefaultsLocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mesh::v1alpha1::_LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse();
  }
  ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsLocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUseImpl);
}

void InitDefaultsLocalityLoadBalancerSetting_DistributeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsLocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse();
  {
    void* ptr = &::istio::mesh::v1alpha1::_LocalityLoadBalancerSetting_Distribute_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute::InitAsDefaultInstance();
}

void InitDefaultsLocalityLoadBalancerSetting_Distribute() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLocalityLoadBalancerSetting_DistributeImpl);
}

void InitDefaultsLocalityLoadBalancerSetting_FailoverImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mesh::v1alpha1::_LocalityLoadBalancerSetting_Failover_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover::InitAsDefaultInstance();
}

void InitDefaultsLocalityLoadBalancerSetting_Failover() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLocalityLoadBalancerSetting_FailoverImpl);
}

void InitDefaultsLocalityLoadBalancerSettingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsLocalityLoadBalancerSetting_Distribute();
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsLocalityLoadBalancerSetting_Failover();
  {
    void* ptr = &::istio::mesh::v1alpha1::_LocalityLoadBalancerSetting_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting::InitAsDefaultInstance();
}

void InitDefaultsLocalityLoadBalancerSetting() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLocalityLoadBalancerSettingImpl);
}

::google::protobuf::Metadata file_level_metadata[7];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, mixer_check_server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, mixer_report_server_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, disable_policy_checks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, policy_check_fail_open_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, sidecar_to_telemetry_session_affinity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, proxy_listen_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, proxy_http_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, connect_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, tcp_keepalive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, ingress_class_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, ingress_service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, ingress_controller_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, auth_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, rds_refresh_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, enable_tracing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, access_log_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, access_log_format_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, access_log_encoding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, default_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, mixer_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, outbound_traffic_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, enable_client_side_policy_check_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, sds_uds_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, sds_refresh_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, config_sources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, enable_sds_token_mount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, sds_use_k8s_sa_jwt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, trust_domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, default_service_export_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, default_virtual_service_export_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, default_destination_rule_export_to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, root_namespace_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::MeshConfig, locality_lb_setting_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ConfigSource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ConfigSource, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ConfigSource, tls_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute, to_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover, to_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting, distribute_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting, failover_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy)},
  { 6, -1, sizeof(::istio::mesh::v1alpha1::MeshConfig)},
  { 44, -1, sizeof(::istio::mesh::v1alpha1::ConfigSource)},
  { 51, 58, sizeof(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse)},
  { 60, -1, sizeof(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute)},
  { 67, -1, sizeof(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover)},
  { 74, -1, sizeof(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_MeshConfig_OutboundTrafficPolicy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_MeshConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_ConfigSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_LocalityLoadBalancerSetting_Distribute_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_LocalityLoadBalancerSetting_Failover_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_LocalityLoadBalancerSetting_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mesh/v1alpha1/config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 7);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032mesh/v1alpha1/config.proto\022\023istio.mesh"
      ".v1alpha1\032\036google/protobuf/duration.prot"
      "o\032\031mesh/v1alpha1/proxy.proto\032*networking"
      "/v1alpha3/destination_rule.proto\"\367\r\n\nMes"
      "hConfig\022\032\n\022mixer_check_server\030\001 \001(\t\022\033\n\023m"
      "ixer_report_server\030\002 \001(\t\022\035\n\025disable_poli"
      "cy_checks\030\003 \001(\010\022\036\n\026policy_check_fail_ope"
      "n\030\031 \001(\010\022-\n%sidecar_to_telemetry_session_"
      "affinity\030\036 \001(\010\022\031\n\021proxy_listen_port\030\004 \001("
      "\005\022\027\n\017proxy_http_port\030\005 \001(\005\0222\n\017connect_ti"
      "meout\030\006 \001(\0132\031.google.protobuf.Duration\022a"
      "\n\rtcp_keepalive\030\034 \001(\0132J.istio.networking"
      ".v1alpha3.ConnectionPoolSettings.TCPSett"
      "ings.TcpKeepalive\022\025\n\ringress_class\030\007 \001(\t"
      "\022\027\n\017ingress_service\030\010 \001(\t\022V\n\027ingress_con"
      "troller_mode\030\t \001(\01625.istio.mesh.v1alpha1"
      ".MeshConfig.IngressControllerMode\022C\n\013aut"
      "h_policy\030\n \001(\0162*.istio.mesh.v1alpha1.Mes"
      "hConfig.AuthPolicyB\002\030\001\0228\n\021rds_refresh_de"
      "lay\030\013 \001(\0132\031.google.protobuf.DurationB\002\030\001"
      "\022\026\n\016enable_tracing\030\014 \001(\010\022\027\n\017access_log_f"
      "ile\030\r \001(\t\022\031\n\021access_log_format\030\030 \001(\t\022N\n\023"
      "access_log_encoding\030\033 \001(\01621.istio.mesh.v"
      "1alpha1.MeshConfig.AccessLogEncoding\0228\n\016"
      "default_config\030\016 \001(\0132 .istio.mesh.v1alph"
      "a1.ProxyConfig\022\031\n\rmixer_address\030\020 \001(\tB\002\030"
      "\001\022V\n\027outbound_traffic_policy\030\021 \001(\01325.ist"
      "io.mesh.v1alpha1.MeshConfig.OutboundTraf"
      "ficPolicy\022\'\n\037enable_client_side_policy_c"
      "heck\030\023 \001(\010\022\024\n\014sds_uds_path\030\024 \001(\t\0228\n\021sds_"
      "refresh_delay\030\025 \001(\0132\031.google.protobuf.Du"
      "rationB\002\030\001\0229\n\016config_sources\030\026 \003(\0132!.ist"
      "io.mesh.v1alpha1.ConfigSource\022\036\n\026enable_"
      "sds_token_mount\030\027 \001(\010\022\032\n\022sds_use_k8s_sa_"
      "jwt\030\035 \001(\010\022\024\n\014trust_domain\030\032 \001(\t\022!\n\031defau"
      "lt_service_export_to\030\037 \003(\t\022)\n!default_vi"
      "rtual_service_export_to\030  \003(\t\022*\n\"default"
      "_destination_rule_export_to\030! \003(\t\022\026\n\016roo"
      "t_namespace\030\" \001(\t\022M\n\023locality_lb_setting"
      "\030# \001(\01320.istio.mesh.v1alpha1.LocalityLoa"
      "dBalancerSetting\032\247\001\n\025OutboundTrafficPoli"
      "cy\022H\n\004mode\030\001 \001(\0162:.istio.mesh.v1alpha1.M"
      "eshConfig.OutboundTrafficPolicy.Mode\"D\n\004"
      "Mode\022\021\n\rREGISTRY_ONLY\020\000\022\r\n\tALLOW_ANY\020\001\"\004"
      "\010\002\020\002*\024VIRTUAL_SERVICE_ONLY\"9\n\025IngressCon"
      "trollerMode\022\007\n\003OFF\020\000\022\013\n\007DEFAULT\020\001\022\n\n\006STR"
      "ICT\020\002\"&\n\nAuthPolicy\022\010\n\004NONE\020\000\022\016\n\nMUTUAL_"
      "TLS\020\001\"\'\n\021AccessLogEncoding\022\010\n\004TEXT\020\000\022\010\n\004"
      "JSON\020\001J\004\010\017\020\020J\004\010\022\020\023\"]\n\014ConfigSource\022\017\n\007ad"
      "dress\030\001 \001(\t\022<\n\014tls_settings\030\002 \001(\0132&.isti"
      "o.networking.v1alpha3.TLSSettings\"\372\002\n\033Lo"
      "calityLoadBalancerSetting\022O\n\ndistribute\030"
      "\001 \003(\0132;.istio.mesh.v1alpha1.LocalityLoad"
      "BalancerSetting.Distribute\022K\n\010failover\030\002"
      " \003(\01329.istio.mesh.v1alpha1.LocalityLoadB"
      "alancerSetting.Failover\032\226\001\n\nDistribute\022\014"
      "\n\004from\030\001 \001(\t\022O\n\002to\030\002 \003(\0132C.istio.mesh.v1"
      "alpha1.LocalityLoadBalancerSetting.Distr"
      "ibute.ToEntry\032)\n\007ToEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
      "\005value\030\002 \001(\r:\0028\001\032$\n\010Failover\022\014\n\004from\030\001 \001"
      "(\t\022\n\n\002to\030\002 \001(\tB\034Z\032istio.io/api/mesh/v1al"
      "pha1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2452);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mesh/v1alpha1/config.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::AddDescriptors();
  ::protobuf_networking_2fv1alpha3_2fdestination_5frule_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mesh_2fv1alpha1_2fconfig_2eproto
namespace istio {
namespace mesh {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* MeshConfig_OutboundTrafficPolicy_Mode_descriptor() {
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_enum_descriptors[0];
}
bool MeshConfig_OutboundTrafficPolicy_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MeshConfig_OutboundTrafficPolicy_Mode MeshConfig_OutboundTrafficPolicy::REGISTRY_ONLY;
const MeshConfig_OutboundTrafficPolicy_Mode MeshConfig_OutboundTrafficPolicy::ALLOW_ANY;
const MeshConfig_OutboundTrafficPolicy_Mode MeshConfig_OutboundTrafficPolicy::Mode_MIN;
const MeshConfig_OutboundTrafficPolicy_Mode MeshConfig_OutboundTrafficPolicy::Mode_MAX;
const int MeshConfig_OutboundTrafficPolicy::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MeshConfig_IngressControllerMode_descriptor() {
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_enum_descriptors[1];
}
bool MeshConfig_IngressControllerMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MeshConfig_IngressControllerMode MeshConfig::OFF;
const MeshConfig_IngressControllerMode MeshConfig::DEFAULT;
const MeshConfig_IngressControllerMode MeshConfig::STRICT;
const MeshConfig_IngressControllerMode MeshConfig::IngressControllerMode_MIN;
const MeshConfig_IngressControllerMode MeshConfig::IngressControllerMode_MAX;
const int MeshConfig::IngressControllerMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MeshConfig_AuthPolicy_descriptor() {
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_enum_descriptors[2];
}
bool MeshConfig_AuthPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MeshConfig_AuthPolicy MeshConfig::NONE;
const MeshConfig_AuthPolicy MeshConfig::MUTUAL_TLS;
const MeshConfig_AuthPolicy MeshConfig::AuthPolicy_MIN;
const MeshConfig_AuthPolicy MeshConfig::AuthPolicy_MAX;
const int MeshConfig::AuthPolicy_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* MeshConfig_AccessLogEncoding_descriptor() {
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_enum_descriptors[3];
}
bool MeshConfig_AccessLogEncoding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MeshConfig_AccessLogEncoding MeshConfig::TEXT;
const MeshConfig_AccessLogEncoding MeshConfig::JSON;
const MeshConfig_AccessLogEncoding MeshConfig::AccessLogEncoding_MIN;
const MeshConfig_AccessLogEncoding MeshConfig::AccessLogEncoding_MAX;
const int MeshConfig::AccessLogEncoding_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void MeshConfig_OutboundTrafficPolicy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeshConfig_OutboundTrafficPolicy::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeshConfig_OutboundTrafficPolicy::MeshConfig_OutboundTrafficPolicy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsMeshConfig_OutboundTrafficPolicy();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
}
MeshConfig_OutboundTrafficPolicy::MeshConfig_OutboundTrafficPolicy(const MeshConfig_OutboundTrafficPolicy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
}

void MeshConfig_OutboundTrafficPolicy::SharedCtor() {
  mode_ = 0;
  _cached_size_ = 0;
}

MeshConfig_OutboundTrafficPolicy::~MeshConfig_OutboundTrafficPolicy() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
  SharedDtor();
}

void MeshConfig_OutboundTrafficPolicy::SharedDtor() {
}

void MeshConfig_OutboundTrafficPolicy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeshConfig_OutboundTrafficPolicy::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeshConfig_OutboundTrafficPolicy& MeshConfig_OutboundTrafficPolicy::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsMeshConfig_OutboundTrafficPolicy();
  return *internal_default_instance();
}

MeshConfig_OutboundTrafficPolicy* MeshConfig_OutboundTrafficPolicy::New(::google::protobuf::Arena* arena) const {
  MeshConfig_OutboundTrafficPolicy* n = new MeshConfig_OutboundTrafficPolicy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeshConfig_OutboundTrafficPolicy::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mode_ = 0;
  _internal_metadata_.Clear();
}

bool MeshConfig_OutboundTrafficPolicy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy.Mode mode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
  return false;
#undef DO_
}

void MeshConfig_OutboundTrafficPolicy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy.Mode mode = 1;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
}

::google::protobuf::uint8* MeshConfig_OutboundTrafficPolicy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy.Mode mode = 1;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
  return target;
}

size_t MeshConfig_OutboundTrafficPolicy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy.Mode mode = 1;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeshConfig_OutboundTrafficPolicy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  const MeshConfig_OutboundTrafficPolicy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeshConfig_OutboundTrafficPolicy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
    MergeFrom(*source);
  }
}

void MeshConfig_OutboundTrafficPolicy::MergeFrom(const MeshConfig_OutboundTrafficPolicy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void MeshConfig_OutboundTrafficPolicy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeshConfig_OutboundTrafficPolicy::CopyFrom(const MeshConfig_OutboundTrafficPolicy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeshConfig_OutboundTrafficPolicy::IsInitialized() const {
  return true;
}

void MeshConfig_OutboundTrafficPolicy::Swap(MeshConfig_OutboundTrafficPolicy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeshConfig_OutboundTrafficPolicy::InternalSwap(MeshConfig_OutboundTrafficPolicy* other) {
  using std::swap;
  swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeshConfig_OutboundTrafficPolicy::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MeshConfig::InitAsDefaultInstance() {
  ::istio::mesh::v1alpha1::_MeshConfig_default_instance_._instance.get_mutable()->connect_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::istio::mesh::v1alpha1::_MeshConfig_default_instance_._instance.get_mutable()->tcp_keepalive_ = const_cast< ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive*>(
      ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive::internal_default_instance());
  ::istio::mesh::v1alpha1::_MeshConfig_default_instance_._instance.get_mutable()->rds_refresh_delay_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::istio::mesh::v1alpha1::_MeshConfig_default_instance_._instance.get_mutable()->default_config_ = const_cast< ::istio::mesh::v1alpha1::ProxyConfig*>(
      ::istio::mesh::v1alpha1::ProxyConfig::internal_default_instance());
  ::istio::mesh::v1alpha1::_MeshConfig_default_instance_._instance.get_mutable()->outbound_traffic_policy_ = const_cast< ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy*>(
      ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy::internal_default_instance());
  ::istio::mesh::v1alpha1::_MeshConfig_default_instance_._instance.get_mutable()->sds_refresh_delay_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::istio::mesh::v1alpha1::_MeshConfig_default_instance_._instance.get_mutable()->locality_lb_setting_ = const_cast< ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting*>(
      ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting::internal_default_instance());
}
void MeshConfig::clear_connect_timeout() {
  if (GetArenaNoVirtual() == NULL && connect_timeout_ != NULL) {
    delete connect_timeout_;
  }
  connect_timeout_ = NULL;
}
void MeshConfig::clear_tcp_keepalive() {
  if (GetArenaNoVirtual() == NULL && tcp_keepalive_ != NULL) {
    delete tcp_keepalive_;
  }
  tcp_keepalive_ = NULL;
}
void MeshConfig::clear_rds_refresh_delay() {
  if (GetArenaNoVirtual() == NULL && rds_refresh_delay_ != NULL) {
    delete rds_refresh_delay_;
  }
  rds_refresh_delay_ = NULL;
}
void MeshConfig::clear_default_config() {
  if (GetArenaNoVirtual() == NULL && default_config_ != NULL) {
    delete default_config_;
  }
  default_config_ = NULL;
}
void MeshConfig::clear_sds_refresh_delay() {
  if (GetArenaNoVirtual() == NULL && sds_refresh_delay_ != NULL) {
    delete sds_refresh_delay_;
  }
  sds_refresh_delay_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeshConfig::kMixerCheckServerFieldNumber;
const int MeshConfig::kMixerReportServerFieldNumber;
const int MeshConfig::kDisablePolicyChecksFieldNumber;
const int MeshConfig::kPolicyCheckFailOpenFieldNumber;
const int MeshConfig::kSidecarToTelemetrySessionAffinityFieldNumber;
const int MeshConfig::kProxyListenPortFieldNumber;
const int MeshConfig::kProxyHttpPortFieldNumber;
const int MeshConfig::kConnectTimeoutFieldNumber;
const int MeshConfig::kTcpKeepaliveFieldNumber;
const int MeshConfig::kIngressClassFieldNumber;
const int MeshConfig::kIngressServiceFieldNumber;
const int MeshConfig::kIngressControllerModeFieldNumber;
const int MeshConfig::kAuthPolicyFieldNumber;
const int MeshConfig::kRdsRefreshDelayFieldNumber;
const int MeshConfig::kEnableTracingFieldNumber;
const int MeshConfig::kAccessLogFileFieldNumber;
const int MeshConfig::kAccessLogFormatFieldNumber;
const int MeshConfig::kAccessLogEncodingFieldNumber;
const int MeshConfig::kDefaultConfigFieldNumber;
const int MeshConfig::kMixerAddressFieldNumber;
const int MeshConfig::kOutboundTrafficPolicyFieldNumber;
const int MeshConfig::kEnableClientSidePolicyCheckFieldNumber;
const int MeshConfig::kSdsUdsPathFieldNumber;
const int MeshConfig::kSdsRefreshDelayFieldNumber;
const int MeshConfig::kConfigSourcesFieldNumber;
const int MeshConfig::kEnableSdsTokenMountFieldNumber;
const int MeshConfig::kSdsUseK8SSaJwtFieldNumber;
const int MeshConfig::kTrustDomainFieldNumber;
const int MeshConfig::kDefaultServiceExportToFieldNumber;
const int MeshConfig::kDefaultVirtualServiceExportToFieldNumber;
const int MeshConfig::kDefaultDestinationRuleExportToFieldNumber;
const int MeshConfig::kRootNamespaceFieldNumber;
const int MeshConfig::kLocalityLbSettingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeshConfig::MeshConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsMeshConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.MeshConfig)
}
MeshConfig::MeshConfig(const MeshConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      config_sources_(from.config_sources_),
      default_service_export_to_(from.default_service_export_to_),
      default_virtual_service_export_to_(from.default_virtual_service_export_to_),
      default_destination_rule_export_to_(from.default_destination_rule_export_to_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  mixer_check_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mixer_check_server().size() > 0) {
    mixer_check_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mixer_check_server_);
  }
  mixer_report_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mixer_report_server().size() > 0) {
    mixer_report_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mixer_report_server_);
  }
  ingress_class_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ingress_class().size() > 0) {
    ingress_class_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ingress_class_);
  }
  ingress_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ingress_service().size() > 0) {
    ingress_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ingress_service_);
  }
  access_log_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.access_log_file().size() > 0) {
    access_log_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_log_file_);
  }
  mixer_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mixer_address().size() > 0) {
    mixer_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mixer_address_);
  }
  sds_uds_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sds_uds_path().size() > 0) {
    sds_uds_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sds_uds_path_);
  }
  access_log_format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.access_log_format().size() > 0) {
    access_log_format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_log_format_);
  }
  trust_domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.trust_domain().size() > 0) {
    trust_domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trust_domain_);
  }
  root_namespace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.root_namespace().size() > 0) {
    root_namespace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.root_namespace_);
  }
  if (from.has_connect_timeout()) {
    connect_timeout_ = new ::google::protobuf::Duration(*from.connect_timeout_);
  } else {
    connect_timeout_ = NULL;
  }
  if (from.has_rds_refresh_delay()) {
    rds_refresh_delay_ = new ::google::protobuf::Duration(*from.rds_refresh_delay_);
  } else {
    rds_refresh_delay_ = NULL;
  }
  if (from.has_default_config()) {
    default_config_ = new ::istio::mesh::v1alpha1::ProxyConfig(*from.default_config_);
  } else {
    default_config_ = NULL;
  }
  if (from.has_outbound_traffic_policy()) {
    outbound_traffic_policy_ = new ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy(*from.outbound_traffic_policy_);
  } else {
    outbound_traffic_policy_ = NULL;
  }
  if (from.has_sds_refresh_delay()) {
    sds_refresh_delay_ = new ::google::protobuf::Duration(*from.sds_refresh_delay_);
  } else {
    sds_refresh_delay_ = NULL;
  }
  if (from.has_tcp_keepalive()) {
    tcp_keepalive_ = new ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive(*from.tcp_keepalive_);
  } else {
    tcp_keepalive_ = NULL;
  }
  if (from.has_locality_lb_setting()) {
    locality_lb_setting_ = new ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting(*from.locality_lb_setting_);
  } else {
    locality_lb_setting_ = NULL;
  }
  ::memcpy(&proxy_listen_port_, &from.proxy_listen_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&access_log_encoding_) -
    reinterpret_cast<char*>(&proxy_listen_port_)) + sizeof(access_log_encoding_));
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.MeshConfig)
}

void MeshConfig::SharedCtor() {
  mixer_check_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mixer_report_server_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ingress_class_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ingress_service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_log_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mixer_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sds_uds_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_log_format_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trust_domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  root_namespace_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&connect_timeout_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&access_log_encoding_) -
      reinterpret_cast<char*>(&connect_timeout_)) + sizeof(access_log_encoding_));
  _cached_size_ = 0;
}

MeshConfig::~MeshConfig() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.MeshConfig)
  SharedDtor();
}

void MeshConfig::SharedDtor() {
  mixer_check_server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mixer_report_server_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ingress_class_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ingress_service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_log_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mixer_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sds_uds_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_log_format_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trust_domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  root_namespace_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete connect_timeout_;
  if (this != internal_default_instance()) delete rds_refresh_delay_;
  if (this != internal_default_instance()) delete default_config_;
  if (this != internal_default_instance()) delete outbound_traffic_policy_;
  if (this != internal_default_instance()) delete sds_refresh_delay_;
  if (this != internal_default_instance()) delete tcp_keepalive_;
  if (this != internal_default_instance()) delete locality_lb_setting_;
}

void MeshConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeshConfig::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeshConfig& MeshConfig::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsMeshConfig();
  return *internal_default_instance();
}

MeshConfig* MeshConfig::New(::google::protobuf::Arena* arena) const {
  MeshConfig* n = new MeshConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeshConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.MeshConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_sources_.Clear();
  default_service_export_to_.Clear();
  default_virtual_service_export_to_.Clear();
  default_destination_rule_export_to_.Clear();
  mixer_check_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mixer_report_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ingress_class_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ingress_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_log_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mixer_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sds_uds_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_log_format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trust_domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  root_namespace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && connect_timeout_ != NULL) {
    delete connect_timeout_;
  }
  connect_timeout_ = NULL;
  if (GetArenaNoVirtual() == NULL && rds_refresh_delay_ != NULL) {
    delete rds_refresh_delay_;
  }
  rds_refresh_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && default_config_ != NULL) {
    delete default_config_;
  }
  default_config_ = NULL;
  if (GetArenaNoVirtual() == NULL && outbound_traffic_policy_ != NULL) {
    delete outbound_traffic_policy_;
  }
  outbound_traffic_policy_ = NULL;
  if (GetArenaNoVirtual() == NULL && sds_refresh_delay_ != NULL) {
    delete sds_refresh_delay_;
  }
  sds_refresh_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && tcp_keepalive_ != NULL) {
    delete tcp_keepalive_;
  }
  tcp_keepalive_ = NULL;
  if (GetArenaNoVirtual() == NULL && locality_lb_setting_ != NULL) {
    delete locality_lb_setting_;
  }
  locality_lb_setting_ = NULL;
  ::memset(&proxy_listen_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&access_log_encoding_) -
      reinterpret_cast<char*>(&proxy_listen_port_)) + sizeof(access_log_encoding_));
  _internal_metadata_.Clear();
}

bool MeshConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.MeshConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string mixer_check_server = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mixer_check_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mixer_check_server().data(), static_cast<int>(this->mixer_check_server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshConfig.mixer_check_server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mixer_report_server = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mixer_report_server()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mixer_report_server().data(), static_cast<int>(this->mixer_report_server().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshConfig.mixer_report_server"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool disable_policy_checks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &disable_policy_checks_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 proxy_listen_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &proxy_listen_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 proxy_http_port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &proxy_http_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration connect_timeout = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connect_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ingress_class = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ingress_class()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ingress_class().data(), static_cast<int>(this->ingress_class().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshConfig.ingress_class"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ingress_service = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ingress_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ingress_service().data(), static_cast<int>(this->ingress_service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshConfig.ingress_service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mesh.v1alpha1.MeshConfig.IngressControllerMode ingress_controller_mode = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ingress_controller_mode(static_cast< ::istio::mesh::v1alpha1::MeshConfig_IngressControllerMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mesh.v1alpha1.MeshConfig.AuthPolicy auth_policy = 10 [deprecated = true];
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_auth_policy(static_cast< ::istio::mesh::v1alpha1::MeshConfig_AuthPolicy >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration rds_refresh_delay = 11 [deprecated = true];
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rds_refresh_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_tracing = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_tracing_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string access_log_file = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_log_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_log_file().data(), static_cast<int>(this->access_log_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshConfig.access_log_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mesh.v1alpha1.ProxyConfig default_config = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_default_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mixer_address = 16 [deprecated = true];
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mixer_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mixer_address().data(), static_cast<int>(this->mixer_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshConfig.mixer_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy outbound_traffic_policy = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_outbound_traffic_policy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_client_side_policy_check = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_client_side_policy_check_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sds_uds_path = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sds_uds_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sds_uds_path().data(), static_cast<int>(this->sds_uds_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshConfig.sds_uds_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration sds_refresh_delay = 21 [deprecated = true];
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sds_refresh_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.mesh.v1alpha1.ConfigSource config_sources = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_config_sources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool enable_sds_token_mount = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 184 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &enable_sds_token_mount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string access_log_format = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_log_format()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_log_format().data(), static_cast<int>(this->access_log_format().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshConfig.access_log_format"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool policy_check_fail_open = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &policy_check_fail_open_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string trust_domain = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trust_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->trust_domain().data(), static_cast<int>(this->trust_domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshConfig.trust_domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mesh.v1alpha1.MeshConfig.AccessLogEncoding access_log_encoding = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_access_log_encoding(static_cast< ::istio::mesh::v1alpha1::MeshConfig_AccessLogEncoding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tcp_keepalive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sds_use_k8s_sa_jwt = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sds_use_k8s_sa_jwt_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sidecar_to_telemetry_session_affinity = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sidecar_to_telemetry_session_affinity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string default_service_export_to = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_default_service_export_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_service_export_to(this->default_service_export_to_size() - 1).data(),
            static_cast<int>(this->default_service_export_to(this->default_service_export_to_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshConfig.default_service_export_to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string default_virtual_service_export_to = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_default_virtual_service_export_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_virtual_service_export_to(this->default_virtual_service_export_to_size() - 1).data(),
            static_cast<int>(this->default_virtual_service_export_to(this->default_virtual_service_export_to_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string default_destination_rule_export_to = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_default_destination_rule_export_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_destination_rule_export_to(this->default_destination_rule_export_to_size() - 1).data(),
            static_cast<int>(this->default_destination_rule_export_to(this->default_destination_rule_export_to_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string root_namespace = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_root_namespace()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->root_namespace().data(), static_cast<int>(this->root_namespace().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.MeshConfig.root_namespace"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mesh.v1alpha1.LocalityLoadBalancerSetting locality_lb_setting = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_locality_lb_setting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.MeshConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.MeshConfig)
  return false;
#undef DO_
}

void MeshConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.MeshConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mixer_check_server = 1;
  if (this->mixer_check_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mixer_check_server().data(), static_cast<int>(this->mixer_check_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.mixer_check_server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->mixer_check_server(), output);
  }

  // string mixer_report_server = 2;
  if (this->mixer_report_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mixer_report_server().data(), static_cast<int>(this->mixer_report_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.mixer_report_server");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mixer_report_server(), output);
  }

  // bool disable_policy_checks = 3;
  if (this->disable_policy_checks() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->disable_policy_checks(), output);
  }

  // int32 proxy_listen_port = 4;
  if (this->proxy_listen_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->proxy_listen_port(), output);
  }

  // int32 proxy_http_port = 5;
  if (this->proxy_http_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->proxy_http_port(), output);
  }

  // .google.protobuf.Duration connect_timeout = 6;
  if (this->has_connect_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->connect_timeout_, output);
  }

  // string ingress_class = 7;
  if (this->ingress_class().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ingress_class().data(), static_cast<int>(this->ingress_class().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.ingress_class");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->ingress_class(), output);
  }

  // string ingress_service = 8;
  if (this->ingress_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ingress_service().data(), static_cast<int>(this->ingress_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.ingress_service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->ingress_service(), output);
  }

  // .istio.mesh.v1alpha1.MeshConfig.IngressControllerMode ingress_controller_mode = 9;
  if (this->ingress_controller_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      9, this->ingress_controller_mode(), output);
  }

  // .istio.mesh.v1alpha1.MeshConfig.AuthPolicy auth_policy = 10 [deprecated = true];
  if (this->auth_policy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      10, this->auth_policy(), output);
  }

  // .google.protobuf.Duration rds_refresh_delay = 11 [deprecated = true];
  if (this->has_rds_refresh_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->rds_refresh_delay_, output);
  }

  // bool enable_tracing = 12;
  if (this->enable_tracing() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->enable_tracing(), output);
  }

  // string access_log_file = 13;
  if (this->access_log_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_log_file().data(), static_cast<int>(this->access_log_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.access_log_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->access_log_file(), output);
  }

  // .istio.mesh.v1alpha1.ProxyConfig default_config = 14;
  if (this->has_default_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->default_config_, output);
  }

  // string mixer_address = 16 [deprecated = true];
  if (this->mixer_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mixer_address().data(), static_cast<int>(this->mixer_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.mixer_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->mixer_address(), output);
  }

  // .istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy outbound_traffic_policy = 17;
  if (this->has_outbound_traffic_policy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->outbound_traffic_policy_, output);
  }

  // bool enable_client_side_policy_check = 19;
  if (this->enable_client_side_policy_check() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->enable_client_side_policy_check(), output);
  }

  // string sds_uds_path = 20;
  if (this->sds_uds_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sds_uds_path().data(), static_cast<int>(this->sds_uds_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.sds_uds_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->sds_uds_path(), output);
  }

  // .google.protobuf.Duration sds_refresh_delay = 21 [deprecated = true];
  if (this->has_sds_refresh_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->sds_refresh_delay_, output);
  }

  // repeated .istio.mesh.v1alpha1.ConfigSource config_sources = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->config_sources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->config_sources(static_cast<int>(i)), output);
  }

  // bool enable_sds_token_mount = 23;
  if (this->enable_sds_token_mount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(23, this->enable_sds_token_mount(), output);
  }

  // string access_log_format = 24;
  if (this->access_log_format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_log_format().data(), static_cast<int>(this->access_log_format().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.access_log_format");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->access_log_format(), output);
  }

  // bool policy_check_fail_open = 25;
  if (this->policy_check_fail_open() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(25, this->policy_check_fail_open(), output);
  }

  // string trust_domain = 26;
  if (this->trust_domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trust_domain().data(), static_cast<int>(this->trust_domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.trust_domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26, this->trust_domain(), output);
  }

  // .istio.mesh.v1alpha1.MeshConfig.AccessLogEncoding access_log_encoding = 27;
  if (this->access_log_encoding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      27, this->access_log_encoding(), output);
  }

  // .istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 28;
  if (this->has_tcp_keepalive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, *this->tcp_keepalive_, output);
  }

  // bool sds_use_k8s_sa_jwt = 29;
  if (this->sds_use_k8s_sa_jwt() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(29, this->sds_use_k8s_sa_jwt(), output);
  }

  // bool sidecar_to_telemetry_session_affinity = 30;
  if (this->sidecar_to_telemetry_session_affinity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(30, this->sidecar_to_telemetry_session_affinity(), output);
  }

  // repeated string default_service_export_to = 31;
  for (int i = 0, n = this->default_service_export_to_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_service_export_to(i).data(), static_cast<int>(this->default_service_export_to(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.default_service_export_to");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      31, this->default_service_export_to(i), output);
  }

  // repeated string default_virtual_service_export_to = 32;
  for (int i = 0, n = this->default_virtual_service_export_to_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_virtual_service_export_to(i).data(), static_cast<int>(this->default_virtual_service_export_to(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      32, this->default_virtual_service_export_to(i), output);
  }

  // repeated string default_destination_rule_export_to = 33;
  for (int i = 0, n = this->default_destination_rule_export_to_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_destination_rule_export_to(i).data(), static_cast<int>(this->default_destination_rule_export_to(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      33, this->default_destination_rule_export_to(i), output);
  }

  // string root_namespace = 34;
  if (this->root_namespace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->root_namespace().data(), static_cast<int>(this->root_namespace().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.root_namespace");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      34, this->root_namespace(), output);
  }

  // .istio.mesh.v1alpha1.LocalityLoadBalancerSetting locality_lb_setting = 35;
  if (this->has_locality_lb_setting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, *this->locality_lb_setting_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.MeshConfig)
}

::google::protobuf::uint8* MeshConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.MeshConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string mixer_check_server = 1;
  if (this->mixer_check_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mixer_check_server().data(), static_cast<int>(this->mixer_check_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.mixer_check_server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->mixer_check_server(), target);
  }

  // string mixer_report_server = 2;
  if (this->mixer_report_server().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mixer_report_server().data(), static_cast<int>(this->mixer_report_server().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.mixer_report_server");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mixer_report_server(), target);
  }

  // bool disable_policy_checks = 3;
  if (this->disable_policy_checks() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->disable_policy_checks(), target);
  }

  // int32 proxy_listen_port = 4;
  if (this->proxy_listen_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->proxy_listen_port(), target);
  }

  // int32 proxy_http_port = 5;
  if (this->proxy_http_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->proxy_http_port(), target);
  }

  // .google.protobuf.Duration connect_timeout = 6;
  if (this->has_connect_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *this->connect_timeout_, deterministic, target);
  }

  // string ingress_class = 7;
  if (this->ingress_class().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ingress_class().data(), static_cast<int>(this->ingress_class().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.ingress_class");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->ingress_class(), target);
  }

  // string ingress_service = 8;
  if (this->ingress_service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ingress_service().data(), static_cast<int>(this->ingress_service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.ingress_service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->ingress_service(), target);
  }

  // .istio.mesh.v1alpha1.MeshConfig.IngressControllerMode ingress_controller_mode = 9;
  if (this->ingress_controller_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      9, this->ingress_controller_mode(), target);
  }

  // .istio.mesh.v1alpha1.MeshConfig.AuthPolicy auth_policy = 10 [deprecated = true];
  if (this->auth_policy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      10, this->auth_policy(), target);
  }

  // .google.protobuf.Duration rds_refresh_delay = 11 [deprecated = true];
  if (this->has_rds_refresh_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *this->rds_refresh_delay_, deterministic, target);
  }

  // bool enable_tracing = 12;
  if (this->enable_tracing() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->enable_tracing(), target);
  }

  // string access_log_file = 13;
  if (this->access_log_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_log_file().data(), static_cast<int>(this->access_log_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.access_log_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->access_log_file(), target);
  }

  // .istio.mesh.v1alpha1.ProxyConfig default_config = 14;
  if (this->has_default_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *this->default_config_, deterministic, target);
  }

  // string mixer_address = 16 [deprecated = true];
  if (this->mixer_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mixer_address().data(), static_cast<int>(this->mixer_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.mixer_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->mixer_address(), target);
  }

  // .istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy outbound_traffic_policy = 17;
  if (this->has_outbound_traffic_policy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, *this->outbound_traffic_policy_, deterministic, target);
  }

  // bool enable_client_side_policy_check = 19;
  if (this->enable_client_side_policy_check() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->enable_client_side_policy_check(), target);
  }

  // string sds_uds_path = 20;
  if (this->sds_uds_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sds_uds_path().data(), static_cast<int>(this->sds_uds_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.sds_uds_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->sds_uds_path(), target);
  }

  // .google.protobuf.Duration sds_refresh_delay = 21 [deprecated = true];
  if (this->has_sds_refresh_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, *this->sds_refresh_delay_, deterministic, target);
  }

  // repeated .istio.mesh.v1alpha1.ConfigSource config_sources = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->config_sources_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->config_sources(static_cast<int>(i)), deterministic, target);
  }

  // bool enable_sds_token_mount = 23;
  if (this->enable_sds_token_mount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(23, this->enable_sds_token_mount(), target);
  }

  // string access_log_format = 24;
  if (this->access_log_format().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_log_format().data(), static_cast<int>(this->access_log_format().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.access_log_format");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->access_log_format(), target);
  }

  // bool policy_check_fail_open = 25;
  if (this->policy_check_fail_open() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(25, this->policy_check_fail_open(), target);
  }

  // string trust_domain = 26;
  if (this->trust_domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->trust_domain().data(), static_cast<int>(this->trust_domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.trust_domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26, this->trust_domain(), target);
  }

  // .istio.mesh.v1alpha1.MeshConfig.AccessLogEncoding access_log_encoding = 27;
  if (this->access_log_encoding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      27, this->access_log_encoding(), target);
  }

  // .istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 28;
  if (this->has_tcp_keepalive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28, *this->tcp_keepalive_, deterministic, target);
  }

  // bool sds_use_k8s_sa_jwt = 29;
  if (this->sds_use_k8s_sa_jwt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(29, this->sds_use_k8s_sa_jwt(), target);
  }

  // bool sidecar_to_telemetry_session_affinity = 30;
  if (this->sidecar_to_telemetry_session_affinity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(30, this->sidecar_to_telemetry_session_affinity(), target);
  }

  // repeated string default_service_export_to = 31;
  for (int i = 0, n = this->default_service_export_to_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_service_export_to(i).data(), static_cast<int>(this->default_service_export_to(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.default_service_export_to");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(31, this->default_service_export_to(i), target);
  }

  // repeated string default_virtual_service_export_to = 32;
  for (int i = 0, n = this->default_virtual_service_export_to_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_virtual_service_export_to(i).data(), static_cast<int>(this->default_virtual_service_export_to(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(32, this->default_virtual_service_export_to(i), target);
  }

  // repeated string default_destination_rule_export_to = 33;
  for (int i = 0, n = this->default_destination_rule_export_to_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_destination_rule_export_to(i).data(), static_cast<int>(this->default_destination_rule_export_to(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(33, this->default_destination_rule_export_to(i), target);
  }

  // string root_namespace = 34;
  if (this->root_namespace().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->root_namespace().data(), static_cast<int>(this->root_namespace().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.MeshConfig.root_namespace");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        34, this->root_namespace(), target);
  }

  // .istio.mesh.v1alpha1.LocalityLoadBalancerSetting locality_lb_setting = 35;
  if (this->has_locality_lb_setting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35, *this->locality_lb_setting_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.MeshConfig)
  return target;
}

size_t MeshConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.MeshConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.mesh.v1alpha1.ConfigSource config_sources = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->config_sources_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->config_sources(static_cast<int>(i)));
    }
  }

  // repeated string default_service_export_to = 31;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->default_service_export_to_size());
  for (int i = 0, n = this->default_service_export_to_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->default_service_export_to(i));
  }

  // repeated string default_virtual_service_export_to = 32;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->default_virtual_service_export_to_size());
  for (int i = 0, n = this->default_virtual_service_export_to_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->default_virtual_service_export_to(i));
  }

  // repeated string default_destination_rule_export_to = 33;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->default_destination_rule_export_to_size());
  for (int i = 0, n = this->default_destination_rule_export_to_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->default_destination_rule_export_to(i));
  }

  // string mixer_check_server = 1;
  if (this->mixer_check_server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mixer_check_server());
  }

  // string mixer_report_server = 2;
  if (this->mixer_report_server().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mixer_report_server());
  }

  // string ingress_class = 7;
  if (this->ingress_class().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ingress_class());
  }

  // string ingress_service = 8;
  if (this->ingress_service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ingress_service());
  }

  // string access_log_file = 13;
  if (this->access_log_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_log_file());
  }

  // string mixer_address = 16 [deprecated = true];
  if (this->mixer_address().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mixer_address());
  }

  // string sds_uds_path = 20;
  if (this->sds_uds_path().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sds_uds_path());
  }

  // string access_log_format = 24;
  if (this->access_log_format().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_log_format());
  }

  // string trust_domain = 26;
  if (this->trust_domain().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trust_domain());
  }

  // string root_namespace = 34;
  if (this->root_namespace().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->root_namespace());
  }

  // .google.protobuf.Duration connect_timeout = 6;
  if (this->has_connect_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->connect_timeout_);
  }

  // .google.protobuf.Duration rds_refresh_delay = 11 [deprecated = true];
  if (this->has_rds_refresh_delay()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rds_refresh_delay_);
  }

  // .istio.mesh.v1alpha1.ProxyConfig default_config = 14;
  if (this->has_default_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->default_config_);
  }

  // .istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy outbound_traffic_policy = 17;
  if (this->has_outbound_traffic_policy()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->outbound_traffic_policy_);
  }

  // .google.protobuf.Duration sds_refresh_delay = 21 [deprecated = true];
  if (this->has_sds_refresh_delay()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sds_refresh_delay_);
  }

  // .istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 28;
  if (this->has_tcp_keepalive()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tcp_keepalive_);
  }

  // .istio.mesh.v1alpha1.LocalityLoadBalancerSetting locality_lb_setting = 35;
  if (this->has_locality_lb_setting()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->locality_lb_setting_);
  }

  // int32 proxy_listen_port = 4;
  if (this->proxy_listen_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->proxy_listen_port());
  }

  // int32 proxy_http_port = 5;
  if (this->proxy_http_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->proxy_http_port());
  }

  // .istio.mesh.v1alpha1.MeshConfig.IngressControllerMode ingress_controller_mode = 9;
  if (this->ingress_controller_mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ingress_controller_mode());
  }

  // .istio.mesh.v1alpha1.MeshConfig.AuthPolicy auth_policy = 10 [deprecated = true];
  if (this->auth_policy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->auth_policy());
  }

  // bool disable_policy_checks = 3;
  if (this->disable_policy_checks() != 0) {
    total_size += 1 + 1;
  }

  // bool policy_check_fail_open = 25;
  if (this->policy_check_fail_open() != 0) {
    total_size += 2 + 1;
  }

  // bool sidecar_to_telemetry_session_affinity = 30;
  if (this->sidecar_to_telemetry_session_affinity() != 0) {
    total_size += 2 + 1;
  }

  // bool enable_tracing = 12;
  if (this->enable_tracing() != 0) {
    total_size += 1 + 1;
  }

  // bool enable_client_side_policy_check = 19;
  if (this->enable_client_side_policy_check() != 0) {
    total_size += 2 + 1;
  }

  // bool enable_sds_token_mount = 23;
  if (this->enable_sds_token_mount() != 0) {
    total_size += 2 + 1;
  }

  // bool sds_use_k8s_sa_jwt = 29;
  if (this->sds_use_k8s_sa_jwt() != 0) {
    total_size += 2 + 1;
  }

  // .istio.mesh.v1alpha1.MeshConfig.AccessLogEncoding access_log_encoding = 27;
  if (this->access_log_encoding() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->access_log_encoding());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeshConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.MeshConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MeshConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeshConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.MeshConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.MeshConfig)
    MergeFrom(*source);
  }
}

void MeshConfig::MergeFrom(const MeshConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.MeshConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  config_sources_.MergeFrom(from.config_sources_);
  default_service_export_to_.MergeFrom(from.default_service_export_to_);
  default_virtual_service_export_to_.MergeFrom(from.default_virtual_service_export_to_);
  default_destination_rule_export_to_.MergeFrom(from.default_destination_rule_export_to_);
  if (from.mixer_check_server().size() > 0) {

    mixer_check_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mixer_check_server_);
  }
  if (from.mixer_report_server().size() > 0) {

    mixer_report_server_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mixer_report_server_);
  }
  if (from.ingress_class().size() > 0) {

    ingress_class_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ingress_class_);
  }
  if (from.ingress_service().size() > 0) {

    ingress_service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ingress_service_);
  }
  if (from.access_log_file().size() > 0) {

    access_log_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_log_file_);
  }
  if (from.mixer_address().size() > 0) {

    mixer_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mixer_address_);
  }
  if (from.sds_uds_path().size() > 0) {

    sds_uds_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sds_uds_path_);
  }
  if (from.access_log_format().size() > 0) {

    access_log_format_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_log_format_);
  }
  if (from.trust_domain().size() > 0) {

    trust_domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trust_domain_);
  }
  if (from.root_namespace().size() > 0) {

    root_namespace_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.root_namespace_);
  }
  if (from.has_connect_timeout()) {
    mutable_connect_timeout()->::google::protobuf::Duration::MergeFrom(from.connect_timeout());
  }
  if (from.has_rds_refresh_delay()) {
    mutable_rds_refresh_delay()->::google::protobuf::Duration::MergeFrom(from.rds_refresh_delay());
  }
  if (from.has_default_config()) {
    mutable_default_config()->::istio::mesh::v1alpha1::ProxyConfig::MergeFrom(from.default_config());
  }
  if (from.has_outbound_traffic_policy()) {
    mutable_outbound_traffic_policy()->::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy::MergeFrom(from.outbound_traffic_policy());
  }
  if (from.has_sds_refresh_delay()) {
    mutable_sds_refresh_delay()->::google::protobuf::Duration::MergeFrom(from.sds_refresh_delay());
  }
  if (from.has_tcp_keepalive()) {
    mutable_tcp_keepalive()->::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive::MergeFrom(from.tcp_keepalive());
  }
  if (from.has_locality_lb_setting()) {
    mutable_locality_lb_setting()->::istio::mesh::v1alpha1::LocalityLoadBalancerSetting::MergeFrom(from.locality_lb_setting());
  }
  if (from.proxy_listen_port() != 0) {
    set_proxy_listen_port(from.proxy_listen_port());
  }
  if (from.proxy_http_port() != 0) {
    set_proxy_http_port(from.proxy_http_port());
  }
  if (from.ingress_controller_mode() != 0) {
    set_ingress_controller_mode(from.ingress_controller_mode());
  }
  if (from.auth_policy() != 0) {
    set_auth_policy(from.auth_policy());
  }
  if (from.disable_policy_checks() != 0) {
    set_disable_policy_checks(from.disable_policy_checks());
  }
  if (from.policy_check_fail_open() != 0) {
    set_policy_check_fail_open(from.policy_check_fail_open());
  }
  if (from.sidecar_to_telemetry_session_affinity() != 0) {
    set_sidecar_to_telemetry_session_affinity(from.sidecar_to_telemetry_session_affinity());
  }
  if (from.enable_tracing() != 0) {
    set_enable_tracing(from.enable_tracing());
  }
  if (from.enable_client_side_policy_check() != 0) {
    set_enable_client_side_policy_check(from.enable_client_side_policy_check());
  }
  if (from.enable_sds_token_mount() != 0) {
    set_enable_sds_token_mount(from.enable_sds_token_mount());
  }
  if (from.sds_use_k8s_sa_jwt() != 0) {
    set_sds_use_k8s_sa_jwt(from.sds_use_k8s_sa_jwt());
  }
  if (from.access_log_encoding() != 0) {
    set_access_log_encoding(from.access_log_encoding());
  }
}

void MeshConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.MeshConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeshConfig::CopyFrom(const MeshConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.MeshConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeshConfig::IsInitialized() const {
  return true;
}

void MeshConfig::Swap(MeshConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeshConfig::InternalSwap(MeshConfig* other) {
  using std::swap;
  config_sources_.InternalSwap(&other->config_sources_);
  default_service_export_to_.InternalSwap(&other->default_service_export_to_);
  default_virtual_service_export_to_.InternalSwap(&other->default_virtual_service_export_to_);
  default_destination_rule_export_to_.InternalSwap(&other->default_destination_rule_export_to_);
  mixer_check_server_.Swap(&other->mixer_check_server_);
  mixer_report_server_.Swap(&other->mixer_report_server_);
  ingress_class_.Swap(&other->ingress_class_);
  ingress_service_.Swap(&other->ingress_service_);
  access_log_file_.Swap(&other->access_log_file_);
  mixer_address_.Swap(&other->mixer_address_);
  sds_uds_path_.Swap(&other->sds_uds_path_);
  access_log_format_.Swap(&other->access_log_format_);
  trust_domain_.Swap(&other->trust_domain_);
  root_namespace_.Swap(&other->root_namespace_);
  swap(connect_timeout_, other->connect_timeout_);
  swap(rds_refresh_delay_, other->rds_refresh_delay_);
  swap(default_config_, other->default_config_);
  swap(outbound_traffic_policy_, other->outbound_traffic_policy_);
  swap(sds_refresh_delay_, other->sds_refresh_delay_);
  swap(tcp_keepalive_, other->tcp_keepalive_);
  swap(locality_lb_setting_, other->locality_lb_setting_);
  swap(proxy_listen_port_, other->proxy_listen_port_);
  swap(proxy_http_port_, other->proxy_http_port_);
  swap(ingress_controller_mode_, other->ingress_controller_mode_);
  swap(auth_policy_, other->auth_policy_);
  swap(disable_policy_checks_, other->disable_policy_checks_);
  swap(policy_check_fail_open_, other->policy_check_fail_open_);
  swap(sidecar_to_telemetry_session_affinity_, other->sidecar_to_telemetry_session_affinity_);
  swap(enable_tracing_, other->enable_tracing_);
  swap(enable_client_side_policy_check_, other->enable_client_side_policy_check_);
  swap(enable_sds_token_mount_, other->enable_sds_token_mount_);
  swap(sds_use_k8s_sa_jwt_, other->sds_use_k8s_sa_jwt_);
  swap(access_log_encoding_, other->access_log_encoding_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeshConfig::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConfigSource::InitAsDefaultInstance() {
  ::istio::mesh::v1alpha1::_ConfigSource_default_instance_._instance.get_mutable()->tls_settings_ = const_cast< ::istio::networking::v1alpha3::TLSSettings*>(
      ::istio::networking::v1alpha3::TLSSettings::internal_default_instance());
}
void ConfigSource::clear_tls_settings() {
  if (GetArenaNoVirtual() == NULL && tls_settings_ != NULL) {
    delete tls_settings_;
  }
  tls_settings_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConfigSource::kAddressFieldNumber;
const int ConfigSource::kTlsSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConfigSource::ConfigSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsConfigSource();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.ConfigSource)
}
ConfigSource::ConfigSource(const ConfigSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.has_tls_settings()) {
    tls_settings_ = new ::istio::networking::v1alpha3::TLSSettings(*from.tls_settings_);
  } else {
    tls_settings_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.ConfigSource)
}

void ConfigSource::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tls_settings_ = NULL;
  _cached_size_ = 0;
}

ConfigSource::~ConfigSource() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.ConfigSource)
  SharedDtor();
}

void ConfigSource::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete tls_settings_;
}

void ConfigSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConfigSource::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConfigSource& ConfigSource::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsConfigSource();
  return *internal_default_instance();
}

ConfigSource* ConfigSource::New(::google::protobuf::Arena* arena) const {
  ConfigSource* n = new ConfigSource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConfigSource::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.ConfigSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && tls_settings_ != NULL) {
    delete tls_settings_;
  }
  tls_settings_ = NULL;
  _internal_metadata_.Clear();
}

bool ConfigSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.ConfigSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.ConfigSource.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.networking.v1alpha3.TLSSettings tls_settings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tls_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.ConfigSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.ConfigSource)
  return false;
#undef DO_
}

void ConfigSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.ConfigSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ConfigSource.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // .istio.networking.v1alpha3.TLSSettings tls_settings = 2;
  if (this->has_tls_settings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->tls_settings_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.ConfigSource)
}

::google::protobuf::uint8* ConfigSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.ConfigSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ConfigSource.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // .istio.networking.v1alpha3.TLSSettings tls_settings = 2;
  if (this->has_tls_settings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->tls_settings_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.ConfigSource)
  return target;
}

size_t ConfigSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.ConfigSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // .istio.networking.v1alpha3.TLSSettings tls_settings = 2;
  if (this->has_tls_settings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tls_settings_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConfigSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.ConfigSource)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConfigSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.ConfigSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.ConfigSource)
    MergeFrom(*source);
  }
}

void ConfigSource::MergeFrom(const ConfigSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.ConfigSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.has_tls_settings()) {
    mutable_tls_settings()->::istio::networking::v1alpha3::TLSSettings::MergeFrom(from.tls_settings());
  }
}

void ConfigSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.ConfigSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigSource::CopyFrom(const ConfigSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.ConfigSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigSource::IsInitialized() const {
  return true;
}

void ConfigSource::Swap(ConfigSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConfigSource::InternalSwap(ConfigSource* other) {
  using std::swap;
  address_.Swap(&other->address_);
  swap(tls_settings_, other->tls_settings_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConfigSource::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse::LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse() {}
LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse::LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse::MergeFrom(const LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_metadata[3];
}
void LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void LocalityLoadBalancerSetting_Distribute::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalityLoadBalancerSetting_Distribute::kFromFieldNumber;
const int LocalityLoadBalancerSetting_Distribute::kToFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalityLoadBalancerSetting_Distribute::LocalityLoadBalancerSetting_Distribute()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsLocalityLoadBalancerSetting_Distribute();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
}
LocalityLoadBalancerSetting_Distribute::LocalityLoadBalancerSetting_Distribute(const LocalityLoadBalancerSetting_Distribute& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  to_.MergeFrom(from.to_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
}

void LocalityLoadBalancerSetting_Distribute::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LocalityLoadBalancerSetting_Distribute::~LocalityLoadBalancerSetting_Distribute() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
  SharedDtor();
}

void LocalityLoadBalancerSetting_Distribute::SharedDtor() {
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LocalityLoadBalancerSetting_Distribute::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalityLoadBalancerSetting_Distribute::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalityLoadBalancerSetting_Distribute& LocalityLoadBalancerSetting_Distribute::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsLocalityLoadBalancerSetting_Distribute();
  return *internal_default_instance();
}

LocalityLoadBalancerSetting_Distribute* LocalityLoadBalancerSetting_Distribute::New(::google::protobuf::Arena* arena) const {
  LocalityLoadBalancerSetting_Distribute* n = new LocalityLoadBalancerSetting_Distribute;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocalityLoadBalancerSetting_Distribute::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  to_.Clear();
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LocalityLoadBalancerSetting_Distribute::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint32> to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse,
              ::std::string, ::google::protobuf::uint32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 > > parser(&to_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.ToEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
  return false;
#undef DO_
}

void LocalityLoadBalancerSetting_Distribute::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from(), output);
  }

  // map<string, uint32> to = 2;
  if (!this->to().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.ToEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->to().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->to().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->to().begin();
          it != this->to().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(to_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->to().begin();
          it != this->to().end(); ++it) {
        entry.reset(to_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
}

::google::protobuf::uint8* LocalityLoadBalancerSetting_Distribute::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }

  // map<string, uint32> to = 2;
  if (!this->to().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.ToEntry.key");
      }
    };

    if (deterministic &&
        this->to().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->to().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->to().begin();
          it != this->to().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(to_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
          it = this->to().begin();
          it != this->to().end(); ++it) {
        entry.reset(to_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
  return target;
}

size_t LocalityLoadBalancerSetting_Distribute::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, uint32> to = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->to_size());
  {
    ::google::protobuf::scoped_ptr<LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >::const_iterator
        it = this->to().begin();
        it != this->to().end(); ++it) {
      entry.reset(to_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalityLoadBalancerSetting_Distribute::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalityLoadBalancerSetting_Distribute* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalityLoadBalancerSetting_Distribute>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
    MergeFrom(*source);
  }
}

void LocalityLoadBalancerSetting_Distribute::MergeFrom(const LocalityLoadBalancerSetting_Distribute& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  to_.MergeFrom(from.to_);
  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
}

void LocalityLoadBalancerSetting_Distribute::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalityLoadBalancerSetting_Distribute::CopyFrom(const LocalityLoadBalancerSetting_Distribute& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalityLoadBalancerSetting_Distribute::IsInitialized() const {
  return true;
}

void LocalityLoadBalancerSetting_Distribute::Swap(LocalityLoadBalancerSetting_Distribute* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalityLoadBalancerSetting_Distribute::InternalSwap(LocalityLoadBalancerSetting_Distribute* other) {
  using std::swap;
  to_.Swap(&other->to_);
  from_.Swap(&other->from_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocalityLoadBalancerSetting_Distribute::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalityLoadBalancerSetting_Failover::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalityLoadBalancerSetting_Failover::kFromFieldNumber;
const int LocalityLoadBalancerSetting_Failover::kToFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalityLoadBalancerSetting_Failover::LocalityLoadBalancerSetting_Failover()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsLocalityLoadBalancerSetting_Failover();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
}
LocalityLoadBalancerSetting_Failover::LocalityLoadBalancerSetting_Failover(const LocalityLoadBalancerSetting_Failover& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
}

void LocalityLoadBalancerSetting_Failover::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LocalityLoadBalancerSetting_Failover::~LocalityLoadBalancerSetting_Failover() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
  SharedDtor();
}

void LocalityLoadBalancerSetting_Failover::SharedDtor() {
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LocalityLoadBalancerSetting_Failover::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalityLoadBalancerSetting_Failover::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalityLoadBalancerSetting_Failover& LocalityLoadBalancerSetting_Failover::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsLocalityLoadBalancerSetting_Failover();
  return *internal_default_instance();
}

LocalityLoadBalancerSetting_Failover* LocalityLoadBalancerSetting_Failover::New(::google::protobuf::Arena* arena) const {
  LocalityLoadBalancerSetting_Failover* n = new LocalityLoadBalancerSetting_Failover;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocalityLoadBalancerSetting_Failover::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LocalityLoadBalancerSetting_Failover::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
  return false;
#undef DO_
}

void LocalityLoadBalancerSetting_Failover::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from(), output);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
}

::google::protobuf::uint8* LocalityLoadBalancerSetting_Failover::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
  return target;
}

size_t LocalityLoadBalancerSetting_Failover::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string to = 2;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalityLoadBalancerSetting_Failover::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalityLoadBalancerSetting_Failover* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalityLoadBalancerSetting_Failover>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
    MergeFrom(*source);
  }
}

void LocalityLoadBalancerSetting_Failover::MergeFrom(const LocalityLoadBalancerSetting_Failover& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
}

void LocalityLoadBalancerSetting_Failover::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalityLoadBalancerSetting_Failover::CopyFrom(const LocalityLoadBalancerSetting_Failover& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalityLoadBalancerSetting_Failover::IsInitialized() const {
  return true;
}

void LocalityLoadBalancerSetting_Failover::Swap(LocalityLoadBalancerSetting_Failover* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalityLoadBalancerSetting_Failover::InternalSwap(LocalityLoadBalancerSetting_Failover* other) {
  using std::swap;
  from_.Swap(&other->from_);
  to_.Swap(&other->to_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocalityLoadBalancerSetting_Failover::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LocalityLoadBalancerSetting::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LocalityLoadBalancerSetting::kDistributeFieldNumber;
const int LocalityLoadBalancerSetting::kFailoverFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LocalityLoadBalancerSetting::LocalityLoadBalancerSetting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsLocalityLoadBalancerSetting();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
}
LocalityLoadBalancerSetting::LocalityLoadBalancerSetting(const LocalityLoadBalancerSetting& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      distribute_(from.distribute_),
      failover_(from.failover_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
}

void LocalityLoadBalancerSetting::SharedCtor() {
  _cached_size_ = 0;
}

LocalityLoadBalancerSetting::~LocalityLoadBalancerSetting() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
  SharedDtor();
}

void LocalityLoadBalancerSetting::SharedDtor() {
}

void LocalityLoadBalancerSetting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LocalityLoadBalancerSetting::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LocalityLoadBalancerSetting& LocalityLoadBalancerSetting::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsLocalityLoadBalancerSetting();
  return *internal_default_instance();
}

LocalityLoadBalancerSetting* LocalityLoadBalancerSetting::New(::google::protobuf::Arena* arena) const {
  LocalityLoadBalancerSetting* n = new LocalityLoadBalancerSetting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LocalityLoadBalancerSetting::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  distribute_.Clear();
  failover_.Clear();
  _internal_metadata_.Clear();
}

bool LocalityLoadBalancerSetting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute distribute = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_distribute()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover failover = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_failover()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
  return false;
#undef DO_
}

void LocalityLoadBalancerSetting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute distribute = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->distribute_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->distribute(static_cast<int>(i)), output);
  }

  // repeated .istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover failover = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->failover_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->failover(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
}

::google::protobuf::uint8* LocalityLoadBalancerSetting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute distribute = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->distribute_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->distribute(static_cast<int>(i)), deterministic, target);
  }

  // repeated .istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover failover = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->failover_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->failover(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
  return target;
}

size_t LocalityLoadBalancerSetting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute distribute = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->distribute_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->distribute(static_cast<int>(i)));
    }
  }

  // repeated .istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover failover = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->failover_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->failover(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LocalityLoadBalancerSetting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
  GOOGLE_DCHECK_NE(&from, this);
  const LocalityLoadBalancerSetting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LocalityLoadBalancerSetting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
    MergeFrom(*source);
  }
}

void LocalityLoadBalancerSetting::MergeFrom(const LocalityLoadBalancerSetting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  distribute_.MergeFrom(from.distribute_);
  failover_.MergeFrom(from.failover_);
}

void LocalityLoadBalancerSetting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocalityLoadBalancerSetting::CopyFrom(const LocalityLoadBalancerSetting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocalityLoadBalancerSetting::IsInitialized() const {
  return true;
}

void LocalityLoadBalancerSetting::Swap(LocalityLoadBalancerSetting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LocalityLoadBalancerSetting::InternalSwap(LocalityLoadBalancerSetting* other) {
  using std::swap;
  distribute_.InternalSwap(&other->distribute_);
  failover_.InternalSwap(&other->failover_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LocalityLoadBalancerSetting::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace mesh
}  // namespace istio

// @@protoc_insertion_point(global_scope)
