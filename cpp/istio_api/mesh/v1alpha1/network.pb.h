// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mesh/v1alpha1/network.proto

#ifndef PROTOBUF_mesh_2fv1alpha1_2fnetwork_2eproto__INCLUDED
#define PROTOBUF_mesh_2fv1alpha1_2fnetwork_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_mesh_2fv1alpha1_2fnetwork_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsNetwork_NetworkEndpointsImpl();
void InitDefaultsNetwork_NetworkEndpoints();
void InitDefaultsNetwork_IstioNetworkGatewayImpl();
void InitDefaultsNetwork_IstioNetworkGateway();
void InitDefaultsNetworkImpl();
void InitDefaultsNetwork();
void InitDefaultsMeshNetworks_NetworksEntry_DoNotUseImpl();
void InitDefaultsMeshNetworks_NetworksEntry_DoNotUse();
void InitDefaultsMeshNetworksImpl();
void InitDefaultsMeshNetworks();
inline void InitDefaults() {
  InitDefaultsNetwork_NetworkEndpoints();
  InitDefaultsNetwork_IstioNetworkGateway();
  InitDefaultsNetwork();
  InitDefaultsMeshNetworks_NetworksEntry_DoNotUse();
  InitDefaultsMeshNetworks();
}
}  // namespace protobuf_mesh_2fv1alpha1_2fnetwork_2eproto
namespace istio {
namespace mesh {
namespace v1alpha1 {
class MeshNetworks;
class MeshNetworksDefaultTypeInternal;
extern MeshNetworksDefaultTypeInternal _MeshNetworks_default_instance_;
class MeshNetworks_NetworksEntry_DoNotUse;
class MeshNetworks_NetworksEntry_DoNotUseDefaultTypeInternal;
extern MeshNetworks_NetworksEntry_DoNotUseDefaultTypeInternal _MeshNetworks_NetworksEntry_DoNotUse_default_instance_;
class Network;
class NetworkDefaultTypeInternal;
extern NetworkDefaultTypeInternal _Network_default_instance_;
class Network_IstioNetworkGateway;
class Network_IstioNetworkGatewayDefaultTypeInternal;
extern Network_IstioNetworkGatewayDefaultTypeInternal _Network_IstioNetworkGateway_default_instance_;
class Network_NetworkEndpoints;
class Network_NetworkEndpointsDefaultTypeInternal;
extern Network_NetworkEndpointsDefaultTypeInternal _Network_NetworkEndpoints_default_instance_;
}  // namespace v1alpha1
}  // namespace mesh
}  // namespace istio
namespace istio {
namespace mesh {
namespace v1alpha1 {

// ===================================================================

class Network_NetworkEndpoints : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.Network.NetworkEndpoints) */ {
 public:
  Network_NetworkEndpoints();
  virtual ~Network_NetworkEndpoints();

  Network_NetworkEndpoints(const Network_NetworkEndpoints& from);

  inline Network_NetworkEndpoints& operator=(const Network_NetworkEndpoints& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Network_NetworkEndpoints(Network_NetworkEndpoints&& from) noexcept
    : Network_NetworkEndpoints() {
    *this = ::std::move(from);
  }

  inline Network_NetworkEndpoints& operator=(Network_NetworkEndpoints&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Network_NetworkEndpoints& default_instance();

  enum NeCase {
    kFromCidr = 1,
    kFromRegistry = 2,
    NE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Network_NetworkEndpoints* internal_default_instance() {
    return reinterpret_cast<const Network_NetworkEndpoints*>(
               &_Network_NetworkEndpoints_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Network_NetworkEndpoints* other);
  friend void swap(Network_NetworkEndpoints& a, Network_NetworkEndpoints& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Network_NetworkEndpoints* New() const PROTOBUF_FINAL { return New(NULL); }

  Network_NetworkEndpoints* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Network_NetworkEndpoints& from);
  void MergeFrom(const Network_NetworkEndpoints& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Network_NetworkEndpoints* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string from_cidr = 1;
  private:
  bool has_from_cidr() const;
  public:
  void clear_from_cidr();
  static const int kFromCidrFieldNumber = 1;
  const ::std::string& from_cidr() const;
  void set_from_cidr(const ::std::string& value);
  #if LANG_CXX11
  void set_from_cidr(::std::string&& value);
  #endif
  void set_from_cidr(const char* value);
  void set_from_cidr(const char* value, size_t size);
  ::std::string* mutable_from_cidr();
  ::std::string* release_from_cidr();
  void set_allocated_from_cidr(::std::string* from_cidr);

  // string from_registry = 2;
  private:
  bool has_from_registry() const;
  public:
  void clear_from_registry();
  static const int kFromRegistryFieldNumber = 2;
  const ::std::string& from_registry() const;
  void set_from_registry(const ::std::string& value);
  #if LANG_CXX11
  void set_from_registry(::std::string&& value);
  #endif
  void set_from_registry(const char* value);
  void set_from_registry(const char* value, size_t size);
  ::std::string* mutable_from_registry();
  ::std::string* release_from_registry();
  void set_allocated_from_registry(::std::string* from_registry);

  NeCase ne_case() const;
  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.Network.NetworkEndpoints)
 private:
  void set_has_from_cidr();
  void set_has_from_registry();

  inline bool has_ne() const;
  void clear_ne();
  inline void clear_has_ne();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union NeUnion {
    NeUnion() {}
    ::google::protobuf::internal::ArenaStringPtr from_cidr_;
    ::google::protobuf::internal::ArenaStringPtr from_registry_;
  } ne_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsNetwork_NetworkEndpointsImpl();
};
// -------------------------------------------------------------------

class Network_IstioNetworkGateway : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.Network.IstioNetworkGateway) */ {
 public:
  Network_IstioNetworkGateway();
  virtual ~Network_IstioNetworkGateway();

  Network_IstioNetworkGateway(const Network_IstioNetworkGateway& from);

  inline Network_IstioNetworkGateway& operator=(const Network_IstioNetworkGateway& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Network_IstioNetworkGateway(Network_IstioNetworkGateway&& from) noexcept
    : Network_IstioNetworkGateway() {
    *this = ::std::move(from);
  }

  inline Network_IstioNetworkGateway& operator=(Network_IstioNetworkGateway&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Network_IstioNetworkGateway& default_instance();

  enum GwCase {
    kRegistryServiceName = 1,
    kAddress = 2,
    GW_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Network_IstioNetworkGateway* internal_default_instance() {
    return reinterpret_cast<const Network_IstioNetworkGateway*>(
               &_Network_IstioNetworkGateway_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Network_IstioNetworkGateway* other);
  friend void swap(Network_IstioNetworkGateway& a, Network_IstioNetworkGateway& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Network_IstioNetworkGateway* New() const PROTOBUF_FINAL { return New(NULL); }

  Network_IstioNetworkGateway* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Network_IstioNetworkGateway& from);
  void MergeFrom(const Network_IstioNetworkGateway& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Network_IstioNetworkGateway* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string locality = 4;
  void clear_locality();
  static const int kLocalityFieldNumber = 4;
  const ::std::string& locality() const;
  void set_locality(const ::std::string& value);
  #if LANG_CXX11
  void set_locality(::std::string&& value);
  #endif
  void set_locality(const char* value);
  void set_locality(const char* value, size_t size);
  ::std::string* mutable_locality();
  ::std::string* release_locality();
  void set_allocated_locality(::std::string* locality);

  // uint32 port = 3;
  void clear_port();
  static const int kPortFieldNumber = 3;
  ::google::protobuf::uint32 port() const;
  void set_port(::google::protobuf::uint32 value);

  // string registry_service_name = 1;
  private:
  bool has_registry_service_name() const;
  public:
  void clear_registry_service_name();
  static const int kRegistryServiceNameFieldNumber = 1;
  const ::std::string& registry_service_name() const;
  void set_registry_service_name(const ::std::string& value);
  #if LANG_CXX11
  void set_registry_service_name(::std::string&& value);
  #endif
  void set_registry_service_name(const char* value);
  void set_registry_service_name(const char* value, size_t size);
  ::std::string* mutable_registry_service_name();
  ::std::string* release_registry_service_name();
  void set_allocated_registry_service_name(::std::string* registry_service_name);

  // string address = 2;
  private:
  bool has_address() const;
  public:
  void clear_address();
  static const int kAddressFieldNumber = 2;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  GwCase gw_case() const;
  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.Network.IstioNetworkGateway)
 private:
  void set_has_registry_service_name();
  void set_has_address();

  inline bool has_gw() const;
  void clear_gw();
  inline void clear_has_gw();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr locality_;
  ::google::protobuf::uint32 port_;
  union GwUnion {
    GwUnion() {}
    ::google::protobuf::internal::ArenaStringPtr registry_service_name_;
    ::google::protobuf::internal::ArenaStringPtr address_;
  } gw_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsNetwork_IstioNetworkGatewayImpl();
};
// -------------------------------------------------------------------

class Network : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.Network) */ {
 public:
  Network();
  virtual ~Network();

  Network(const Network& from);

  inline Network& operator=(const Network& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Network(Network&& from) noexcept
    : Network() {
    *this = ::std::move(from);
  }

  inline Network& operator=(Network&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Network& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Network* internal_default_instance() {
    return reinterpret_cast<const Network*>(
               &_Network_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Network* other);
  friend void swap(Network& a, Network& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Network* New() const PROTOBUF_FINAL { return New(NULL); }

  Network* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Network& from);
  void MergeFrom(const Network& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Network* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Network_NetworkEndpoints NetworkEndpoints;
  typedef Network_IstioNetworkGateway IstioNetworkGateway;

  // accessors -------------------------------------------------------

  // repeated .istio.mesh.v1alpha1.Network.NetworkEndpoints endpoints = 2;
  int endpoints_size() const;
  void clear_endpoints();
  static const int kEndpointsFieldNumber = 2;
  const ::istio::mesh::v1alpha1::Network_NetworkEndpoints& endpoints(int index) const;
  ::istio::mesh::v1alpha1::Network_NetworkEndpoints* mutable_endpoints(int index);
  ::istio::mesh::v1alpha1::Network_NetworkEndpoints* add_endpoints();
  ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::Network_NetworkEndpoints >*
      mutable_endpoints();
  const ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::Network_NetworkEndpoints >&
      endpoints() const;

  // repeated .istio.mesh.v1alpha1.Network.IstioNetworkGateway gateways = 3;
  int gateways_size() const;
  void clear_gateways();
  static const int kGatewaysFieldNumber = 3;
  const ::istio::mesh::v1alpha1::Network_IstioNetworkGateway& gateways(int index) const;
  ::istio::mesh::v1alpha1::Network_IstioNetworkGateway* mutable_gateways(int index);
  ::istio::mesh::v1alpha1::Network_IstioNetworkGateway* add_gateways();
  ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::Network_IstioNetworkGateway >*
      mutable_gateways();
  const ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::Network_IstioNetworkGateway >&
      gateways() const;

  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.Network)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::Network_NetworkEndpoints > endpoints_;
  ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::Network_IstioNetworkGateway > gateways_;
  mutable int _cached_size_;
  friend struct ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsNetworkImpl();
};
// -------------------------------------------------------------------

class MeshNetworks_NetworksEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<MeshNetworks_NetworksEntry_DoNotUse, 
    ::std::string, ::istio::mesh::v1alpha1::Network,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<MeshNetworks_NetworksEntry_DoNotUse, 
    ::std::string, ::istio::mesh::v1alpha1::Network,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  MeshNetworks_NetworksEntry_DoNotUse();
  MeshNetworks_NetworksEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const MeshNetworks_NetworksEntry_DoNotUse& other);
  static const MeshNetworks_NetworksEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const MeshNetworks_NetworksEntry_DoNotUse*>(&_MeshNetworks_NetworksEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class MeshNetworks : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.MeshNetworks) */ {
 public:
  MeshNetworks();
  virtual ~MeshNetworks();

  MeshNetworks(const MeshNetworks& from);

  inline MeshNetworks& operator=(const MeshNetworks& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeshNetworks(MeshNetworks&& from) noexcept
    : MeshNetworks() {
    *this = ::std::move(from);
  }

  inline MeshNetworks& operator=(MeshNetworks&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MeshNetworks& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeshNetworks* internal_default_instance() {
    return reinterpret_cast<const MeshNetworks*>(
               &_MeshNetworks_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(MeshNetworks* other);
  friend void swap(MeshNetworks& a, MeshNetworks& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeshNetworks* New() const PROTOBUF_FINAL { return New(NULL); }

  MeshNetworks* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MeshNetworks& from);
  void MergeFrom(const MeshNetworks& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MeshNetworks* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .istio.mesh.v1alpha1.Network> networks = 1;
  int networks_size() const;
  void clear_networks();
  static const int kNetworksFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network >&
      networks() const;
  ::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network >*
      mutable_networks();

  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.MeshNetworks)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      MeshNetworks_NetworksEntry_DoNotUse,
      ::std::string, ::istio::mesh::v1alpha1::Network,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > networks_;
  mutable int _cached_size_;
  friend struct ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fnetwork_2eproto::InitDefaultsMeshNetworksImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Network_NetworkEndpoints

// string from_cidr = 1;
inline bool Network_NetworkEndpoints::has_from_cidr() const {
  return ne_case() == kFromCidr;
}
inline void Network_NetworkEndpoints::set_has_from_cidr() {
  _oneof_case_[0] = kFromCidr;
}
inline void Network_NetworkEndpoints::clear_from_cidr() {
  if (has_from_cidr()) {
    ne_.from_cidr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_ne();
  }
}
inline const ::std::string& Network_NetworkEndpoints::from_cidr() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_cidr)
  if (has_from_cidr()) {
    return ne_.from_cidr_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Network_NetworkEndpoints::set_from_cidr(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_cidr)
  if (!has_from_cidr()) {
    clear_ne();
    set_has_from_cidr();
    ne_.from_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ne_.from_cidr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_cidr)
}
#if LANG_CXX11
inline void Network_NetworkEndpoints::set_from_cidr(::std::string&& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_cidr)
  if (!has_from_cidr()) {
    clear_ne();
    set_has_from_cidr();
    ne_.from_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ne_.from_cidr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_cidr)
}
#endif
inline void Network_NetworkEndpoints::set_from_cidr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_from_cidr()) {
    clear_ne();
    set_has_from_cidr();
    ne_.from_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ne_.from_cidr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_cidr)
}
inline void Network_NetworkEndpoints::set_from_cidr(const char* value, size_t size) {
  if (!has_from_cidr()) {
    clear_ne();
    set_has_from_cidr();
    ne_.from_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ne_.from_cidr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_cidr)
}
inline ::std::string* Network_NetworkEndpoints::mutable_from_cidr() {
  if (!has_from_cidr()) {
    clear_ne();
    set_has_from_cidr();
    ne_.from_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_cidr)
  return ne_.from_cidr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Network_NetworkEndpoints::release_from_cidr() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_cidr)
  if (has_from_cidr()) {
    clear_has_ne();
    return ne_.from_cidr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Network_NetworkEndpoints::set_allocated_from_cidr(::std::string* from_cidr) {
  if (!has_from_cidr()) {
    ne_.from_cidr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_ne();
  if (from_cidr != NULL) {
    set_has_from_cidr();
    ne_.from_cidr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from_cidr);
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_cidr)
}

// string from_registry = 2;
inline bool Network_NetworkEndpoints::has_from_registry() const {
  return ne_case() == kFromRegistry;
}
inline void Network_NetworkEndpoints::set_has_from_registry() {
  _oneof_case_[0] = kFromRegistry;
}
inline void Network_NetworkEndpoints::clear_from_registry() {
  if (has_from_registry()) {
    ne_.from_registry_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_ne();
  }
}
inline const ::std::string& Network_NetworkEndpoints::from_registry() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_registry)
  if (has_from_registry()) {
    return ne_.from_registry_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Network_NetworkEndpoints::set_from_registry(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_registry)
  if (!has_from_registry()) {
    clear_ne();
    set_has_from_registry();
    ne_.from_registry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ne_.from_registry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_registry)
}
#if LANG_CXX11
inline void Network_NetworkEndpoints::set_from_registry(::std::string&& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_registry)
  if (!has_from_registry()) {
    clear_ne();
    set_has_from_registry();
    ne_.from_registry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ne_.from_registry_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_registry)
}
#endif
inline void Network_NetworkEndpoints::set_from_registry(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_from_registry()) {
    clear_ne();
    set_has_from_registry();
    ne_.from_registry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ne_.from_registry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_registry)
}
inline void Network_NetworkEndpoints::set_from_registry(const char* value, size_t size) {
  if (!has_from_registry()) {
    clear_ne();
    set_has_from_registry();
    ne_.from_registry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ne_.from_registry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_registry)
}
inline ::std::string* Network_NetworkEndpoints::mutable_from_registry() {
  if (!has_from_registry()) {
    clear_ne();
    set_has_from_registry();
    ne_.from_registry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_registry)
  return ne_.from_registry_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Network_NetworkEndpoints::release_from_registry() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_registry)
  if (has_from_registry()) {
    clear_has_ne();
    return ne_.from_registry_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Network_NetworkEndpoints::set_allocated_from_registry(::std::string* from_registry) {
  if (!has_from_registry()) {
    ne_.from_registry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_ne();
  if (from_registry != NULL) {
    set_has_from_registry();
    ne_.from_registry_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        from_registry);
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.Network.NetworkEndpoints.from_registry)
}

inline bool Network_NetworkEndpoints::has_ne() const {
  return ne_case() != NE_NOT_SET;
}
inline void Network_NetworkEndpoints::clear_has_ne() {
  _oneof_case_[0] = NE_NOT_SET;
}
inline Network_NetworkEndpoints::NeCase Network_NetworkEndpoints::ne_case() const {
  return Network_NetworkEndpoints::NeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Network_IstioNetworkGateway

// string registry_service_name = 1;
inline bool Network_IstioNetworkGateway::has_registry_service_name() const {
  return gw_case() == kRegistryServiceName;
}
inline void Network_IstioNetworkGateway::set_has_registry_service_name() {
  _oneof_case_[0] = kRegistryServiceName;
}
inline void Network_IstioNetworkGateway::clear_registry_service_name() {
  if (has_registry_service_name()) {
    gw_.registry_service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_gw();
  }
}
inline const ::std::string& Network_IstioNetworkGateway::registry_service_name() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Network.IstioNetworkGateway.registry_service_name)
  if (has_registry_service_name()) {
    return gw_.registry_service_name_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Network_IstioNetworkGateway::set_registry_service_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.IstioNetworkGateway.registry_service_name)
  if (!has_registry_service_name()) {
    clear_gw();
    set_has_registry_service_name();
    gw_.registry_service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  gw_.registry_service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.IstioNetworkGateway.registry_service_name)
}
#if LANG_CXX11
inline void Network_IstioNetworkGateway::set_registry_service_name(::std::string&& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.IstioNetworkGateway.registry_service_name)
  if (!has_registry_service_name()) {
    clear_gw();
    set_has_registry_service_name();
    gw_.registry_service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  gw_.registry_service_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.Network.IstioNetworkGateway.registry_service_name)
}
#endif
inline void Network_IstioNetworkGateway::set_registry_service_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_registry_service_name()) {
    clear_gw();
    set_has_registry_service_name();
    gw_.registry_service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  gw_.registry_service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.Network.IstioNetworkGateway.registry_service_name)
}
inline void Network_IstioNetworkGateway::set_registry_service_name(const char* value, size_t size) {
  if (!has_registry_service_name()) {
    clear_gw();
    set_has_registry_service_name();
    gw_.registry_service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  gw_.registry_service_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.Network.IstioNetworkGateway.registry_service_name)
}
inline ::std::string* Network_IstioNetworkGateway::mutable_registry_service_name() {
  if (!has_registry_service_name()) {
    clear_gw();
    set_has_registry_service_name();
    gw_.registry_service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.Network.IstioNetworkGateway.registry_service_name)
  return gw_.registry_service_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Network_IstioNetworkGateway::release_registry_service_name() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.Network.IstioNetworkGateway.registry_service_name)
  if (has_registry_service_name()) {
    clear_has_gw();
    return gw_.registry_service_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Network_IstioNetworkGateway::set_allocated_registry_service_name(::std::string* registry_service_name) {
  if (!has_registry_service_name()) {
    gw_.registry_service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_gw();
  if (registry_service_name != NULL) {
    set_has_registry_service_name();
    gw_.registry_service_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        registry_service_name);
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.Network.IstioNetworkGateway.registry_service_name)
}

// string address = 2;
inline bool Network_IstioNetworkGateway::has_address() const {
  return gw_case() == kAddress;
}
inline void Network_IstioNetworkGateway::set_has_address() {
  _oneof_case_[0] = kAddress;
}
inline void Network_IstioNetworkGateway::clear_address() {
  if (has_address()) {
    gw_.address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_gw();
  }
}
inline const ::std::string& Network_IstioNetworkGateway::address() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Network.IstioNetworkGateway.address)
  if (has_address()) {
    return gw_.address_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Network_IstioNetworkGateway::set_address(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.IstioNetworkGateway.address)
  if (!has_address()) {
    clear_gw();
    set_has_address();
    gw_.address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  gw_.address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.IstioNetworkGateway.address)
}
#if LANG_CXX11
inline void Network_IstioNetworkGateway::set_address(::std::string&& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.IstioNetworkGateway.address)
  if (!has_address()) {
    clear_gw();
    set_has_address();
    gw_.address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  gw_.address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.Network.IstioNetworkGateway.address)
}
#endif
inline void Network_IstioNetworkGateway::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_address()) {
    clear_gw();
    set_has_address();
    gw_.address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  gw_.address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.Network.IstioNetworkGateway.address)
}
inline void Network_IstioNetworkGateway::set_address(const char* value, size_t size) {
  if (!has_address()) {
    clear_gw();
    set_has_address();
    gw_.address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  gw_.address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.Network.IstioNetworkGateway.address)
}
inline ::std::string* Network_IstioNetworkGateway::mutable_address() {
  if (!has_address()) {
    clear_gw();
    set_has_address();
    gw_.address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.Network.IstioNetworkGateway.address)
  return gw_.address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Network_IstioNetworkGateway::release_address() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.Network.IstioNetworkGateway.address)
  if (has_address()) {
    clear_has_gw();
    return gw_.address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Network_IstioNetworkGateway::set_allocated_address(::std::string* address) {
  if (!has_address()) {
    gw_.address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_gw();
  if (address != NULL) {
    set_has_address();
    gw_.address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        address);
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.Network.IstioNetworkGateway.address)
}

// uint32 port = 3;
inline void Network_IstioNetworkGateway::clear_port() {
  port_ = 0u;
}
inline ::google::protobuf::uint32 Network_IstioNetworkGateway::port() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Network.IstioNetworkGateway.port)
  return port_;
}
inline void Network_IstioNetworkGateway::set_port(::google::protobuf::uint32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.IstioNetworkGateway.port)
}

// string locality = 4;
inline void Network_IstioNetworkGateway::clear_locality() {
  locality_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Network_IstioNetworkGateway::locality() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Network.IstioNetworkGateway.locality)
  return locality_.GetNoArena();
}
inline void Network_IstioNetworkGateway::set_locality(const ::std::string& value) {
  
  locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.Network.IstioNetworkGateway.locality)
}
#if LANG_CXX11
inline void Network_IstioNetworkGateway::set_locality(::std::string&& value) {
  
  locality_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.Network.IstioNetworkGateway.locality)
}
#endif
inline void Network_IstioNetworkGateway::set_locality(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.Network.IstioNetworkGateway.locality)
}
inline void Network_IstioNetworkGateway::set_locality(const char* value, size_t size) {
  
  locality_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.Network.IstioNetworkGateway.locality)
}
inline ::std::string* Network_IstioNetworkGateway::mutable_locality() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.Network.IstioNetworkGateway.locality)
  return locality_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Network_IstioNetworkGateway::release_locality() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.Network.IstioNetworkGateway.locality)
  
  return locality_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Network_IstioNetworkGateway::set_allocated_locality(::std::string* locality) {
  if (locality != NULL) {
    
  } else {
    
  }
  locality_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), locality);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.Network.IstioNetworkGateway.locality)
}

inline bool Network_IstioNetworkGateway::has_gw() const {
  return gw_case() != GW_NOT_SET;
}
inline void Network_IstioNetworkGateway::clear_has_gw() {
  _oneof_case_[0] = GW_NOT_SET;
}
inline Network_IstioNetworkGateway::GwCase Network_IstioNetworkGateway::gw_case() const {
  return Network_IstioNetworkGateway::GwCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Network

// repeated .istio.mesh.v1alpha1.Network.NetworkEndpoints endpoints = 2;
inline int Network::endpoints_size() const {
  return endpoints_.size();
}
inline void Network::clear_endpoints() {
  endpoints_.Clear();
}
inline const ::istio::mesh::v1alpha1::Network_NetworkEndpoints& Network::endpoints(int index) const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Network.endpoints)
  return endpoints_.Get(index);
}
inline ::istio::mesh::v1alpha1::Network_NetworkEndpoints* Network::mutable_endpoints(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.Network.endpoints)
  return endpoints_.Mutable(index);
}
inline ::istio::mesh::v1alpha1::Network_NetworkEndpoints* Network::add_endpoints() {
  // @@protoc_insertion_point(field_add:istio.mesh.v1alpha1.Network.endpoints)
  return endpoints_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::Network_NetworkEndpoints >*
Network::mutable_endpoints() {
  // @@protoc_insertion_point(field_mutable_list:istio.mesh.v1alpha1.Network.endpoints)
  return &endpoints_;
}
inline const ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::Network_NetworkEndpoints >&
Network::endpoints() const {
  // @@protoc_insertion_point(field_list:istio.mesh.v1alpha1.Network.endpoints)
  return endpoints_;
}

// repeated .istio.mesh.v1alpha1.Network.IstioNetworkGateway gateways = 3;
inline int Network::gateways_size() const {
  return gateways_.size();
}
inline void Network::clear_gateways() {
  gateways_.Clear();
}
inline const ::istio::mesh::v1alpha1::Network_IstioNetworkGateway& Network::gateways(int index) const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.Network.gateways)
  return gateways_.Get(index);
}
inline ::istio::mesh::v1alpha1::Network_IstioNetworkGateway* Network::mutable_gateways(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.Network.gateways)
  return gateways_.Mutable(index);
}
inline ::istio::mesh::v1alpha1::Network_IstioNetworkGateway* Network::add_gateways() {
  // @@protoc_insertion_point(field_add:istio.mesh.v1alpha1.Network.gateways)
  return gateways_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::Network_IstioNetworkGateway >*
Network::mutable_gateways() {
  // @@protoc_insertion_point(field_mutable_list:istio.mesh.v1alpha1.Network.gateways)
  return &gateways_;
}
inline const ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::Network_IstioNetworkGateway >&
Network::gateways() const {
  // @@protoc_insertion_point(field_list:istio.mesh.v1alpha1.Network.gateways)
  return gateways_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// MeshNetworks

// map<string, .istio.mesh.v1alpha1.Network> networks = 1;
inline int MeshNetworks::networks_size() const {
  return networks_.size();
}
inline void MeshNetworks::clear_networks() {
  networks_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network >&
MeshNetworks::networks() const {
  // @@protoc_insertion_point(field_map:istio.mesh.v1alpha1.MeshNetworks.networks)
  return networks_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::istio::mesh::v1alpha1::Network >*
MeshNetworks::mutable_networks() {
  // @@protoc_insertion_point(field_mutable_map:istio.mesh.v1alpha1.MeshNetworks.networks)
  return networks_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha1
}  // namespace mesh
}  // namespace istio

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mesh_2fv1alpha1_2fnetwork_2eproto__INCLUDED
