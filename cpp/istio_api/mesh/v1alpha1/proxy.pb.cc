// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mesh/v1alpha1/proxy.proto

#include "mesh/v1alpha1/proxy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace istio {
namespace mesh {
namespace v1alpha1 {
class Tracing_ZipkinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tracing_Zipkin>
      _instance;
} _Tracing_Zipkin_default_instance_;
class Tracing_LightstepDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tracing_Lightstep>
      _instance;
} _Tracing_Lightstep_default_instance_;
class TracingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tracing>
      _instance;
  const ::istio::mesh::v1alpha1::Tracing_Zipkin* zipkin_;
  const ::istio::mesh::v1alpha1::Tracing_Lightstep* lightstep_;
} _Tracing_default_instance_;
class ProxyConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ProxyConfig>
      _instance;
} _ProxyConfig_default_instance_;
}  // namespace v1alpha1
}  // namespace mesh
}  // namespace istio
namespace protobuf_mesh_2fv1alpha1_2fproxy_2eproto {
void InitDefaultsTracing_ZipkinImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mesh::v1alpha1::_Tracing_Zipkin_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::Tracing_Zipkin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::Tracing_Zipkin::InitAsDefaultInstance();
}

void InitDefaultsTracing_Zipkin() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTracing_ZipkinImpl);
}

void InitDefaultsTracing_LightstepImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mesh::v1alpha1::_Tracing_Lightstep_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::Tracing_Lightstep();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::Tracing_Lightstep::InitAsDefaultInstance();
}

void InitDefaultsTracing_Lightstep() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTracing_LightstepImpl);
}

void InitDefaultsTracingImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsTracing_Zipkin();
  protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsTracing_Lightstep();
  {
    void* ptr = &::istio::mesh::v1alpha1::_Tracing_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::Tracing();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::Tracing::InitAsDefaultInstance();
}

void InitDefaultsTracing() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTracingImpl);
}

void InitDefaultsProxyConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsTracing();
  {
    void* ptr = &::istio::mesh::v1alpha1::_ProxyConfig_default_instance_;
    new (ptr) ::istio::mesh::v1alpha1::ProxyConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mesh::v1alpha1::ProxyConfig::InitAsDefaultInstance();
}

void InitDefaultsProxyConfig() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProxyConfigImpl);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Tracing_Zipkin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Tracing_Zipkin, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Tracing_Lightstep, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Tracing_Lightstep, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Tracing_Lightstep, access_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Tracing_Lightstep, secure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Tracing_Lightstep, cacert_path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Tracing, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Tracing, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::istio::mesh::v1alpha1::TracingDefaultTypeInternal, zipkin_),
  offsetof(::istio::mesh::v1alpha1::TracingDefaultTypeInternal, lightstep_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::Tracing, tracer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, config_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, binary_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, service_cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, drain_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, parent_shutdown_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, discovery_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, discovery_refresh_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, zipkin_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, connect_timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, statsd_udp_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, envoy_metrics_service_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, proxy_admin_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, availability_zone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, control_plane_auth_policy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, custom_config_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, stat_name_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, concurrency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, proxy_bootstrap_template_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, interception_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mesh::v1alpha1::ProxyConfig, tracing_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::istio::mesh::v1alpha1::Tracing_Zipkin)},
  { 6, -1, sizeof(::istio::mesh::v1alpha1::Tracing_Lightstep)},
  { 15, -1, sizeof(::istio::mesh::v1alpha1::Tracing)},
  { 23, -1, sizeof(::istio::mesh::v1alpha1::ProxyConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_Tracing_Zipkin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_Tracing_Lightstep_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_Tracing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mesh::v1alpha1::_ProxyConfig_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mesh/v1alpha1/proxy.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031mesh/v1alpha1/proxy.proto\022\023istio.mesh."
      "v1alpha1\032\036google/protobuf/duration.proto"
      "\"\373\001\n\007Tracing\0225\n\006zipkin\030\001 \001(\0132#.istio.mes"
      "h.v1alpha1.Tracing.ZipkinH\000\022;\n\tlightstep"
      "\030\002 \001(\0132&.istio.mesh.v1alpha1.Tracing.Lig"
      "htstepH\000\032\031\n\006Zipkin\022\017\n\007address\030\001 \001(\t\032W\n\tL"
      "ightstep\022\017\n\007address\030\001 \001(\t\022\024\n\014access_toke"
      "n\030\002 \001(\t\022\016\n\006secure\030\003 \001(\010\022\023\n\013cacert_path\030\004"
      " \001(\tB\010\n\006tracer\"\340\006\n\013ProxyConfig\022\023\n\013config"
      "_path\030\001 \001(\t\022\023\n\013binary_path\030\002 \001(\t\022\027\n\017serv"
      "ice_cluster\030\003 \001(\t\0221\n\016drain_duration\030\004 \001("
      "\0132\031.google.protobuf.Duration\022;\n\030parent_s"
      "hutdown_duration\030\005 \001(\0132\031.google.protobuf"
      ".Duration\022\031\n\021discovery_address\030\006 \001(\t\022>\n\027"
      "discovery_refresh_delay\030\007 \001(\0132\031.google.p"
      "rotobuf.DurationB\002\030\001\022\032\n\016zipkin_address\030\010"
      " \001(\tB\002\030\001\0222\n\017connect_timeout\030\t \001(\0132\031.goog"
      "le.protobuf.Duration\022\032\n\022statsd_udp_addre"
      "ss\030\n \001(\t\022%\n\035envoy_metrics_service_addres"
      "s\030\024 \001(\t\022\030\n\020proxy_admin_port\030\013 \001(\005\022\035\n\021ava"
      "ilability_zone\030\014 \001(\tB\002\030\001\022L\n\031control_plan"
      "e_auth_policy\030\r \001(\0162).istio.mesh.v1alpha"
      "1.AuthenticationPolicy\022\032\n\022custom_config_"
      "file\030\016 \001(\t\022\030\n\020stat_name_length\030\017 \001(\005\022\023\n\013"
      "concurrency\030\020 \001(\005\022%\n\035proxy_bootstrap_tem"
      "plate_path\030\021 \001(\t\022S\n\021interception_mode\030\022 "
      "\001(\01628.istio.mesh.v1alpha1.ProxyConfig.In"
      "boundInterceptionMode\022-\n\007tracing\030\023 \001(\0132\034"
      ".istio.mesh.v1alpha1.Tracing\"3\n\027InboundI"
      "nterceptionMode\022\014\n\010REDIRECT\020\000\022\n\n\006TPROXY\020"
      "\001*>\n\024AuthenticationPolicy\022\010\n\004NONE\020\000\022\016\n\nM"
      "UTUAL_TLS\020\001\022\014\n\007INHERIT\020\350\007B\034Z\032istio.io/ap"
      "i/mesh/v1alpha1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1303);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mesh/v1alpha1/proxy.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mesh_2fv1alpha1_2fproxy_2eproto
namespace istio {
namespace mesh {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* ProxyConfig_InboundInterceptionMode_descriptor() {
  protobuf_mesh_2fv1alpha1_2fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mesh_2fv1alpha1_2fproxy_2eproto::file_level_enum_descriptors[0];
}
bool ProxyConfig_InboundInterceptionMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ProxyConfig_InboundInterceptionMode ProxyConfig::REDIRECT;
const ProxyConfig_InboundInterceptionMode ProxyConfig::TPROXY;
const ProxyConfig_InboundInterceptionMode ProxyConfig::InboundInterceptionMode_MIN;
const ProxyConfig_InboundInterceptionMode ProxyConfig::InboundInterceptionMode_MAX;
const int ProxyConfig::InboundInterceptionMode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* AuthenticationPolicy_descriptor() {
  protobuf_mesh_2fv1alpha1_2fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mesh_2fv1alpha1_2fproxy_2eproto::file_level_enum_descriptors[1];
}
bool AuthenticationPolicy_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 1000:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Tracing_Zipkin::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tracing_Zipkin::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tracing_Zipkin::Tracing_Zipkin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsTracing_Zipkin();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.Tracing.Zipkin)
}
Tracing_Zipkin::Tracing_Zipkin(const Tracing_Zipkin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.Tracing.Zipkin)
}

void Tracing_Zipkin::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Tracing_Zipkin::~Tracing_Zipkin() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.Tracing.Zipkin)
  SharedDtor();
}

void Tracing_Zipkin::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Tracing_Zipkin::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tracing_Zipkin::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tracing_Zipkin& Tracing_Zipkin::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsTracing_Zipkin();
  return *internal_default_instance();
}

Tracing_Zipkin* Tracing_Zipkin::New(::google::protobuf::Arena* arena) const {
  Tracing_Zipkin* n = new Tracing_Zipkin;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tracing_Zipkin::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.Tracing.Zipkin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Tracing_Zipkin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.Tracing.Zipkin)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.Tracing.Zipkin.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.Tracing.Zipkin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.Tracing.Zipkin)
  return false;
#undef DO_
}

void Tracing_Zipkin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.Tracing.Zipkin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Tracing.Zipkin.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.Tracing.Zipkin)
}

::google::protobuf::uint8* Tracing_Zipkin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.Tracing.Zipkin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Tracing.Zipkin.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.Tracing.Zipkin)
  return target;
}

size_t Tracing_Zipkin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.Tracing.Zipkin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tracing_Zipkin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.Tracing.Zipkin)
  GOOGLE_DCHECK_NE(&from, this);
  const Tracing_Zipkin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tracing_Zipkin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.Tracing.Zipkin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.Tracing.Zipkin)
    MergeFrom(*source);
  }
}

void Tracing_Zipkin::MergeFrom(const Tracing_Zipkin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.Tracing.Zipkin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void Tracing_Zipkin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.Tracing.Zipkin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tracing_Zipkin::CopyFrom(const Tracing_Zipkin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.Tracing.Zipkin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tracing_Zipkin::IsInitialized() const {
  return true;
}

void Tracing_Zipkin::Swap(Tracing_Zipkin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tracing_Zipkin::InternalSwap(Tracing_Zipkin* other) {
  using std::swap;
  address_.Swap(&other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tracing_Zipkin::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Tracing_Lightstep::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tracing_Lightstep::kAddressFieldNumber;
const int Tracing_Lightstep::kAccessTokenFieldNumber;
const int Tracing_Lightstep::kSecureFieldNumber;
const int Tracing_Lightstep::kCacertPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tracing_Lightstep::Tracing_Lightstep()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsTracing_Lightstep();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.Tracing.Lightstep)
}
Tracing_Lightstep::Tracing_Lightstep(const Tracing_Lightstep& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.access_token().size() > 0) {
    access_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token_);
  }
  cacert_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cacert_path().size() > 0) {
    cacert_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cacert_path_);
  }
  secure_ = from.secure_;
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.Tracing.Lightstep)
}

void Tracing_Lightstep::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cacert_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secure_ = false;
  _cached_size_ = 0;
}

Tracing_Lightstep::~Tracing_Lightstep() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.Tracing.Lightstep)
  SharedDtor();
}

void Tracing_Lightstep::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cacert_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Tracing_Lightstep::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tracing_Lightstep::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tracing_Lightstep& Tracing_Lightstep::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsTracing_Lightstep();
  return *internal_default_instance();
}

Tracing_Lightstep* Tracing_Lightstep::New(::google::protobuf::Arena* arena) const {
  Tracing_Lightstep* n = new Tracing_Lightstep;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tracing_Lightstep::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.Tracing.Lightstep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  access_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cacert_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  secure_ = false;
  _internal_metadata_.Clear();
}

bool Tracing_Lightstep::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.Tracing.Lightstep)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.Tracing.Lightstep.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string access_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_access_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->access_token().data(), static_cast<int>(this->access_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.Tracing.Lightstep.access_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool secure = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &secure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cacert_path = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cacert_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cacert_path().data(), static_cast<int>(this->cacert_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.Tracing.Lightstep.cacert_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.Tracing.Lightstep)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.Tracing.Lightstep)
  return false;
#undef DO_
}

void Tracing_Lightstep::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.Tracing.Lightstep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Tracing.Lightstep.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // string access_token = 2;
  if (this->access_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_token().data(), static_cast<int>(this->access_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Tracing.Lightstep.access_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->access_token(), output);
  }

  // bool secure = 3;
  if (this->secure() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->secure(), output);
  }

  // string cacert_path = 4;
  if (this->cacert_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cacert_path().data(), static_cast<int>(this->cacert_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Tracing.Lightstep.cacert_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cacert_path(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.Tracing.Lightstep)
}

::google::protobuf::uint8* Tracing_Lightstep::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.Tracing.Lightstep)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Tracing.Lightstep.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // string access_token = 2;
  if (this->access_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->access_token().data(), static_cast<int>(this->access_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Tracing.Lightstep.access_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->access_token(), target);
  }

  // bool secure = 3;
  if (this->secure() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->secure(), target);
  }

  // string cacert_path = 4;
  if (this->cacert_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cacert_path().data(), static_cast<int>(this->cacert_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.Tracing.Lightstep.cacert_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cacert_path(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.Tracing.Lightstep)
  return target;
}

size_t Tracing_Lightstep::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.Tracing.Lightstep)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string access_token = 2;
  if (this->access_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->access_token());
  }

  // string cacert_path = 4;
  if (this->cacert_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cacert_path());
  }

  // bool secure = 3;
  if (this->secure() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tracing_Lightstep::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.Tracing.Lightstep)
  GOOGLE_DCHECK_NE(&from, this);
  const Tracing_Lightstep* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tracing_Lightstep>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.Tracing.Lightstep)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.Tracing.Lightstep)
    MergeFrom(*source);
  }
}

void Tracing_Lightstep::MergeFrom(const Tracing_Lightstep& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.Tracing.Lightstep)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.access_token().size() > 0) {

    access_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.access_token_);
  }
  if (from.cacert_path().size() > 0) {

    cacert_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cacert_path_);
  }
  if (from.secure() != 0) {
    set_secure(from.secure());
  }
}

void Tracing_Lightstep::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.Tracing.Lightstep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tracing_Lightstep::CopyFrom(const Tracing_Lightstep& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.Tracing.Lightstep)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tracing_Lightstep::IsInitialized() const {
  return true;
}

void Tracing_Lightstep::Swap(Tracing_Lightstep* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tracing_Lightstep::InternalSwap(Tracing_Lightstep* other) {
  using std::swap;
  address_.Swap(&other->address_);
  access_token_.Swap(&other->access_token_);
  cacert_path_.Swap(&other->cacert_path_);
  swap(secure_, other->secure_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tracing_Lightstep::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Tracing::InitAsDefaultInstance() {
  ::istio::mesh::v1alpha1::_Tracing_default_instance_.zipkin_ = const_cast< ::istio::mesh::v1alpha1::Tracing_Zipkin*>(
      ::istio::mesh::v1alpha1::Tracing_Zipkin::internal_default_instance());
  ::istio::mesh::v1alpha1::_Tracing_default_instance_.lightstep_ = const_cast< ::istio::mesh::v1alpha1::Tracing_Lightstep*>(
      ::istio::mesh::v1alpha1::Tracing_Lightstep::internal_default_instance());
}
void Tracing::set_allocated_zipkin(::istio::mesh::v1alpha1::Tracing_Zipkin* zipkin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_tracer();
  if (zipkin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      zipkin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, zipkin, submessage_arena);
    }
    set_has_zipkin();
    tracer_.zipkin_ = zipkin;
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.Tracing.zipkin)
}
void Tracing::set_allocated_lightstep(::istio::mesh::v1alpha1::Tracing_Lightstep* lightstep) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_tracer();
  if (lightstep) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lightstep = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lightstep, submessage_arena);
    }
    set_has_lightstep();
    tracer_.lightstep_ = lightstep;
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.Tracing.lightstep)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tracing::kZipkinFieldNumber;
const int Tracing::kLightstepFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tracing::Tracing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsTracing();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.Tracing)
}
Tracing::Tracing(const Tracing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_tracer();
  switch (from.tracer_case()) {
    case kZipkin: {
      mutable_zipkin()->::istio::mesh::v1alpha1::Tracing_Zipkin::MergeFrom(from.zipkin());
      break;
    }
    case kLightstep: {
      mutable_lightstep()->::istio::mesh::v1alpha1::Tracing_Lightstep::MergeFrom(from.lightstep());
      break;
    }
    case TRACER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.Tracing)
}

void Tracing::SharedCtor() {
  clear_has_tracer();
  _cached_size_ = 0;
}

Tracing::~Tracing() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.Tracing)
  SharedDtor();
}

void Tracing::SharedDtor() {
  if (has_tracer()) {
    clear_tracer();
  }
}

void Tracing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tracing::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tracing& Tracing::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsTracing();
  return *internal_default_instance();
}

Tracing* Tracing::New(::google::protobuf::Arena* arena) const {
  Tracing* n = new Tracing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Tracing::clear_tracer() {
// @@protoc_insertion_point(one_of_clear_start:istio.mesh.v1alpha1.Tracing)
  switch (tracer_case()) {
    case kZipkin: {
      delete tracer_.zipkin_;
      break;
    }
    case kLightstep: {
      delete tracer_.lightstep_;
      break;
    }
    case TRACER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TRACER_NOT_SET;
}


void Tracing::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.Tracing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_tracer();
  _internal_metadata_.Clear();
}

bool Tracing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.Tracing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .istio.mesh.v1alpha1.Tracing.Zipkin zipkin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zipkin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mesh.v1alpha1.Tracing.Lightstep lightstep = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lightstep()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.Tracing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.Tracing)
  return false;
#undef DO_
}

void Tracing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.Tracing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.mesh.v1alpha1.Tracing.Zipkin zipkin = 1;
  if (has_zipkin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *tracer_.zipkin_, output);
  }

  // .istio.mesh.v1alpha1.Tracing.Lightstep lightstep = 2;
  if (has_lightstep()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *tracer_.lightstep_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.Tracing)
}

::google::protobuf::uint8* Tracing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.Tracing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.mesh.v1alpha1.Tracing.Zipkin zipkin = 1;
  if (has_zipkin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *tracer_.zipkin_, deterministic, target);
  }

  // .istio.mesh.v1alpha1.Tracing.Lightstep lightstep = 2;
  if (has_lightstep()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *tracer_.lightstep_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.Tracing)
  return target;
}

size_t Tracing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.Tracing)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (tracer_case()) {
    // .istio.mesh.v1alpha1.Tracing.Zipkin zipkin = 1;
    case kZipkin: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *tracer_.zipkin_);
      break;
    }
    // .istio.mesh.v1alpha1.Tracing.Lightstep lightstep = 2;
    case kLightstep: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *tracer_.lightstep_);
      break;
    }
    case TRACER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tracing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.Tracing)
  GOOGLE_DCHECK_NE(&from, this);
  const Tracing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tracing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.Tracing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.Tracing)
    MergeFrom(*source);
  }
}

void Tracing::MergeFrom(const Tracing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.Tracing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.tracer_case()) {
    case kZipkin: {
      mutable_zipkin()->::istio::mesh::v1alpha1::Tracing_Zipkin::MergeFrom(from.zipkin());
      break;
    }
    case kLightstep: {
      mutable_lightstep()->::istio::mesh::v1alpha1::Tracing_Lightstep::MergeFrom(from.lightstep());
      break;
    }
    case TRACER_NOT_SET: {
      break;
    }
  }
}

void Tracing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.Tracing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tracing::CopyFrom(const Tracing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.Tracing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tracing::IsInitialized() const {
  return true;
}

void Tracing::Swap(Tracing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tracing::InternalSwap(Tracing* other) {
  using std::swap;
  swap(tracer_, other->tracer_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tracing::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ProxyConfig::InitAsDefaultInstance() {
  ::istio::mesh::v1alpha1::_ProxyConfig_default_instance_._instance.get_mutable()->drain_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::istio::mesh::v1alpha1::_ProxyConfig_default_instance_._instance.get_mutable()->parent_shutdown_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::istio::mesh::v1alpha1::_ProxyConfig_default_instance_._instance.get_mutable()->discovery_refresh_delay_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::istio::mesh::v1alpha1::_ProxyConfig_default_instance_._instance.get_mutable()->connect_timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::istio::mesh::v1alpha1::_ProxyConfig_default_instance_._instance.get_mutable()->tracing_ = const_cast< ::istio::mesh::v1alpha1::Tracing*>(
      ::istio::mesh::v1alpha1::Tracing::internal_default_instance());
}
void ProxyConfig::clear_drain_duration() {
  if (GetArenaNoVirtual() == NULL && drain_duration_ != NULL) {
    delete drain_duration_;
  }
  drain_duration_ = NULL;
}
void ProxyConfig::clear_parent_shutdown_duration() {
  if (GetArenaNoVirtual() == NULL && parent_shutdown_duration_ != NULL) {
    delete parent_shutdown_duration_;
  }
  parent_shutdown_duration_ = NULL;
}
void ProxyConfig::clear_discovery_refresh_delay() {
  if (GetArenaNoVirtual() == NULL && discovery_refresh_delay_ != NULL) {
    delete discovery_refresh_delay_;
  }
  discovery_refresh_delay_ = NULL;
}
void ProxyConfig::clear_connect_timeout() {
  if (GetArenaNoVirtual() == NULL && connect_timeout_ != NULL) {
    delete connect_timeout_;
  }
  connect_timeout_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProxyConfig::kConfigPathFieldNumber;
const int ProxyConfig::kBinaryPathFieldNumber;
const int ProxyConfig::kServiceClusterFieldNumber;
const int ProxyConfig::kDrainDurationFieldNumber;
const int ProxyConfig::kParentShutdownDurationFieldNumber;
const int ProxyConfig::kDiscoveryAddressFieldNumber;
const int ProxyConfig::kDiscoveryRefreshDelayFieldNumber;
const int ProxyConfig::kZipkinAddressFieldNumber;
const int ProxyConfig::kConnectTimeoutFieldNumber;
const int ProxyConfig::kStatsdUdpAddressFieldNumber;
const int ProxyConfig::kEnvoyMetricsServiceAddressFieldNumber;
const int ProxyConfig::kProxyAdminPortFieldNumber;
const int ProxyConfig::kAvailabilityZoneFieldNumber;
const int ProxyConfig::kControlPlaneAuthPolicyFieldNumber;
const int ProxyConfig::kCustomConfigFileFieldNumber;
const int ProxyConfig::kStatNameLengthFieldNumber;
const int ProxyConfig::kConcurrencyFieldNumber;
const int ProxyConfig::kProxyBootstrapTemplatePathFieldNumber;
const int ProxyConfig::kInterceptionModeFieldNumber;
const int ProxyConfig::kTracingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProxyConfig::ProxyConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsProxyConfig();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mesh.v1alpha1.ProxyConfig)
}
ProxyConfig::ProxyConfig(const ProxyConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  config_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.config_path().size() > 0) {
    config_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_path_);
  }
  binary_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.binary_path().size() > 0) {
    binary_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binary_path_);
  }
  service_cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_cluster().size() > 0) {
    service_cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_cluster_);
  }
  discovery_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.discovery_address().size() > 0) {
    discovery_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.discovery_address_);
  }
  zipkin_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zipkin_address().size() > 0) {
    zipkin_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zipkin_address_);
  }
  statsd_udp_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.statsd_udp_address().size() > 0) {
    statsd_udp_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statsd_udp_address_);
  }
  availability_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.availability_zone().size() > 0) {
    availability_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.availability_zone_);
  }
  custom_config_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.custom_config_file().size() > 0) {
    custom_config_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_config_file_);
  }
  proxy_bootstrap_template_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.proxy_bootstrap_template_path().size() > 0) {
    proxy_bootstrap_template_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proxy_bootstrap_template_path_);
  }
  envoy_metrics_service_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.envoy_metrics_service_address().size() > 0) {
    envoy_metrics_service_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.envoy_metrics_service_address_);
  }
  if (from.has_drain_duration()) {
    drain_duration_ = new ::google::protobuf::Duration(*from.drain_duration_);
  } else {
    drain_duration_ = NULL;
  }
  if (from.has_parent_shutdown_duration()) {
    parent_shutdown_duration_ = new ::google::protobuf::Duration(*from.parent_shutdown_duration_);
  } else {
    parent_shutdown_duration_ = NULL;
  }
  if (from.has_discovery_refresh_delay()) {
    discovery_refresh_delay_ = new ::google::protobuf::Duration(*from.discovery_refresh_delay_);
  } else {
    discovery_refresh_delay_ = NULL;
  }
  if (from.has_connect_timeout()) {
    connect_timeout_ = new ::google::protobuf::Duration(*from.connect_timeout_);
  } else {
    connect_timeout_ = NULL;
  }
  if (from.has_tracing()) {
    tracing_ = new ::istio::mesh::v1alpha1::Tracing(*from.tracing_);
  } else {
    tracing_ = NULL;
  }
  ::memcpy(&proxy_admin_port_, &from.proxy_admin_port_,
    static_cast<size_t>(reinterpret_cast<char*>(&interception_mode_) -
    reinterpret_cast<char*>(&proxy_admin_port_)) + sizeof(interception_mode_));
  // @@protoc_insertion_point(copy_constructor:istio.mesh.v1alpha1.ProxyConfig)
}

void ProxyConfig::SharedCtor() {
  config_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_cluster_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discovery_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipkin_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statsd_udp_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  availability_zone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_config_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxy_bootstrap_template_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  envoy_metrics_service_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&drain_duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interception_mode_) -
      reinterpret_cast<char*>(&drain_duration_)) + sizeof(interception_mode_));
  _cached_size_ = 0;
}

ProxyConfig::~ProxyConfig() {
  // @@protoc_insertion_point(destructor:istio.mesh.v1alpha1.ProxyConfig)
  SharedDtor();
}

void ProxyConfig::SharedDtor() {
  config_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discovery_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipkin_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statsd_udp_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  availability_zone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_config_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxy_bootstrap_template_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  envoy_metrics_service_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete drain_duration_;
  if (this != internal_default_instance()) delete parent_shutdown_duration_;
  if (this != internal_default_instance()) delete discovery_refresh_delay_;
  if (this != internal_default_instance()) delete connect_timeout_;
  if (this != internal_default_instance()) delete tracing_;
}

void ProxyConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProxyConfig::descriptor() {
  ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ProxyConfig& ProxyConfig::default_instance() {
  ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::InitDefaultsProxyConfig();
  return *internal_default_instance();
}

ProxyConfig* ProxyConfig::New(::google::protobuf::Arena* arena) const {
  ProxyConfig* n = new ProxyConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProxyConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mesh.v1alpha1.ProxyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  config_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  binary_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  discovery_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zipkin_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  statsd_udp_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  availability_zone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_config_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  proxy_bootstrap_template_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  envoy_metrics_service_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && drain_duration_ != NULL) {
    delete drain_duration_;
  }
  drain_duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && parent_shutdown_duration_ != NULL) {
    delete parent_shutdown_duration_;
  }
  parent_shutdown_duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && discovery_refresh_delay_ != NULL) {
    delete discovery_refresh_delay_;
  }
  discovery_refresh_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && connect_timeout_ != NULL) {
    delete connect_timeout_;
  }
  connect_timeout_ = NULL;
  if (GetArenaNoVirtual() == NULL && tracing_ != NULL) {
    delete tracing_;
  }
  tracing_ = NULL;
  ::memset(&proxy_admin_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interception_mode_) -
      reinterpret_cast<char*>(&proxy_admin_port_)) + sizeof(interception_mode_));
  _internal_metadata_.Clear();
}

bool ProxyConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mesh.v1alpha1.ProxyConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string config_path = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_config_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->config_path().data(), static_cast<int>(this->config_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.ProxyConfig.config_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string binary_path = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_binary_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->binary_path().data(), static_cast<int>(this->binary_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.ProxyConfig.binary_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_cluster = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_cluster()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_cluster().data(), static_cast<int>(this->service_cluster().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.ProxyConfig.service_cluster"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration drain_duration = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_drain_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration parent_shutdown_duration = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_parent_shutdown_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string discovery_address = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_discovery_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->discovery_address().data(), static_cast<int>(this->discovery_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.ProxyConfig.discovery_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration discovery_refresh_delay = 7 [deprecated = true];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_discovery_refresh_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zipkin_address = 8 [deprecated = true];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zipkin_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zipkin_address().data(), static_cast<int>(this->zipkin_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.ProxyConfig.zipkin_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration connect_timeout = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connect_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string statsd_udp_address = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_statsd_udp_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->statsd_udp_address().data(), static_cast<int>(this->statsd_udp_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.ProxyConfig.statsd_udp_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 proxy_admin_port = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &proxy_admin_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string availability_zone = 12 [deprecated = true];
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_availability_zone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->availability_zone().data(), static_cast<int>(this->availability_zone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.ProxyConfig.availability_zone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mesh.v1alpha1.AuthenticationPolicy control_plane_auth_policy = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_control_plane_auth_policy(static_cast< ::istio::mesh::v1alpha1::AuthenticationPolicy >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string custom_config_file = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custom_config_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->custom_config_file().data(), static_cast<int>(this->custom_config_file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.ProxyConfig.custom_config_file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 stat_name_length = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stat_name_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 concurrency = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &concurrency_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string proxy_bootstrap_template_path = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_proxy_bootstrap_template_path()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->proxy_bootstrap_template_path().data(), static_cast<int>(this->proxy_bootstrap_template_path().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.ProxyConfig.proxy_bootstrap_template_path"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mesh.v1alpha1.ProxyConfig.InboundInterceptionMode interception_mode = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interception_mode(static_cast< ::istio::mesh::v1alpha1::ProxyConfig_InboundInterceptionMode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mesh.v1alpha1.Tracing tracing = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tracing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string envoy_metrics_service_address = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_envoy_metrics_service_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->envoy_metrics_service_address().data(), static_cast<int>(this->envoy_metrics_service_address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mesh.v1alpha1.ProxyConfig.envoy_metrics_service_address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mesh.v1alpha1.ProxyConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mesh.v1alpha1.ProxyConfig)
  return false;
#undef DO_
}

void ProxyConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mesh.v1alpha1.ProxyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string config_path = 1;
  if (this->config_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_path().data(), static_cast<int>(this->config_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.config_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->config_path(), output);
  }

  // string binary_path = 2;
  if (this->binary_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->binary_path().data(), static_cast<int>(this->binary_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.binary_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->binary_path(), output);
  }

  // string service_cluster = 3;
  if (this->service_cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_cluster().data(), static_cast<int>(this->service_cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.service_cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->service_cluster(), output);
  }

  // .google.protobuf.Duration drain_duration = 4;
  if (this->has_drain_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->drain_duration_, output);
  }

  // .google.protobuf.Duration parent_shutdown_duration = 5;
  if (this->has_parent_shutdown_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->parent_shutdown_duration_, output);
  }

  // string discovery_address = 6;
  if (this->discovery_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->discovery_address().data(), static_cast<int>(this->discovery_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.discovery_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->discovery_address(), output);
  }

  // .google.protobuf.Duration discovery_refresh_delay = 7 [deprecated = true];
  if (this->has_discovery_refresh_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->discovery_refresh_delay_, output);
  }

  // string zipkin_address = 8 [deprecated = true];
  if (this->zipkin_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zipkin_address().data(), static_cast<int>(this->zipkin_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.zipkin_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->zipkin_address(), output);
  }

  // .google.protobuf.Duration connect_timeout = 9;
  if (this->has_connect_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->connect_timeout_, output);
  }

  // string statsd_udp_address = 10;
  if (this->statsd_udp_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->statsd_udp_address().data(), static_cast<int>(this->statsd_udp_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.statsd_udp_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->statsd_udp_address(), output);
  }

  // int32 proxy_admin_port = 11;
  if (this->proxy_admin_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(11, this->proxy_admin_port(), output);
  }

  // string availability_zone = 12 [deprecated = true];
  if (this->availability_zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->availability_zone().data(), static_cast<int>(this->availability_zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.availability_zone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->availability_zone(), output);
  }

  // .istio.mesh.v1alpha1.AuthenticationPolicy control_plane_auth_policy = 13;
  if (this->control_plane_auth_policy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13, this->control_plane_auth_policy(), output);
  }

  // string custom_config_file = 14;
  if (this->custom_config_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->custom_config_file().data(), static_cast<int>(this->custom_config_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.custom_config_file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->custom_config_file(), output);
  }

  // int32 stat_name_length = 15;
  if (this->stat_name_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(15, this->stat_name_length(), output);
  }

  // int32 concurrency = 16;
  if (this->concurrency() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(16, this->concurrency(), output);
  }

  // string proxy_bootstrap_template_path = 17;
  if (this->proxy_bootstrap_template_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proxy_bootstrap_template_path().data(), static_cast<int>(this->proxy_bootstrap_template_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.proxy_bootstrap_template_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->proxy_bootstrap_template_path(), output);
  }

  // .istio.mesh.v1alpha1.ProxyConfig.InboundInterceptionMode interception_mode = 18;
  if (this->interception_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      18, this->interception_mode(), output);
  }

  // .istio.mesh.v1alpha1.Tracing tracing = 19;
  if (this->has_tracing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->tracing_, output);
  }

  // string envoy_metrics_service_address = 20;
  if (this->envoy_metrics_service_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->envoy_metrics_service_address().data(), static_cast<int>(this->envoy_metrics_service_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.envoy_metrics_service_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->envoy_metrics_service_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mesh.v1alpha1.ProxyConfig)
}

::google::protobuf::uint8* ProxyConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mesh.v1alpha1.ProxyConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string config_path = 1;
  if (this->config_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->config_path().data(), static_cast<int>(this->config_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.config_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->config_path(), target);
  }

  // string binary_path = 2;
  if (this->binary_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->binary_path().data(), static_cast<int>(this->binary_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.binary_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->binary_path(), target);
  }

  // string service_cluster = 3;
  if (this->service_cluster().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_cluster().data(), static_cast<int>(this->service_cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.service_cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->service_cluster(), target);
  }

  // .google.protobuf.Duration drain_duration = 4;
  if (this->has_drain_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *this->drain_duration_, deterministic, target);
  }

  // .google.protobuf.Duration parent_shutdown_duration = 5;
  if (this->has_parent_shutdown_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->parent_shutdown_duration_, deterministic, target);
  }

  // string discovery_address = 6;
  if (this->discovery_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->discovery_address().data(), static_cast<int>(this->discovery_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.discovery_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->discovery_address(), target);
  }

  // .google.protobuf.Duration discovery_refresh_delay = 7 [deprecated = true];
  if (this->has_discovery_refresh_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->discovery_refresh_delay_, deterministic, target);
  }

  // string zipkin_address = 8 [deprecated = true];
  if (this->zipkin_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zipkin_address().data(), static_cast<int>(this->zipkin_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.zipkin_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->zipkin_address(), target);
  }

  // .google.protobuf.Duration connect_timeout = 9;
  if (this->has_connect_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *this->connect_timeout_, deterministic, target);
  }

  // string statsd_udp_address = 10;
  if (this->statsd_udp_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->statsd_udp_address().data(), static_cast<int>(this->statsd_udp_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.statsd_udp_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->statsd_udp_address(), target);
  }

  // int32 proxy_admin_port = 11;
  if (this->proxy_admin_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(11, this->proxy_admin_port(), target);
  }

  // string availability_zone = 12 [deprecated = true];
  if (this->availability_zone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->availability_zone().data(), static_cast<int>(this->availability_zone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.availability_zone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->availability_zone(), target);
  }

  // .istio.mesh.v1alpha1.AuthenticationPolicy control_plane_auth_policy = 13;
  if (this->control_plane_auth_policy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13, this->control_plane_auth_policy(), target);
  }

  // string custom_config_file = 14;
  if (this->custom_config_file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->custom_config_file().data(), static_cast<int>(this->custom_config_file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.custom_config_file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->custom_config_file(), target);
  }

  // int32 stat_name_length = 15;
  if (this->stat_name_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(15, this->stat_name_length(), target);
  }

  // int32 concurrency = 16;
  if (this->concurrency() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(16, this->concurrency(), target);
  }

  // string proxy_bootstrap_template_path = 17;
  if (this->proxy_bootstrap_template_path().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->proxy_bootstrap_template_path().data(), static_cast<int>(this->proxy_bootstrap_template_path().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.proxy_bootstrap_template_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->proxy_bootstrap_template_path(), target);
  }

  // .istio.mesh.v1alpha1.ProxyConfig.InboundInterceptionMode interception_mode = 18;
  if (this->interception_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      18, this->interception_mode(), target);
  }

  // .istio.mesh.v1alpha1.Tracing tracing = 19;
  if (this->has_tracing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, *this->tracing_, deterministic, target);
  }

  // string envoy_metrics_service_address = 20;
  if (this->envoy_metrics_service_address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->envoy_metrics_service_address().data(), static_cast<int>(this->envoy_metrics_service_address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mesh.v1alpha1.ProxyConfig.envoy_metrics_service_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->envoy_metrics_service_address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mesh.v1alpha1.ProxyConfig)
  return target;
}

size_t ProxyConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mesh.v1alpha1.ProxyConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string config_path = 1;
  if (this->config_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->config_path());
  }

  // string binary_path = 2;
  if (this->binary_path().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->binary_path());
  }

  // string service_cluster = 3;
  if (this->service_cluster().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_cluster());
  }

  // string discovery_address = 6;
  if (this->discovery_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->discovery_address());
  }

  // string zipkin_address = 8 [deprecated = true];
  if (this->zipkin_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zipkin_address());
  }

  // string statsd_udp_address = 10;
  if (this->statsd_udp_address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->statsd_udp_address());
  }

  // string availability_zone = 12 [deprecated = true];
  if (this->availability_zone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->availability_zone());
  }

  // string custom_config_file = 14;
  if (this->custom_config_file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->custom_config_file());
  }

  // string proxy_bootstrap_template_path = 17;
  if (this->proxy_bootstrap_template_path().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->proxy_bootstrap_template_path());
  }

  // string envoy_metrics_service_address = 20;
  if (this->envoy_metrics_service_address().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->envoy_metrics_service_address());
  }

  // .google.protobuf.Duration drain_duration = 4;
  if (this->has_drain_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->drain_duration_);
  }

  // .google.protobuf.Duration parent_shutdown_duration = 5;
  if (this->has_parent_shutdown_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->parent_shutdown_duration_);
  }

  // .google.protobuf.Duration discovery_refresh_delay = 7 [deprecated = true];
  if (this->has_discovery_refresh_delay()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->discovery_refresh_delay_);
  }

  // .google.protobuf.Duration connect_timeout = 9;
  if (this->has_connect_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->connect_timeout_);
  }

  // .istio.mesh.v1alpha1.Tracing tracing = 19;
  if (this->has_tracing()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tracing_);
  }

  // int32 proxy_admin_port = 11;
  if (this->proxy_admin_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->proxy_admin_port());
  }

  // .istio.mesh.v1alpha1.AuthenticationPolicy control_plane_auth_policy = 13;
  if (this->control_plane_auth_policy() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->control_plane_auth_policy());
  }

  // int32 stat_name_length = 15;
  if (this->stat_name_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->stat_name_length());
  }

  // int32 concurrency = 16;
  if (this->concurrency() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->concurrency());
  }

  // .istio.mesh.v1alpha1.ProxyConfig.InboundInterceptionMode interception_mode = 18;
  if (this->interception_mode() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interception_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProxyConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mesh.v1alpha1.ProxyConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ProxyConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProxyConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mesh.v1alpha1.ProxyConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mesh.v1alpha1.ProxyConfig)
    MergeFrom(*source);
  }
}

void ProxyConfig::MergeFrom(const ProxyConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mesh.v1alpha1.ProxyConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.config_path().size() > 0) {

    config_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.config_path_);
  }
  if (from.binary_path().size() > 0) {

    binary_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.binary_path_);
  }
  if (from.service_cluster().size() > 0) {

    service_cluster_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_cluster_);
  }
  if (from.discovery_address().size() > 0) {

    discovery_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.discovery_address_);
  }
  if (from.zipkin_address().size() > 0) {

    zipkin_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zipkin_address_);
  }
  if (from.statsd_udp_address().size() > 0) {

    statsd_udp_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.statsd_udp_address_);
  }
  if (from.availability_zone().size() > 0) {

    availability_zone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.availability_zone_);
  }
  if (from.custom_config_file().size() > 0) {

    custom_config_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_config_file_);
  }
  if (from.proxy_bootstrap_template_path().size() > 0) {

    proxy_bootstrap_template_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.proxy_bootstrap_template_path_);
  }
  if (from.envoy_metrics_service_address().size() > 0) {

    envoy_metrics_service_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.envoy_metrics_service_address_);
  }
  if (from.has_drain_duration()) {
    mutable_drain_duration()->::google::protobuf::Duration::MergeFrom(from.drain_duration());
  }
  if (from.has_parent_shutdown_duration()) {
    mutable_parent_shutdown_duration()->::google::protobuf::Duration::MergeFrom(from.parent_shutdown_duration());
  }
  if (from.has_discovery_refresh_delay()) {
    mutable_discovery_refresh_delay()->::google::protobuf::Duration::MergeFrom(from.discovery_refresh_delay());
  }
  if (from.has_connect_timeout()) {
    mutable_connect_timeout()->::google::protobuf::Duration::MergeFrom(from.connect_timeout());
  }
  if (from.has_tracing()) {
    mutable_tracing()->::istio::mesh::v1alpha1::Tracing::MergeFrom(from.tracing());
  }
  if (from.proxy_admin_port() != 0) {
    set_proxy_admin_port(from.proxy_admin_port());
  }
  if (from.control_plane_auth_policy() != 0) {
    set_control_plane_auth_policy(from.control_plane_auth_policy());
  }
  if (from.stat_name_length() != 0) {
    set_stat_name_length(from.stat_name_length());
  }
  if (from.concurrency() != 0) {
    set_concurrency(from.concurrency());
  }
  if (from.interception_mode() != 0) {
    set_interception_mode(from.interception_mode());
  }
}

void ProxyConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mesh.v1alpha1.ProxyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProxyConfig::CopyFrom(const ProxyConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mesh.v1alpha1.ProxyConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProxyConfig::IsInitialized() const {
  return true;
}

void ProxyConfig::Swap(ProxyConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProxyConfig::InternalSwap(ProxyConfig* other) {
  using std::swap;
  config_path_.Swap(&other->config_path_);
  binary_path_.Swap(&other->binary_path_);
  service_cluster_.Swap(&other->service_cluster_);
  discovery_address_.Swap(&other->discovery_address_);
  zipkin_address_.Swap(&other->zipkin_address_);
  statsd_udp_address_.Swap(&other->statsd_udp_address_);
  availability_zone_.Swap(&other->availability_zone_);
  custom_config_file_.Swap(&other->custom_config_file_);
  proxy_bootstrap_template_path_.Swap(&other->proxy_bootstrap_template_path_);
  envoy_metrics_service_address_.Swap(&other->envoy_metrics_service_address_);
  swap(drain_duration_, other->drain_duration_);
  swap(parent_shutdown_duration_, other->parent_shutdown_duration_);
  swap(discovery_refresh_delay_, other->discovery_refresh_delay_);
  swap(connect_timeout_, other->connect_timeout_);
  swap(tracing_, other->tracing_);
  swap(proxy_admin_port_, other->proxy_admin_port_);
  swap(control_plane_auth_policy_, other->control_plane_auth_policy_);
  swap(stat_name_length_, other->stat_name_length_);
  swap(concurrency_, other->concurrency_);
  swap(interception_mode_, other->interception_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProxyConfig::GetMetadata() const {
  protobuf_mesh_2fv1alpha1_2fproxy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mesh_2fv1alpha1_2fproxy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace mesh
}  // namespace istio

// @@protoc_insertion_point(global_scope)
