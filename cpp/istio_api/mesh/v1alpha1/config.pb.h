// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mesh/v1alpha1/config.proto

#ifndef PROTOBUF_mesh_2fv1alpha1_2fconfig_2eproto__INCLUDED
#define PROTOBUF_mesh_2fv1alpha1_2fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/duration.pb.h>
#include "mesh/v1alpha1/proxy.pb.h"
#include "networking/v1alpha3/destination_rule.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_mesh_2fv1alpha1_2fconfig_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMeshConfig_OutboundTrafficPolicyImpl();
void InitDefaultsMeshConfig_OutboundTrafficPolicy();
void InitDefaultsMeshConfigImpl();
void InitDefaultsMeshConfig();
void InitDefaultsConfigSourceImpl();
void InitDefaultsConfigSource();
void InitDefaultsLocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUseImpl();
void InitDefaultsLocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse();
void InitDefaultsLocalityLoadBalancerSetting_DistributeImpl();
void InitDefaultsLocalityLoadBalancerSetting_Distribute();
void InitDefaultsLocalityLoadBalancerSetting_FailoverImpl();
void InitDefaultsLocalityLoadBalancerSetting_Failover();
void InitDefaultsLocalityLoadBalancerSettingImpl();
void InitDefaultsLocalityLoadBalancerSetting();
inline void InitDefaults() {
  InitDefaultsMeshConfig_OutboundTrafficPolicy();
  InitDefaultsMeshConfig();
  InitDefaultsConfigSource();
  InitDefaultsLocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse();
  InitDefaultsLocalityLoadBalancerSetting_Distribute();
  InitDefaultsLocalityLoadBalancerSetting_Failover();
  InitDefaultsLocalityLoadBalancerSetting();
}
}  // namespace protobuf_mesh_2fv1alpha1_2fconfig_2eproto
namespace istio {
namespace mesh {
namespace v1alpha1 {
class ConfigSource;
class ConfigSourceDefaultTypeInternal;
extern ConfigSourceDefaultTypeInternal _ConfigSource_default_instance_;
class LocalityLoadBalancerSetting;
class LocalityLoadBalancerSettingDefaultTypeInternal;
extern LocalityLoadBalancerSettingDefaultTypeInternal _LocalityLoadBalancerSetting_default_instance_;
class LocalityLoadBalancerSetting_Distribute;
class LocalityLoadBalancerSetting_DistributeDefaultTypeInternal;
extern LocalityLoadBalancerSetting_DistributeDefaultTypeInternal _LocalityLoadBalancerSetting_Distribute_default_instance_;
class LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse;
class LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUseDefaultTypeInternal;
extern LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUseDefaultTypeInternal _LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse_default_instance_;
class LocalityLoadBalancerSetting_Failover;
class LocalityLoadBalancerSetting_FailoverDefaultTypeInternal;
extern LocalityLoadBalancerSetting_FailoverDefaultTypeInternal _LocalityLoadBalancerSetting_Failover_default_instance_;
class MeshConfig;
class MeshConfigDefaultTypeInternal;
extern MeshConfigDefaultTypeInternal _MeshConfig_default_instance_;
class MeshConfig_OutboundTrafficPolicy;
class MeshConfig_OutboundTrafficPolicyDefaultTypeInternal;
extern MeshConfig_OutboundTrafficPolicyDefaultTypeInternal _MeshConfig_OutboundTrafficPolicy_default_instance_;
}  // namespace v1alpha1
}  // namespace mesh
}  // namespace istio
namespace istio {
namespace mesh {
namespace v1alpha1 {

enum MeshConfig_OutboundTrafficPolicy_Mode {
  MeshConfig_OutboundTrafficPolicy_Mode_REGISTRY_ONLY = 0,
  MeshConfig_OutboundTrafficPolicy_Mode_ALLOW_ANY = 1,
  MeshConfig_OutboundTrafficPolicy_Mode_MeshConfig_OutboundTrafficPolicy_Mode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MeshConfig_OutboundTrafficPolicy_Mode_MeshConfig_OutboundTrafficPolicy_Mode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MeshConfig_OutboundTrafficPolicy_Mode_IsValid(int value);
const MeshConfig_OutboundTrafficPolicy_Mode MeshConfig_OutboundTrafficPolicy_Mode_Mode_MIN = MeshConfig_OutboundTrafficPolicy_Mode_REGISTRY_ONLY;
const MeshConfig_OutboundTrafficPolicy_Mode MeshConfig_OutboundTrafficPolicy_Mode_Mode_MAX = MeshConfig_OutboundTrafficPolicy_Mode_ALLOW_ANY;
const int MeshConfig_OutboundTrafficPolicy_Mode_Mode_ARRAYSIZE = MeshConfig_OutboundTrafficPolicy_Mode_Mode_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeshConfig_OutboundTrafficPolicy_Mode_descriptor();
inline const ::std::string& MeshConfig_OutboundTrafficPolicy_Mode_Name(MeshConfig_OutboundTrafficPolicy_Mode value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeshConfig_OutboundTrafficPolicy_Mode_descriptor(), value);
}
inline bool MeshConfig_OutboundTrafficPolicy_Mode_Parse(
    const ::std::string& name, MeshConfig_OutboundTrafficPolicy_Mode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeshConfig_OutboundTrafficPolicy_Mode>(
    MeshConfig_OutboundTrafficPolicy_Mode_descriptor(), name, value);
}
enum MeshConfig_IngressControllerMode {
  MeshConfig_IngressControllerMode_OFF = 0,
  MeshConfig_IngressControllerMode_DEFAULT = 1,
  MeshConfig_IngressControllerMode_STRICT = 2,
  MeshConfig_IngressControllerMode_MeshConfig_IngressControllerMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MeshConfig_IngressControllerMode_MeshConfig_IngressControllerMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MeshConfig_IngressControllerMode_IsValid(int value);
const MeshConfig_IngressControllerMode MeshConfig_IngressControllerMode_IngressControllerMode_MIN = MeshConfig_IngressControllerMode_OFF;
const MeshConfig_IngressControllerMode MeshConfig_IngressControllerMode_IngressControllerMode_MAX = MeshConfig_IngressControllerMode_STRICT;
const int MeshConfig_IngressControllerMode_IngressControllerMode_ARRAYSIZE = MeshConfig_IngressControllerMode_IngressControllerMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeshConfig_IngressControllerMode_descriptor();
inline const ::std::string& MeshConfig_IngressControllerMode_Name(MeshConfig_IngressControllerMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeshConfig_IngressControllerMode_descriptor(), value);
}
inline bool MeshConfig_IngressControllerMode_Parse(
    const ::std::string& name, MeshConfig_IngressControllerMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeshConfig_IngressControllerMode>(
    MeshConfig_IngressControllerMode_descriptor(), name, value);
}
enum MeshConfig_AuthPolicy {
  MeshConfig_AuthPolicy_NONE = 0,
  MeshConfig_AuthPolicy_MUTUAL_TLS = 1,
  MeshConfig_AuthPolicy_MeshConfig_AuthPolicy_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MeshConfig_AuthPolicy_MeshConfig_AuthPolicy_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MeshConfig_AuthPolicy_IsValid(int value);
const MeshConfig_AuthPolicy MeshConfig_AuthPolicy_AuthPolicy_MIN = MeshConfig_AuthPolicy_NONE;
const MeshConfig_AuthPolicy MeshConfig_AuthPolicy_AuthPolicy_MAX = MeshConfig_AuthPolicy_MUTUAL_TLS;
const int MeshConfig_AuthPolicy_AuthPolicy_ARRAYSIZE = MeshConfig_AuthPolicy_AuthPolicy_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeshConfig_AuthPolicy_descriptor();
inline const ::std::string& MeshConfig_AuthPolicy_Name(MeshConfig_AuthPolicy value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeshConfig_AuthPolicy_descriptor(), value);
}
inline bool MeshConfig_AuthPolicy_Parse(
    const ::std::string& name, MeshConfig_AuthPolicy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeshConfig_AuthPolicy>(
    MeshConfig_AuthPolicy_descriptor(), name, value);
}
enum MeshConfig_AccessLogEncoding {
  MeshConfig_AccessLogEncoding_TEXT = 0,
  MeshConfig_AccessLogEncoding_JSON = 1,
  MeshConfig_AccessLogEncoding_MeshConfig_AccessLogEncoding_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MeshConfig_AccessLogEncoding_MeshConfig_AccessLogEncoding_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MeshConfig_AccessLogEncoding_IsValid(int value);
const MeshConfig_AccessLogEncoding MeshConfig_AccessLogEncoding_AccessLogEncoding_MIN = MeshConfig_AccessLogEncoding_TEXT;
const MeshConfig_AccessLogEncoding MeshConfig_AccessLogEncoding_AccessLogEncoding_MAX = MeshConfig_AccessLogEncoding_JSON;
const int MeshConfig_AccessLogEncoding_AccessLogEncoding_ARRAYSIZE = MeshConfig_AccessLogEncoding_AccessLogEncoding_MAX + 1;

const ::google::protobuf::EnumDescriptor* MeshConfig_AccessLogEncoding_descriptor();
inline const ::std::string& MeshConfig_AccessLogEncoding_Name(MeshConfig_AccessLogEncoding value) {
  return ::google::protobuf::internal::NameOfEnum(
    MeshConfig_AccessLogEncoding_descriptor(), value);
}
inline bool MeshConfig_AccessLogEncoding_Parse(
    const ::std::string& name, MeshConfig_AccessLogEncoding* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MeshConfig_AccessLogEncoding>(
    MeshConfig_AccessLogEncoding_descriptor(), name, value);
}
// ===================================================================

class MeshConfig_OutboundTrafficPolicy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy) */ {
 public:
  MeshConfig_OutboundTrafficPolicy();
  virtual ~MeshConfig_OutboundTrafficPolicy();

  MeshConfig_OutboundTrafficPolicy(const MeshConfig_OutboundTrafficPolicy& from);

  inline MeshConfig_OutboundTrafficPolicy& operator=(const MeshConfig_OutboundTrafficPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeshConfig_OutboundTrafficPolicy(MeshConfig_OutboundTrafficPolicy&& from) noexcept
    : MeshConfig_OutboundTrafficPolicy() {
    *this = ::std::move(from);
  }

  inline MeshConfig_OutboundTrafficPolicy& operator=(MeshConfig_OutboundTrafficPolicy&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MeshConfig_OutboundTrafficPolicy& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeshConfig_OutboundTrafficPolicy* internal_default_instance() {
    return reinterpret_cast<const MeshConfig_OutboundTrafficPolicy*>(
               &_MeshConfig_OutboundTrafficPolicy_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(MeshConfig_OutboundTrafficPolicy* other);
  friend void swap(MeshConfig_OutboundTrafficPolicy& a, MeshConfig_OutboundTrafficPolicy& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeshConfig_OutboundTrafficPolicy* New() const PROTOBUF_FINAL { return New(NULL); }

  MeshConfig_OutboundTrafficPolicy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MeshConfig_OutboundTrafficPolicy& from);
  void MergeFrom(const MeshConfig_OutboundTrafficPolicy& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MeshConfig_OutboundTrafficPolicy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MeshConfig_OutboundTrafficPolicy_Mode Mode;
  static const Mode REGISTRY_ONLY =
    MeshConfig_OutboundTrafficPolicy_Mode_REGISTRY_ONLY;
  static const Mode ALLOW_ANY =
    MeshConfig_OutboundTrafficPolicy_Mode_ALLOW_ANY;
  static inline bool Mode_IsValid(int value) {
    return MeshConfig_OutboundTrafficPolicy_Mode_IsValid(value);
  }
  static const Mode Mode_MIN =
    MeshConfig_OutboundTrafficPolicy_Mode_Mode_MIN;
  static const Mode Mode_MAX =
    MeshConfig_OutboundTrafficPolicy_Mode_Mode_MAX;
  static const int Mode_ARRAYSIZE =
    MeshConfig_OutboundTrafficPolicy_Mode_Mode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Mode_descriptor() {
    return MeshConfig_OutboundTrafficPolicy_Mode_descriptor();
  }
  static inline const ::std::string& Mode_Name(Mode value) {
    return MeshConfig_OutboundTrafficPolicy_Mode_Name(value);
  }
  static inline bool Mode_Parse(const ::std::string& name,
      Mode* value) {
    return MeshConfig_OutboundTrafficPolicy_Mode_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy.Mode mode = 1;
  void clear_mode();
  static const int kModeFieldNumber = 1;
  ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy_Mode mode() const;
  void set_mode(::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy_Mode value);

  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsMeshConfig_OutboundTrafficPolicyImpl();
};
// -------------------------------------------------------------------

class MeshConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.MeshConfig) */ {
 public:
  MeshConfig();
  virtual ~MeshConfig();

  MeshConfig(const MeshConfig& from);

  inline MeshConfig& operator=(const MeshConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MeshConfig(MeshConfig&& from) noexcept
    : MeshConfig() {
    *this = ::std::move(from);
  }

  inline MeshConfig& operator=(MeshConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MeshConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MeshConfig* internal_default_instance() {
    return reinterpret_cast<const MeshConfig*>(
               &_MeshConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(MeshConfig* other);
  friend void swap(MeshConfig& a, MeshConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MeshConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  MeshConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MeshConfig& from);
  void MergeFrom(const MeshConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MeshConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef MeshConfig_OutboundTrafficPolicy OutboundTrafficPolicy;

  typedef MeshConfig_IngressControllerMode IngressControllerMode;
  static const IngressControllerMode OFF =
    MeshConfig_IngressControllerMode_OFF;
  static const IngressControllerMode DEFAULT =
    MeshConfig_IngressControllerMode_DEFAULT;
  static const IngressControllerMode STRICT =
    MeshConfig_IngressControllerMode_STRICT;
  static inline bool IngressControllerMode_IsValid(int value) {
    return MeshConfig_IngressControllerMode_IsValid(value);
  }
  static const IngressControllerMode IngressControllerMode_MIN =
    MeshConfig_IngressControllerMode_IngressControllerMode_MIN;
  static const IngressControllerMode IngressControllerMode_MAX =
    MeshConfig_IngressControllerMode_IngressControllerMode_MAX;
  static const int IngressControllerMode_ARRAYSIZE =
    MeshConfig_IngressControllerMode_IngressControllerMode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  IngressControllerMode_descriptor() {
    return MeshConfig_IngressControllerMode_descriptor();
  }
  static inline const ::std::string& IngressControllerMode_Name(IngressControllerMode value) {
    return MeshConfig_IngressControllerMode_Name(value);
  }
  static inline bool IngressControllerMode_Parse(const ::std::string& name,
      IngressControllerMode* value) {
    return MeshConfig_IngressControllerMode_Parse(name, value);
  }

  typedef MeshConfig_AuthPolicy AuthPolicy;
  static const AuthPolicy NONE =
    MeshConfig_AuthPolicy_NONE;
  static const AuthPolicy MUTUAL_TLS =
    MeshConfig_AuthPolicy_MUTUAL_TLS;
  static inline bool AuthPolicy_IsValid(int value) {
    return MeshConfig_AuthPolicy_IsValid(value);
  }
  static const AuthPolicy AuthPolicy_MIN =
    MeshConfig_AuthPolicy_AuthPolicy_MIN;
  static const AuthPolicy AuthPolicy_MAX =
    MeshConfig_AuthPolicy_AuthPolicy_MAX;
  static const int AuthPolicy_ARRAYSIZE =
    MeshConfig_AuthPolicy_AuthPolicy_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AuthPolicy_descriptor() {
    return MeshConfig_AuthPolicy_descriptor();
  }
  static inline const ::std::string& AuthPolicy_Name(AuthPolicy value) {
    return MeshConfig_AuthPolicy_Name(value);
  }
  static inline bool AuthPolicy_Parse(const ::std::string& name,
      AuthPolicy* value) {
    return MeshConfig_AuthPolicy_Parse(name, value);
  }

  typedef MeshConfig_AccessLogEncoding AccessLogEncoding;
  static const AccessLogEncoding TEXT =
    MeshConfig_AccessLogEncoding_TEXT;
  static const AccessLogEncoding JSON =
    MeshConfig_AccessLogEncoding_JSON;
  static inline bool AccessLogEncoding_IsValid(int value) {
    return MeshConfig_AccessLogEncoding_IsValid(value);
  }
  static const AccessLogEncoding AccessLogEncoding_MIN =
    MeshConfig_AccessLogEncoding_AccessLogEncoding_MIN;
  static const AccessLogEncoding AccessLogEncoding_MAX =
    MeshConfig_AccessLogEncoding_AccessLogEncoding_MAX;
  static const int AccessLogEncoding_ARRAYSIZE =
    MeshConfig_AccessLogEncoding_AccessLogEncoding_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AccessLogEncoding_descriptor() {
    return MeshConfig_AccessLogEncoding_descriptor();
  }
  static inline const ::std::string& AccessLogEncoding_Name(AccessLogEncoding value) {
    return MeshConfig_AccessLogEncoding_Name(value);
  }
  static inline bool AccessLogEncoding_Parse(const ::std::string& name,
      AccessLogEncoding* value) {
    return MeshConfig_AccessLogEncoding_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .istio.mesh.v1alpha1.ConfigSource config_sources = 22;
  int config_sources_size() const;
  void clear_config_sources();
  static const int kConfigSourcesFieldNumber = 22;
  const ::istio::mesh::v1alpha1::ConfigSource& config_sources(int index) const;
  ::istio::mesh::v1alpha1::ConfigSource* mutable_config_sources(int index);
  ::istio::mesh::v1alpha1::ConfigSource* add_config_sources();
  ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::ConfigSource >*
      mutable_config_sources();
  const ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::ConfigSource >&
      config_sources() const;

  // repeated string default_service_export_to = 31;
  int default_service_export_to_size() const;
  void clear_default_service_export_to();
  static const int kDefaultServiceExportToFieldNumber = 31;
  const ::std::string& default_service_export_to(int index) const;
  ::std::string* mutable_default_service_export_to(int index);
  void set_default_service_export_to(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_default_service_export_to(int index, ::std::string&& value);
  #endif
  void set_default_service_export_to(int index, const char* value);
  void set_default_service_export_to(int index, const char* value, size_t size);
  ::std::string* add_default_service_export_to();
  void add_default_service_export_to(const ::std::string& value);
  #if LANG_CXX11
  void add_default_service_export_to(::std::string&& value);
  #endif
  void add_default_service_export_to(const char* value);
  void add_default_service_export_to(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& default_service_export_to() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_default_service_export_to();

  // repeated string default_virtual_service_export_to = 32;
  int default_virtual_service_export_to_size() const;
  void clear_default_virtual_service_export_to();
  static const int kDefaultVirtualServiceExportToFieldNumber = 32;
  const ::std::string& default_virtual_service_export_to(int index) const;
  ::std::string* mutable_default_virtual_service_export_to(int index);
  void set_default_virtual_service_export_to(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_default_virtual_service_export_to(int index, ::std::string&& value);
  #endif
  void set_default_virtual_service_export_to(int index, const char* value);
  void set_default_virtual_service_export_to(int index, const char* value, size_t size);
  ::std::string* add_default_virtual_service_export_to();
  void add_default_virtual_service_export_to(const ::std::string& value);
  #if LANG_CXX11
  void add_default_virtual_service_export_to(::std::string&& value);
  #endif
  void add_default_virtual_service_export_to(const char* value);
  void add_default_virtual_service_export_to(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& default_virtual_service_export_to() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_default_virtual_service_export_to();

  // repeated string default_destination_rule_export_to = 33;
  int default_destination_rule_export_to_size() const;
  void clear_default_destination_rule_export_to();
  static const int kDefaultDestinationRuleExportToFieldNumber = 33;
  const ::std::string& default_destination_rule_export_to(int index) const;
  ::std::string* mutable_default_destination_rule_export_to(int index);
  void set_default_destination_rule_export_to(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_default_destination_rule_export_to(int index, ::std::string&& value);
  #endif
  void set_default_destination_rule_export_to(int index, const char* value);
  void set_default_destination_rule_export_to(int index, const char* value, size_t size);
  ::std::string* add_default_destination_rule_export_to();
  void add_default_destination_rule_export_to(const ::std::string& value);
  #if LANG_CXX11
  void add_default_destination_rule_export_to(::std::string&& value);
  #endif
  void add_default_destination_rule_export_to(const char* value);
  void add_default_destination_rule_export_to(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& default_destination_rule_export_to() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_default_destination_rule_export_to();

  // string mixer_check_server = 1;
  void clear_mixer_check_server();
  static const int kMixerCheckServerFieldNumber = 1;
  const ::std::string& mixer_check_server() const;
  void set_mixer_check_server(const ::std::string& value);
  #if LANG_CXX11
  void set_mixer_check_server(::std::string&& value);
  #endif
  void set_mixer_check_server(const char* value);
  void set_mixer_check_server(const char* value, size_t size);
  ::std::string* mutable_mixer_check_server();
  ::std::string* release_mixer_check_server();
  void set_allocated_mixer_check_server(::std::string* mixer_check_server);

  // string mixer_report_server = 2;
  void clear_mixer_report_server();
  static const int kMixerReportServerFieldNumber = 2;
  const ::std::string& mixer_report_server() const;
  void set_mixer_report_server(const ::std::string& value);
  #if LANG_CXX11
  void set_mixer_report_server(::std::string&& value);
  #endif
  void set_mixer_report_server(const char* value);
  void set_mixer_report_server(const char* value, size_t size);
  ::std::string* mutable_mixer_report_server();
  ::std::string* release_mixer_report_server();
  void set_allocated_mixer_report_server(::std::string* mixer_report_server);

  // string ingress_class = 7;
  void clear_ingress_class();
  static const int kIngressClassFieldNumber = 7;
  const ::std::string& ingress_class() const;
  void set_ingress_class(const ::std::string& value);
  #if LANG_CXX11
  void set_ingress_class(::std::string&& value);
  #endif
  void set_ingress_class(const char* value);
  void set_ingress_class(const char* value, size_t size);
  ::std::string* mutable_ingress_class();
  ::std::string* release_ingress_class();
  void set_allocated_ingress_class(::std::string* ingress_class);

  // string ingress_service = 8;
  void clear_ingress_service();
  static const int kIngressServiceFieldNumber = 8;
  const ::std::string& ingress_service() const;
  void set_ingress_service(const ::std::string& value);
  #if LANG_CXX11
  void set_ingress_service(::std::string&& value);
  #endif
  void set_ingress_service(const char* value);
  void set_ingress_service(const char* value, size_t size);
  ::std::string* mutable_ingress_service();
  ::std::string* release_ingress_service();
  void set_allocated_ingress_service(::std::string* ingress_service);

  // string access_log_file = 13;
  void clear_access_log_file();
  static const int kAccessLogFileFieldNumber = 13;
  const ::std::string& access_log_file() const;
  void set_access_log_file(const ::std::string& value);
  #if LANG_CXX11
  void set_access_log_file(::std::string&& value);
  #endif
  void set_access_log_file(const char* value);
  void set_access_log_file(const char* value, size_t size);
  ::std::string* mutable_access_log_file();
  ::std::string* release_access_log_file();
  void set_allocated_access_log_file(::std::string* access_log_file);

  // string mixer_address = 16 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_mixer_address();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kMixerAddressFieldNumber = 16;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::std::string& mixer_address() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_mixer_address(const ::std::string& value);
  #if LANG_CXX11
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_mixer_address(::std::string&& value);
  #endif
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_mixer_address(const char* value);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_mixer_address(const char* value, size_t size);
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* mutable_mixer_address();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::std::string* release_mixer_address();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_mixer_address(::std::string* mixer_address);

  // string sds_uds_path = 20;
  void clear_sds_uds_path();
  static const int kSdsUdsPathFieldNumber = 20;
  const ::std::string& sds_uds_path() const;
  void set_sds_uds_path(const ::std::string& value);
  #if LANG_CXX11
  void set_sds_uds_path(::std::string&& value);
  #endif
  void set_sds_uds_path(const char* value);
  void set_sds_uds_path(const char* value, size_t size);
  ::std::string* mutable_sds_uds_path();
  ::std::string* release_sds_uds_path();
  void set_allocated_sds_uds_path(::std::string* sds_uds_path);

  // string access_log_format = 24;
  void clear_access_log_format();
  static const int kAccessLogFormatFieldNumber = 24;
  const ::std::string& access_log_format() const;
  void set_access_log_format(const ::std::string& value);
  #if LANG_CXX11
  void set_access_log_format(::std::string&& value);
  #endif
  void set_access_log_format(const char* value);
  void set_access_log_format(const char* value, size_t size);
  ::std::string* mutable_access_log_format();
  ::std::string* release_access_log_format();
  void set_allocated_access_log_format(::std::string* access_log_format);

  // string trust_domain = 26;
  void clear_trust_domain();
  static const int kTrustDomainFieldNumber = 26;
  const ::std::string& trust_domain() const;
  void set_trust_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_trust_domain(::std::string&& value);
  #endif
  void set_trust_domain(const char* value);
  void set_trust_domain(const char* value, size_t size);
  ::std::string* mutable_trust_domain();
  ::std::string* release_trust_domain();
  void set_allocated_trust_domain(::std::string* trust_domain);

  // string root_namespace = 34;
  void clear_root_namespace();
  static const int kRootNamespaceFieldNumber = 34;
  const ::std::string& root_namespace() const;
  void set_root_namespace(const ::std::string& value);
  #if LANG_CXX11
  void set_root_namespace(::std::string&& value);
  #endif
  void set_root_namespace(const char* value);
  void set_root_namespace(const char* value, size_t size);
  ::std::string* mutable_root_namespace();
  ::std::string* release_root_namespace();
  void set_allocated_root_namespace(::std::string* root_namespace);

  // .google.protobuf.Duration connect_timeout = 6;
  bool has_connect_timeout() const;
  void clear_connect_timeout();
  static const int kConnectTimeoutFieldNumber = 6;
  const ::google::protobuf::Duration& connect_timeout() const;
  ::google::protobuf::Duration* release_connect_timeout();
  ::google::protobuf::Duration* mutable_connect_timeout();
  void set_allocated_connect_timeout(::google::protobuf::Duration* connect_timeout);

  // .google.protobuf.Duration rds_refresh_delay = 11 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_rds_refresh_delay() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_rds_refresh_delay();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kRdsRefreshDelayFieldNumber = 11;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::google::protobuf::Duration& rds_refresh_delay() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::Duration* release_rds_refresh_delay();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::Duration* mutable_rds_refresh_delay();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_rds_refresh_delay(::google::protobuf::Duration* rds_refresh_delay);

  // .istio.mesh.v1alpha1.ProxyConfig default_config = 14;
  bool has_default_config() const;
  void clear_default_config();
  static const int kDefaultConfigFieldNumber = 14;
  const ::istio::mesh::v1alpha1::ProxyConfig& default_config() const;
  ::istio::mesh::v1alpha1::ProxyConfig* release_default_config();
  ::istio::mesh::v1alpha1::ProxyConfig* mutable_default_config();
  void set_allocated_default_config(::istio::mesh::v1alpha1::ProxyConfig* default_config);

  // .istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy outbound_traffic_policy = 17;
  bool has_outbound_traffic_policy() const;
  void clear_outbound_traffic_policy();
  static const int kOutboundTrafficPolicyFieldNumber = 17;
  const ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy& outbound_traffic_policy() const;
  ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy* release_outbound_traffic_policy();
  ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy* mutable_outbound_traffic_policy();
  void set_allocated_outbound_traffic_policy(::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy* outbound_traffic_policy);

  // .google.protobuf.Duration sds_refresh_delay = 21 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR bool has_sds_refresh_delay() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_sds_refresh_delay();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kSdsRefreshDelayFieldNumber = 21;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR const ::google::protobuf::Duration& sds_refresh_delay() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::Duration* release_sds_refresh_delay();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::google::protobuf::Duration* mutable_sds_refresh_delay();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_allocated_sds_refresh_delay(::google::protobuf::Duration* sds_refresh_delay);

  // .istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 28;
  bool has_tcp_keepalive() const;
  void clear_tcp_keepalive();
  static const int kTcpKeepaliveFieldNumber = 28;
  const ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive& tcp_keepalive() const;
  ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive* release_tcp_keepalive();
  ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive* mutable_tcp_keepalive();
  void set_allocated_tcp_keepalive(::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive* tcp_keepalive);

  // .istio.mesh.v1alpha1.LocalityLoadBalancerSetting locality_lb_setting = 35;
  bool has_locality_lb_setting() const;
  void clear_locality_lb_setting();
  static const int kLocalityLbSettingFieldNumber = 35;
  const ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting& locality_lb_setting() const;
  ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting* release_locality_lb_setting();
  ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting* mutable_locality_lb_setting();
  void set_allocated_locality_lb_setting(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting* locality_lb_setting);

  // int32 proxy_listen_port = 4;
  void clear_proxy_listen_port();
  static const int kProxyListenPortFieldNumber = 4;
  ::google::protobuf::int32 proxy_listen_port() const;
  void set_proxy_listen_port(::google::protobuf::int32 value);

  // int32 proxy_http_port = 5;
  void clear_proxy_http_port();
  static const int kProxyHttpPortFieldNumber = 5;
  ::google::protobuf::int32 proxy_http_port() const;
  void set_proxy_http_port(::google::protobuf::int32 value);

  // .istio.mesh.v1alpha1.MeshConfig.IngressControllerMode ingress_controller_mode = 9;
  void clear_ingress_controller_mode();
  static const int kIngressControllerModeFieldNumber = 9;
  ::istio::mesh::v1alpha1::MeshConfig_IngressControllerMode ingress_controller_mode() const;
  void set_ingress_controller_mode(::istio::mesh::v1alpha1::MeshConfig_IngressControllerMode value);

  // .istio.mesh.v1alpha1.MeshConfig.AuthPolicy auth_policy = 10 [deprecated = true];
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void clear_auth_policy();
  GOOGLE_PROTOBUF_DEPRECATED_ATTR static const int kAuthPolicyFieldNumber = 10;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR ::istio::mesh::v1alpha1::MeshConfig_AuthPolicy auth_policy() const;
  GOOGLE_PROTOBUF_DEPRECATED_ATTR void set_auth_policy(::istio::mesh::v1alpha1::MeshConfig_AuthPolicy value);

  // bool disable_policy_checks = 3;
  void clear_disable_policy_checks();
  static const int kDisablePolicyChecksFieldNumber = 3;
  bool disable_policy_checks() const;
  void set_disable_policy_checks(bool value);

  // bool policy_check_fail_open = 25;
  void clear_policy_check_fail_open();
  static const int kPolicyCheckFailOpenFieldNumber = 25;
  bool policy_check_fail_open() const;
  void set_policy_check_fail_open(bool value);

  // bool sidecar_to_telemetry_session_affinity = 30;
  void clear_sidecar_to_telemetry_session_affinity();
  static const int kSidecarToTelemetrySessionAffinityFieldNumber = 30;
  bool sidecar_to_telemetry_session_affinity() const;
  void set_sidecar_to_telemetry_session_affinity(bool value);

  // bool enable_tracing = 12;
  void clear_enable_tracing();
  static const int kEnableTracingFieldNumber = 12;
  bool enable_tracing() const;
  void set_enable_tracing(bool value);

  // bool enable_client_side_policy_check = 19;
  void clear_enable_client_side_policy_check();
  static const int kEnableClientSidePolicyCheckFieldNumber = 19;
  bool enable_client_side_policy_check() const;
  void set_enable_client_side_policy_check(bool value);

  // bool enable_sds_token_mount = 23;
  void clear_enable_sds_token_mount();
  static const int kEnableSdsTokenMountFieldNumber = 23;
  bool enable_sds_token_mount() const;
  void set_enable_sds_token_mount(bool value);

  // bool sds_use_k8s_sa_jwt = 29;
  void clear_sds_use_k8s_sa_jwt();
  static const int kSdsUseK8SSaJwtFieldNumber = 29;
  bool sds_use_k8s_sa_jwt() const;
  void set_sds_use_k8s_sa_jwt(bool value);

  // .istio.mesh.v1alpha1.MeshConfig.AccessLogEncoding access_log_encoding = 27;
  void clear_access_log_encoding();
  static const int kAccessLogEncodingFieldNumber = 27;
  ::istio::mesh::v1alpha1::MeshConfig_AccessLogEncoding access_log_encoding() const;
  void set_access_log_encoding(::istio::mesh::v1alpha1::MeshConfig_AccessLogEncoding value);

  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.MeshConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::ConfigSource > config_sources_;
  ::google::protobuf::RepeatedPtrField< ::std::string> default_service_export_to_;
  ::google::protobuf::RepeatedPtrField< ::std::string> default_virtual_service_export_to_;
  ::google::protobuf::RepeatedPtrField< ::std::string> default_destination_rule_export_to_;
  ::google::protobuf::internal::ArenaStringPtr mixer_check_server_;
  ::google::protobuf::internal::ArenaStringPtr mixer_report_server_;
  ::google::protobuf::internal::ArenaStringPtr ingress_class_;
  ::google::protobuf::internal::ArenaStringPtr ingress_service_;
  ::google::protobuf::internal::ArenaStringPtr access_log_file_;
  ::google::protobuf::internal::ArenaStringPtr mixer_address_;
  ::google::protobuf::internal::ArenaStringPtr sds_uds_path_;
  ::google::protobuf::internal::ArenaStringPtr access_log_format_;
  ::google::protobuf::internal::ArenaStringPtr trust_domain_;
  ::google::protobuf::internal::ArenaStringPtr root_namespace_;
  ::google::protobuf::Duration* connect_timeout_;
  ::google::protobuf::Duration* rds_refresh_delay_;
  ::istio::mesh::v1alpha1::ProxyConfig* default_config_;
  ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy* outbound_traffic_policy_;
  ::google::protobuf::Duration* sds_refresh_delay_;
  ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive* tcp_keepalive_;
  ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting* locality_lb_setting_;
  ::google::protobuf::int32 proxy_listen_port_;
  ::google::protobuf::int32 proxy_http_port_;
  int ingress_controller_mode_;
  int auth_policy_;
  bool disable_policy_checks_;
  bool policy_check_fail_open_;
  bool sidecar_to_telemetry_session_affinity_;
  bool enable_tracing_;
  bool enable_client_side_policy_check_;
  bool enable_sds_token_mount_;
  bool sds_use_k8s_sa_jwt_;
  int access_log_encoding_;
  mutable int _cached_size_;
  friend struct ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsMeshConfigImpl();
};
// -------------------------------------------------------------------

class ConfigSource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.ConfigSource) */ {
 public:
  ConfigSource();
  virtual ~ConfigSource();

  ConfigSource(const ConfigSource& from);

  inline ConfigSource& operator=(const ConfigSource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ConfigSource(ConfigSource&& from) noexcept
    : ConfigSource() {
    *this = ::std::move(from);
  }

  inline ConfigSource& operator=(ConfigSource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ConfigSource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ConfigSource* internal_default_instance() {
    return reinterpret_cast<const ConfigSource*>(
               &_ConfigSource_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ConfigSource* other);
  friend void swap(ConfigSource& a, ConfigSource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ConfigSource* New() const PROTOBUF_FINAL { return New(NULL); }

  ConfigSource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ConfigSource& from);
  void MergeFrom(const ConfigSource& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ConfigSource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string address = 1;
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // .istio.networking.v1alpha3.TLSSettings tls_settings = 2;
  bool has_tls_settings() const;
  void clear_tls_settings();
  static const int kTlsSettingsFieldNumber = 2;
  const ::istio::networking::v1alpha3::TLSSettings& tls_settings() const;
  ::istio::networking::v1alpha3::TLSSettings* release_tls_settings();
  ::istio::networking::v1alpha3::TLSSettings* mutable_tls_settings();
  void set_allocated_tls_settings(::istio::networking::v1alpha3::TLSSettings* tls_settings);

  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.ConfigSource)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::istio::networking::v1alpha3::TLSSettings* tls_settings_;
  mutable int _cached_size_;
  friend struct ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsConfigSourceImpl();
};
// -------------------------------------------------------------------

class LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse, 
    ::std::string, ::google::protobuf::uint32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse, 
    ::std::string, ::google::protobuf::uint32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
    0 > SuperType;
  LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse();
  LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse& other);
  static const LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse*>(&_LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LocalityLoadBalancerSetting_Distribute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute) */ {
 public:
  LocalityLoadBalancerSetting_Distribute();
  virtual ~LocalityLoadBalancerSetting_Distribute();

  LocalityLoadBalancerSetting_Distribute(const LocalityLoadBalancerSetting_Distribute& from);

  inline LocalityLoadBalancerSetting_Distribute& operator=(const LocalityLoadBalancerSetting_Distribute& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalityLoadBalancerSetting_Distribute(LocalityLoadBalancerSetting_Distribute&& from) noexcept
    : LocalityLoadBalancerSetting_Distribute() {
    *this = ::std::move(from);
  }

  inline LocalityLoadBalancerSetting_Distribute& operator=(LocalityLoadBalancerSetting_Distribute&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalityLoadBalancerSetting_Distribute& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalityLoadBalancerSetting_Distribute* internal_default_instance() {
    return reinterpret_cast<const LocalityLoadBalancerSetting_Distribute*>(
               &_LocalityLoadBalancerSetting_Distribute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(LocalityLoadBalancerSetting_Distribute* other);
  friend void swap(LocalityLoadBalancerSetting_Distribute& a, LocalityLoadBalancerSetting_Distribute& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalityLoadBalancerSetting_Distribute* New() const PROTOBUF_FINAL { return New(NULL); }

  LocalityLoadBalancerSetting_Distribute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocalityLoadBalancerSetting_Distribute& from);
  void MergeFrom(const LocalityLoadBalancerSetting_Distribute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocalityLoadBalancerSetting_Distribute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, uint32> to = 2;
  int to_size() const;
  void clear_to();
  static const int kToFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
      to() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
      mutable_to();

  // string from = 1;
  void clear_from();
  static const int kFromFieldNumber = 1;
  const ::std::string& from() const;
  void set_from(const ::std::string& value);
  #if LANG_CXX11
  void set_from(::std::string&& value);
  #endif
  void set_from(const char* value);
  void set_from(const char* value, size_t size);
  ::std::string* mutable_from();
  ::std::string* release_from();
  void set_allocated_from(::std::string* from);

  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      LocalityLoadBalancerSetting_Distribute_ToEntry_DoNotUse,
      ::std::string, ::google::protobuf::uint32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      0 > to_;
  ::google::protobuf::internal::ArenaStringPtr from_;
  mutable int _cached_size_;
  friend struct ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsLocalityLoadBalancerSetting_DistributeImpl();
};
// -------------------------------------------------------------------

class LocalityLoadBalancerSetting_Failover : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover) */ {
 public:
  LocalityLoadBalancerSetting_Failover();
  virtual ~LocalityLoadBalancerSetting_Failover();

  LocalityLoadBalancerSetting_Failover(const LocalityLoadBalancerSetting_Failover& from);

  inline LocalityLoadBalancerSetting_Failover& operator=(const LocalityLoadBalancerSetting_Failover& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalityLoadBalancerSetting_Failover(LocalityLoadBalancerSetting_Failover&& from) noexcept
    : LocalityLoadBalancerSetting_Failover() {
    *this = ::std::move(from);
  }

  inline LocalityLoadBalancerSetting_Failover& operator=(LocalityLoadBalancerSetting_Failover&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalityLoadBalancerSetting_Failover& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalityLoadBalancerSetting_Failover* internal_default_instance() {
    return reinterpret_cast<const LocalityLoadBalancerSetting_Failover*>(
               &_LocalityLoadBalancerSetting_Failover_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(LocalityLoadBalancerSetting_Failover* other);
  friend void swap(LocalityLoadBalancerSetting_Failover& a, LocalityLoadBalancerSetting_Failover& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalityLoadBalancerSetting_Failover* New() const PROTOBUF_FINAL { return New(NULL); }

  LocalityLoadBalancerSetting_Failover* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocalityLoadBalancerSetting_Failover& from);
  void MergeFrom(const LocalityLoadBalancerSetting_Failover& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocalityLoadBalancerSetting_Failover* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string from = 1;
  void clear_from();
  static const int kFromFieldNumber = 1;
  const ::std::string& from() const;
  void set_from(const ::std::string& value);
  #if LANG_CXX11
  void set_from(::std::string&& value);
  #endif
  void set_from(const char* value);
  void set_from(const char* value, size_t size);
  ::std::string* mutable_from();
  ::std::string* release_from();
  void set_allocated_from(::std::string* from);

  // string to = 2;
  void clear_to();
  static const int kToFieldNumber = 2;
  const ::std::string& to() const;
  void set_to(const ::std::string& value);
  #if LANG_CXX11
  void set_to(::std::string&& value);
  #endif
  void set_to(const char* value);
  void set_to(const char* value, size_t size);
  ::std::string* mutable_to();
  ::std::string* release_to();
  void set_allocated_to(::std::string* to);

  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr from_;
  ::google::protobuf::internal::ArenaStringPtr to_;
  mutable int _cached_size_;
  friend struct ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsLocalityLoadBalancerSetting_FailoverImpl();
};
// -------------------------------------------------------------------

class LocalityLoadBalancerSetting : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mesh.v1alpha1.LocalityLoadBalancerSetting) */ {
 public:
  LocalityLoadBalancerSetting();
  virtual ~LocalityLoadBalancerSetting();

  LocalityLoadBalancerSetting(const LocalityLoadBalancerSetting& from);

  inline LocalityLoadBalancerSetting& operator=(const LocalityLoadBalancerSetting& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LocalityLoadBalancerSetting(LocalityLoadBalancerSetting&& from) noexcept
    : LocalityLoadBalancerSetting() {
    *this = ::std::move(from);
  }

  inline LocalityLoadBalancerSetting& operator=(LocalityLoadBalancerSetting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LocalityLoadBalancerSetting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocalityLoadBalancerSetting* internal_default_instance() {
    return reinterpret_cast<const LocalityLoadBalancerSetting*>(
               &_LocalityLoadBalancerSetting_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(LocalityLoadBalancerSetting* other);
  friend void swap(LocalityLoadBalancerSetting& a, LocalityLoadBalancerSetting& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LocalityLoadBalancerSetting* New() const PROTOBUF_FINAL { return New(NULL); }

  LocalityLoadBalancerSetting* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LocalityLoadBalancerSetting& from);
  void MergeFrom(const LocalityLoadBalancerSetting& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LocalityLoadBalancerSetting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LocalityLoadBalancerSetting_Distribute Distribute;
  typedef LocalityLoadBalancerSetting_Failover Failover;

  // accessors -------------------------------------------------------

  // repeated .istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute distribute = 1;
  int distribute_size() const;
  void clear_distribute();
  static const int kDistributeFieldNumber = 1;
  const ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute& distribute(int index) const;
  ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute* mutable_distribute(int index);
  ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute* add_distribute();
  ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute >*
      mutable_distribute();
  const ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute >&
      distribute() const;

  // repeated .istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover failover = 2;
  int failover_size() const;
  void clear_failover();
  static const int kFailoverFieldNumber = 2;
  const ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover& failover(int index) const;
  ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover* mutable_failover(int index);
  ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover* add_failover();
  ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover >*
      mutable_failover();
  const ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover >&
      failover() const;

  // @@protoc_insertion_point(class_scope:istio.mesh.v1alpha1.LocalityLoadBalancerSetting)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute > distribute_;
  ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover > failover_;
  mutable int _cached_size_;
  friend struct ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::TableStruct;
  friend void ::protobuf_mesh_2fv1alpha1_2fconfig_2eproto::InitDefaultsLocalityLoadBalancerSettingImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MeshConfig_OutboundTrafficPolicy

// .istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy.Mode mode = 1;
inline void MeshConfig_OutboundTrafficPolicy::clear_mode() {
  mode_ = 0;
}
inline ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy_Mode MeshConfig_OutboundTrafficPolicy::mode() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy.mode)
  return static_cast< ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy_Mode >(mode_);
}
inline void MeshConfig_OutboundTrafficPolicy::set_mode(::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy_Mode value) {
  
  mode_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy.mode)
}

// -------------------------------------------------------------------

// MeshConfig

// string mixer_check_server = 1;
inline void MeshConfig::clear_mixer_check_server() {
  mixer_check_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MeshConfig::mixer_check_server() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.mixer_check_server)
  return mixer_check_server_.GetNoArena();
}
inline void MeshConfig::set_mixer_check_server(const ::std::string& value) {
  
  mixer_check_server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.mixer_check_server)
}
#if LANG_CXX11
inline void MeshConfig::set_mixer_check_server(::std::string&& value) {
  
  mixer_check_server_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.MeshConfig.mixer_check_server)
}
#endif
inline void MeshConfig::set_mixer_check_server(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mixer_check_server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.MeshConfig.mixer_check_server)
}
inline void MeshConfig::set_mixer_check_server(const char* value, size_t size) {
  
  mixer_check_server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.MeshConfig.mixer_check_server)
}
inline ::std::string* MeshConfig::mutable_mixer_check_server() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.mixer_check_server)
  return mixer_check_server_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MeshConfig::release_mixer_check_server() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.mixer_check_server)
  
  return mixer_check_server_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MeshConfig::set_allocated_mixer_check_server(::std::string* mixer_check_server) {
  if (mixer_check_server != NULL) {
    
  } else {
    
  }
  mixer_check_server_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mixer_check_server);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.mixer_check_server)
}

// string mixer_report_server = 2;
inline void MeshConfig::clear_mixer_report_server() {
  mixer_report_server_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MeshConfig::mixer_report_server() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.mixer_report_server)
  return mixer_report_server_.GetNoArena();
}
inline void MeshConfig::set_mixer_report_server(const ::std::string& value) {
  
  mixer_report_server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.mixer_report_server)
}
#if LANG_CXX11
inline void MeshConfig::set_mixer_report_server(::std::string&& value) {
  
  mixer_report_server_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.MeshConfig.mixer_report_server)
}
#endif
inline void MeshConfig::set_mixer_report_server(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mixer_report_server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.MeshConfig.mixer_report_server)
}
inline void MeshConfig::set_mixer_report_server(const char* value, size_t size) {
  
  mixer_report_server_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.MeshConfig.mixer_report_server)
}
inline ::std::string* MeshConfig::mutable_mixer_report_server() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.mixer_report_server)
  return mixer_report_server_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MeshConfig::release_mixer_report_server() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.mixer_report_server)
  
  return mixer_report_server_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MeshConfig::set_allocated_mixer_report_server(::std::string* mixer_report_server) {
  if (mixer_report_server != NULL) {
    
  } else {
    
  }
  mixer_report_server_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mixer_report_server);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.mixer_report_server)
}

// bool disable_policy_checks = 3;
inline void MeshConfig::clear_disable_policy_checks() {
  disable_policy_checks_ = false;
}
inline bool MeshConfig::disable_policy_checks() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.disable_policy_checks)
  return disable_policy_checks_;
}
inline void MeshConfig::set_disable_policy_checks(bool value) {
  
  disable_policy_checks_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.disable_policy_checks)
}

// bool policy_check_fail_open = 25;
inline void MeshConfig::clear_policy_check_fail_open() {
  policy_check_fail_open_ = false;
}
inline bool MeshConfig::policy_check_fail_open() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.policy_check_fail_open)
  return policy_check_fail_open_;
}
inline void MeshConfig::set_policy_check_fail_open(bool value) {
  
  policy_check_fail_open_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.policy_check_fail_open)
}

// bool sidecar_to_telemetry_session_affinity = 30;
inline void MeshConfig::clear_sidecar_to_telemetry_session_affinity() {
  sidecar_to_telemetry_session_affinity_ = false;
}
inline bool MeshConfig::sidecar_to_telemetry_session_affinity() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.sidecar_to_telemetry_session_affinity)
  return sidecar_to_telemetry_session_affinity_;
}
inline void MeshConfig::set_sidecar_to_telemetry_session_affinity(bool value) {
  
  sidecar_to_telemetry_session_affinity_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.sidecar_to_telemetry_session_affinity)
}

// int32 proxy_listen_port = 4;
inline void MeshConfig::clear_proxy_listen_port() {
  proxy_listen_port_ = 0;
}
inline ::google::protobuf::int32 MeshConfig::proxy_listen_port() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.proxy_listen_port)
  return proxy_listen_port_;
}
inline void MeshConfig::set_proxy_listen_port(::google::protobuf::int32 value) {
  
  proxy_listen_port_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.proxy_listen_port)
}

// int32 proxy_http_port = 5;
inline void MeshConfig::clear_proxy_http_port() {
  proxy_http_port_ = 0;
}
inline ::google::protobuf::int32 MeshConfig::proxy_http_port() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.proxy_http_port)
  return proxy_http_port_;
}
inline void MeshConfig::set_proxy_http_port(::google::protobuf::int32 value) {
  
  proxy_http_port_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.proxy_http_port)
}

// .google.protobuf.Duration connect_timeout = 6;
inline bool MeshConfig::has_connect_timeout() const {
  return this != internal_default_instance() && connect_timeout_ != NULL;
}
inline const ::google::protobuf::Duration& MeshConfig::connect_timeout() const {
  const ::google::protobuf::Duration* p = connect_timeout_;
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.connect_timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* MeshConfig::release_connect_timeout() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.connect_timeout)
  
  ::google::protobuf::Duration* temp = connect_timeout_;
  connect_timeout_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* MeshConfig::mutable_connect_timeout() {
  
  if (connect_timeout_ == NULL) {
    connect_timeout_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.connect_timeout)
  return connect_timeout_;
}
inline void MeshConfig::set_allocated_connect_timeout(::google::protobuf::Duration* connect_timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connect_timeout_);
  }
  if (connect_timeout) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(connect_timeout)->GetArena();
    if (message_arena != submessage_arena) {
      connect_timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connect_timeout, submessage_arena);
    }
    
  } else {
    
  }
  connect_timeout_ = connect_timeout;
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.connect_timeout)
}

// .istio.networking.v1alpha3.ConnectionPoolSettings.TCPSettings.TcpKeepalive tcp_keepalive = 28;
inline bool MeshConfig::has_tcp_keepalive() const {
  return this != internal_default_instance() && tcp_keepalive_ != NULL;
}
inline const ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive& MeshConfig::tcp_keepalive() const {
  const ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive* p = tcp_keepalive_;
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.tcp_keepalive)
  return p != NULL ? *p : *reinterpret_cast<const ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive*>(
      &::istio::networking::v1alpha3::_ConnectionPoolSettings_TCPSettings_TcpKeepalive_default_instance_);
}
inline ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive* MeshConfig::release_tcp_keepalive() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.tcp_keepalive)
  
  ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive* temp = tcp_keepalive_;
  tcp_keepalive_ = NULL;
  return temp;
}
inline ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive* MeshConfig::mutable_tcp_keepalive() {
  
  if (tcp_keepalive_ == NULL) {
    tcp_keepalive_ = new ::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.tcp_keepalive)
  return tcp_keepalive_;
}
inline void MeshConfig::set_allocated_tcp_keepalive(::istio::networking::v1alpha3::ConnectionPoolSettings_TCPSettings_TcpKeepalive* tcp_keepalive) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tcp_keepalive_);
  }
  if (tcp_keepalive) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tcp_keepalive = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tcp_keepalive, submessage_arena);
    }
    
  } else {
    
  }
  tcp_keepalive_ = tcp_keepalive;
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.tcp_keepalive)
}

// string ingress_class = 7;
inline void MeshConfig::clear_ingress_class() {
  ingress_class_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MeshConfig::ingress_class() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.ingress_class)
  return ingress_class_.GetNoArena();
}
inline void MeshConfig::set_ingress_class(const ::std::string& value) {
  
  ingress_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.ingress_class)
}
#if LANG_CXX11
inline void MeshConfig::set_ingress_class(::std::string&& value) {
  
  ingress_class_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.MeshConfig.ingress_class)
}
#endif
inline void MeshConfig::set_ingress_class(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ingress_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.MeshConfig.ingress_class)
}
inline void MeshConfig::set_ingress_class(const char* value, size_t size) {
  
  ingress_class_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.MeshConfig.ingress_class)
}
inline ::std::string* MeshConfig::mutable_ingress_class() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.ingress_class)
  return ingress_class_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MeshConfig::release_ingress_class() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.ingress_class)
  
  return ingress_class_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MeshConfig::set_allocated_ingress_class(::std::string* ingress_class) {
  if (ingress_class != NULL) {
    
  } else {
    
  }
  ingress_class_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ingress_class);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.ingress_class)
}

// string ingress_service = 8;
inline void MeshConfig::clear_ingress_service() {
  ingress_service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MeshConfig::ingress_service() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.ingress_service)
  return ingress_service_.GetNoArena();
}
inline void MeshConfig::set_ingress_service(const ::std::string& value) {
  
  ingress_service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.ingress_service)
}
#if LANG_CXX11
inline void MeshConfig::set_ingress_service(::std::string&& value) {
  
  ingress_service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.MeshConfig.ingress_service)
}
#endif
inline void MeshConfig::set_ingress_service(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ingress_service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.MeshConfig.ingress_service)
}
inline void MeshConfig::set_ingress_service(const char* value, size_t size) {
  
  ingress_service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.MeshConfig.ingress_service)
}
inline ::std::string* MeshConfig::mutable_ingress_service() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.ingress_service)
  return ingress_service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MeshConfig::release_ingress_service() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.ingress_service)
  
  return ingress_service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MeshConfig::set_allocated_ingress_service(::std::string* ingress_service) {
  if (ingress_service != NULL) {
    
  } else {
    
  }
  ingress_service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ingress_service);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.ingress_service)
}

// .istio.mesh.v1alpha1.MeshConfig.IngressControllerMode ingress_controller_mode = 9;
inline void MeshConfig::clear_ingress_controller_mode() {
  ingress_controller_mode_ = 0;
}
inline ::istio::mesh::v1alpha1::MeshConfig_IngressControllerMode MeshConfig::ingress_controller_mode() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.ingress_controller_mode)
  return static_cast< ::istio::mesh::v1alpha1::MeshConfig_IngressControllerMode >(ingress_controller_mode_);
}
inline void MeshConfig::set_ingress_controller_mode(::istio::mesh::v1alpha1::MeshConfig_IngressControllerMode value) {
  
  ingress_controller_mode_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.ingress_controller_mode)
}

// .istio.mesh.v1alpha1.MeshConfig.AuthPolicy auth_policy = 10 [deprecated = true];
inline void MeshConfig::clear_auth_policy() {
  auth_policy_ = 0;
}
inline ::istio::mesh::v1alpha1::MeshConfig_AuthPolicy MeshConfig::auth_policy() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.auth_policy)
  return static_cast< ::istio::mesh::v1alpha1::MeshConfig_AuthPolicy >(auth_policy_);
}
inline void MeshConfig::set_auth_policy(::istio::mesh::v1alpha1::MeshConfig_AuthPolicy value) {
  
  auth_policy_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.auth_policy)
}

// .google.protobuf.Duration rds_refresh_delay = 11 [deprecated = true];
inline bool MeshConfig::has_rds_refresh_delay() const {
  return this != internal_default_instance() && rds_refresh_delay_ != NULL;
}
inline const ::google::protobuf::Duration& MeshConfig::rds_refresh_delay() const {
  const ::google::protobuf::Duration* p = rds_refresh_delay_;
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.rds_refresh_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* MeshConfig::release_rds_refresh_delay() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.rds_refresh_delay)
  
  ::google::protobuf::Duration* temp = rds_refresh_delay_;
  rds_refresh_delay_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* MeshConfig::mutable_rds_refresh_delay() {
  
  if (rds_refresh_delay_ == NULL) {
    rds_refresh_delay_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.rds_refresh_delay)
  return rds_refresh_delay_;
}
inline void MeshConfig::set_allocated_rds_refresh_delay(::google::protobuf::Duration* rds_refresh_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rds_refresh_delay_);
  }
  if (rds_refresh_delay) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(rds_refresh_delay)->GetArena();
    if (message_arena != submessage_arena) {
      rds_refresh_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rds_refresh_delay, submessage_arena);
    }
    
  } else {
    
  }
  rds_refresh_delay_ = rds_refresh_delay;
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.rds_refresh_delay)
}

// bool enable_tracing = 12;
inline void MeshConfig::clear_enable_tracing() {
  enable_tracing_ = false;
}
inline bool MeshConfig::enable_tracing() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.enable_tracing)
  return enable_tracing_;
}
inline void MeshConfig::set_enable_tracing(bool value) {
  
  enable_tracing_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.enable_tracing)
}

// string access_log_file = 13;
inline void MeshConfig::clear_access_log_file() {
  access_log_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MeshConfig::access_log_file() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.access_log_file)
  return access_log_file_.GetNoArena();
}
inline void MeshConfig::set_access_log_file(const ::std::string& value) {
  
  access_log_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.access_log_file)
}
#if LANG_CXX11
inline void MeshConfig::set_access_log_file(::std::string&& value) {
  
  access_log_file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.MeshConfig.access_log_file)
}
#endif
inline void MeshConfig::set_access_log_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  access_log_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.MeshConfig.access_log_file)
}
inline void MeshConfig::set_access_log_file(const char* value, size_t size) {
  
  access_log_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.MeshConfig.access_log_file)
}
inline ::std::string* MeshConfig::mutable_access_log_file() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.access_log_file)
  return access_log_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MeshConfig::release_access_log_file() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.access_log_file)
  
  return access_log_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MeshConfig::set_allocated_access_log_file(::std::string* access_log_file) {
  if (access_log_file != NULL) {
    
  } else {
    
  }
  access_log_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_log_file);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.access_log_file)
}

// string access_log_format = 24;
inline void MeshConfig::clear_access_log_format() {
  access_log_format_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MeshConfig::access_log_format() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.access_log_format)
  return access_log_format_.GetNoArena();
}
inline void MeshConfig::set_access_log_format(const ::std::string& value) {
  
  access_log_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.access_log_format)
}
#if LANG_CXX11
inline void MeshConfig::set_access_log_format(::std::string&& value) {
  
  access_log_format_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.MeshConfig.access_log_format)
}
#endif
inline void MeshConfig::set_access_log_format(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  access_log_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.MeshConfig.access_log_format)
}
inline void MeshConfig::set_access_log_format(const char* value, size_t size) {
  
  access_log_format_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.MeshConfig.access_log_format)
}
inline ::std::string* MeshConfig::mutable_access_log_format() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.access_log_format)
  return access_log_format_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MeshConfig::release_access_log_format() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.access_log_format)
  
  return access_log_format_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MeshConfig::set_allocated_access_log_format(::std::string* access_log_format) {
  if (access_log_format != NULL) {
    
  } else {
    
  }
  access_log_format_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), access_log_format);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.access_log_format)
}

// .istio.mesh.v1alpha1.MeshConfig.AccessLogEncoding access_log_encoding = 27;
inline void MeshConfig::clear_access_log_encoding() {
  access_log_encoding_ = 0;
}
inline ::istio::mesh::v1alpha1::MeshConfig_AccessLogEncoding MeshConfig::access_log_encoding() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.access_log_encoding)
  return static_cast< ::istio::mesh::v1alpha1::MeshConfig_AccessLogEncoding >(access_log_encoding_);
}
inline void MeshConfig::set_access_log_encoding(::istio::mesh::v1alpha1::MeshConfig_AccessLogEncoding value) {
  
  access_log_encoding_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.access_log_encoding)
}

// .istio.mesh.v1alpha1.ProxyConfig default_config = 14;
inline bool MeshConfig::has_default_config() const {
  return this != internal_default_instance() && default_config_ != NULL;
}
inline const ::istio::mesh::v1alpha1::ProxyConfig& MeshConfig::default_config() const {
  const ::istio::mesh::v1alpha1::ProxyConfig* p = default_config_;
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.default_config)
  return p != NULL ? *p : *reinterpret_cast<const ::istio::mesh::v1alpha1::ProxyConfig*>(
      &::istio::mesh::v1alpha1::_ProxyConfig_default_instance_);
}
inline ::istio::mesh::v1alpha1::ProxyConfig* MeshConfig::release_default_config() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.default_config)
  
  ::istio::mesh::v1alpha1::ProxyConfig* temp = default_config_;
  default_config_ = NULL;
  return temp;
}
inline ::istio::mesh::v1alpha1::ProxyConfig* MeshConfig::mutable_default_config() {
  
  if (default_config_ == NULL) {
    default_config_ = new ::istio::mesh::v1alpha1::ProxyConfig;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.default_config)
  return default_config_;
}
inline void MeshConfig::set_allocated_default_config(::istio::mesh::v1alpha1::ProxyConfig* default_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(default_config_);
  }
  if (default_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      default_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, default_config, submessage_arena);
    }
    
  } else {
    
  }
  default_config_ = default_config;
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.default_config)
}

// string mixer_address = 16 [deprecated = true];
inline void MeshConfig::clear_mixer_address() {
  mixer_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MeshConfig::mixer_address() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.mixer_address)
  return mixer_address_.GetNoArena();
}
inline void MeshConfig::set_mixer_address(const ::std::string& value) {
  
  mixer_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.mixer_address)
}
#if LANG_CXX11
inline void MeshConfig::set_mixer_address(::std::string&& value) {
  
  mixer_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.MeshConfig.mixer_address)
}
#endif
inline void MeshConfig::set_mixer_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mixer_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.MeshConfig.mixer_address)
}
inline void MeshConfig::set_mixer_address(const char* value, size_t size) {
  
  mixer_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.MeshConfig.mixer_address)
}
inline ::std::string* MeshConfig::mutable_mixer_address() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.mixer_address)
  return mixer_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MeshConfig::release_mixer_address() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.mixer_address)
  
  return mixer_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MeshConfig::set_allocated_mixer_address(::std::string* mixer_address) {
  if (mixer_address != NULL) {
    
  } else {
    
  }
  mixer_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mixer_address);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.mixer_address)
}

// .istio.mesh.v1alpha1.MeshConfig.OutboundTrafficPolicy outbound_traffic_policy = 17;
inline bool MeshConfig::has_outbound_traffic_policy() const {
  return this != internal_default_instance() && outbound_traffic_policy_ != NULL;
}
inline void MeshConfig::clear_outbound_traffic_policy() {
  if (GetArenaNoVirtual() == NULL && outbound_traffic_policy_ != NULL) {
    delete outbound_traffic_policy_;
  }
  outbound_traffic_policy_ = NULL;
}
inline const ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy& MeshConfig::outbound_traffic_policy() const {
  const ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy* p = outbound_traffic_policy_;
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.outbound_traffic_policy)
  return p != NULL ? *p : *reinterpret_cast<const ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy*>(
      &::istio::mesh::v1alpha1::_MeshConfig_OutboundTrafficPolicy_default_instance_);
}
inline ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy* MeshConfig::release_outbound_traffic_policy() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.outbound_traffic_policy)
  
  ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy* temp = outbound_traffic_policy_;
  outbound_traffic_policy_ = NULL;
  return temp;
}
inline ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy* MeshConfig::mutable_outbound_traffic_policy() {
  
  if (outbound_traffic_policy_ == NULL) {
    outbound_traffic_policy_ = new ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.outbound_traffic_policy)
  return outbound_traffic_policy_;
}
inline void MeshConfig::set_allocated_outbound_traffic_policy(::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy* outbound_traffic_policy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete outbound_traffic_policy_;
  }
  if (outbound_traffic_policy) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      outbound_traffic_policy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, outbound_traffic_policy, submessage_arena);
    }
    
  } else {
    
  }
  outbound_traffic_policy_ = outbound_traffic_policy;
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.outbound_traffic_policy)
}

// bool enable_client_side_policy_check = 19;
inline void MeshConfig::clear_enable_client_side_policy_check() {
  enable_client_side_policy_check_ = false;
}
inline bool MeshConfig::enable_client_side_policy_check() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.enable_client_side_policy_check)
  return enable_client_side_policy_check_;
}
inline void MeshConfig::set_enable_client_side_policy_check(bool value) {
  
  enable_client_side_policy_check_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.enable_client_side_policy_check)
}

// string sds_uds_path = 20;
inline void MeshConfig::clear_sds_uds_path() {
  sds_uds_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MeshConfig::sds_uds_path() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.sds_uds_path)
  return sds_uds_path_.GetNoArena();
}
inline void MeshConfig::set_sds_uds_path(const ::std::string& value) {
  
  sds_uds_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.sds_uds_path)
}
#if LANG_CXX11
inline void MeshConfig::set_sds_uds_path(::std::string&& value) {
  
  sds_uds_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.MeshConfig.sds_uds_path)
}
#endif
inline void MeshConfig::set_sds_uds_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sds_uds_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.MeshConfig.sds_uds_path)
}
inline void MeshConfig::set_sds_uds_path(const char* value, size_t size) {
  
  sds_uds_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.MeshConfig.sds_uds_path)
}
inline ::std::string* MeshConfig::mutable_sds_uds_path() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.sds_uds_path)
  return sds_uds_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MeshConfig::release_sds_uds_path() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.sds_uds_path)
  
  return sds_uds_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MeshConfig::set_allocated_sds_uds_path(::std::string* sds_uds_path) {
  if (sds_uds_path != NULL) {
    
  } else {
    
  }
  sds_uds_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sds_uds_path);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.sds_uds_path)
}

// .google.protobuf.Duration sds_refresh_delay = 21 [deprecated = true];
inline bool MeshConfig::has_sds_refresh_delay() const {
  return this != internal_default_instance() && sds_refresh_delay_ != NULL;
}
inline const ::google::protobuf::Duration& MeshConfig::sds_refresh_delay() const {
  const ::google::protobuf::Duration* p = sds_refresh_delay_;
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.sds_refresh_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Duration*>(
      &::google::protobuf::_Duration_default_instance_);
}
inline ::google::protobuf::Duration* MeshConfig::release_sds_refresh_delay() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.sds_refresh_delay)
  
  ::google::protobuf::Duration* temp = sds_refresh_delay_;
  sds_refresh_delay_ = NULL;
  return temp;
}
inline ::google::protobuf::Duration* MeshConfig::mutable_sds_refresh_delay() {
  
  if (sds_refresh_delay_ == NULL) {
    sds_refresh_delay_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.sds_refresh_delay)
  return sds_refresh_delay_;
}
inline void MeshConfig::set_allocated_sds_refresh_delay(::google::protobuf::Duration* sds_refresh_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(sds_refresh_delay_);
  }
  if (sds_refresh_delay) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(sds_refresh_delay)->GetArena();
    if (message_arena != submessage_arena) {
      sds_refresh_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, sds_refresh_delay, submessage_arena);
    }
    
  } else {
    
  }
  sds_refresh_delay_ = sds_refresh_delay;
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.sds_refresh_delay)
}

// repeated .istio.mesh.v1alpha1.ConfigSource config_sources = 22;
inline int MeshConfig::config_sources_size() const {
  return config_sources_.size();
}
inline void MeshConfig::clear_config_sources() {
  config_sources_.Clear();
}
inline const ::istio::mesh::v1alpha1::ConfigSource& MeshConfig::config_sources(int index) const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.config_sources)
  return config_sources_.Get(index);
}
inline ::istio::mesh::v1alpha1::ConfigSource* MeshConfig::mutable_config_sources(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.config_sources)
  return config_sources_.Mutable(index);
}
inline ::istio::mesh::v1alpha1::ConfigSource* MeshConfig::add_config_sources() {
  // @@protoc_insertion_point(field_add:istio.mesh.v1alpha1.MeshConfig.config_sources)
  return config_sources_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::ConfigSource >*
MeshConfig::mutable_config_sources() {
  // @@protoc_insertion_point(field_mutable_list:istio.mesh.v1alpha1.MeshConfig.config_sources)
  return &config_sources_;
}
inline const ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::ConfigSource >&
MeshConfig::config_sources() const {
  // @@protoc_insertion_point(field_list:istio.mesh.v1alpha1.MeshConfig.config_sources)
  return config_sources_;
}

// bool enable_sds_token_mount = 23;
inline void MeshConfig::clear_enable_sds_token_mount() {
  enable_sds_token_mount_ = false;
}
inline bool MeshConfig::enable_sds_token_mount() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.enable_sds_token_mount)
  return enable_sds_token_mount_;
}
inline void MeshConfig::set_enable_sds_token_mount(bool value) {
  
  enable_sds_token_mount_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.enable_sds_token_mount)
}

// bool sds_use_k8s_sa_jwt = 29;
inline void MeshConfig::clear_sds_use_k8s_sa_jwt() {
  sds_use_k8s_sa_jwt_ = false;
}
inline bool MeshConfig::sds_use_k8s_sa_jwt() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.sds_use_k8s_sa_jwt)
  return sds_use_k8s_sa_jwt_;
}
inline void MeshConfig::set_sds_use_k8s_sa_jwt(bool value) {
  
  sds_use_k8s_sa_jwt_ = value;
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.sds_use_k8s_sa_jwt)
}

// string trust_domain = 26;
inline void MeshConfig::clear_trust_domain() {
  trust_domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MeshConfig::trust_domain() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.trust_domain)
  return trust_domain_.GetNoArena();
}
inline void MeshConfig::set_trust_domain(const ::std::string& value) {
  
  trust_domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.trust_domain)
}
#if LANG_CXX11
inline void MeshConfig::set_trust_domain(::std::string&& value) {
  
  trust_domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.MeshConfig.trust_domain)
}
#endif
inline void MeshConfig::set_trust_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  trust_domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.MeshConfig.trust_domain)
}
inline void MeshConfig::set_trust_domain(const char* value, size_t size) {
  
  trust_domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.MeshConfig.trust_domain)
}
inline ::std::string* MeshConfig::mutable_trust_domain() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.trust_domain)
  return trust_domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MeshConfig::release_trust_domain() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.trust_domain)
  
  return trust_domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MeshConfig::set_allocated_trust_domain(::std::string* trust_domain) {
  if (trust_domain != NULL) {
    
  } else {
    
  }
  trust_domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trust_domain);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.trust_domain)
}

// repeated string default_service_export_to = 31;
inline int MeshConfig::default_service_export_to_size() const {
  return default_service_export_to_.size();
}
inline void MeshConfig::clear_default_service_export_to() {
  default_service_export_to_.Clear();
}
inline const ::std::string& MeshConfig::default_service_export_to(int index) const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.default_service_export_to)
  return default_service_export_to_.Get(index);
}
inline ::std::string* MeshConfig::mutable_default_service_export_to(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.default_service_export_to)
  return default_service_export_to_.Mutable(index);
}
inline void MeshConfig::set_default_service_export_to(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.default_service_export_to)
  default_service_export_to_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MeshConfig::set_default_service_export_to(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.default_service_export_to)
  default_service_export_to_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MeshConfig::set_default_service_export_to(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  default_service_export_to_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.MeshConfig.default_service_export_to)
}
inline void MeshConfig::set_default_service_export_to(int index, const char* value, size_t size) {
  default_service_export_to_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.MeshConfig.default_service_export_to)
}
inline ::std::string* MeshConfig::add_default_service_export_to() {
  // @@protoc_insertion_point(field_add_mutable:istio.mesh.v1alpha1.MeshConfig.default_service_export_to)
  return default_service_export_to_.Add();
}
inline void MeshConfig::add_default_service_export_to(const ::std::string& value) {
  default_service_export_to_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:istio.mesh.v1alpha1.MeshConfig.default_service_export_to)
}
#if LANG_CXX11
inline void MeshConfig::add_default_service_export_to(::std::string&& value) {
  default_service_export_to_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:istio.mesh.v1alpha1.MeshConfig.default_service_export_to)
}
#endif
inline void MeshConfig::add_default_service_export_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  default_service_export_to_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:istio.mesh.v1alpha1.MeshConfig.default_service_export_to)
}
inline void MeshConfig::add_default_service_export_to(const char* value, size_t size) {
  default_service_export_to_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:istio.mesh.v1alpha1.MeshConfig.default_service_export_to)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MeshConfig::default_service_export_to() const {
  // @@protoc_insertion_point(field_list:istio.mesh.v1alpha1.MeshConfig.default_service_export_to)
  return default_service_export_to_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MeshConfig::mutable_default_service_export_to() {
  // @@protoc_insertion_point(field_mutable_list:istio.mesh.v1alpha1.MeshConfig.default_service_export_to)
  return &default_service_export_to_;
}

// repeated string default_virtual_service_export_to = 32;
inline int MeshConfig::default_virtual_service_export_to_size() const {
  return default_virtual_service_export_to_.size();
}
inline void MeshConfig::clear_default_virtual_service_export_to() {
  default_virtual_service_export_to_.Clear();
}
inline const ::std::string& MeshConfig::default_virtual_service_export_to(int index) const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to)
  return default_virtual_service_export_to_.Get(index);
}
inline ::std::string* MeshConfig::mutable_default_virtual_service_export_to(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to)
  return default_virtual_service_export_to_.Mutable(index);
}
inline void MeshConfig::set_default_virtual_service_export_to(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to)
  default_virtual_service_export_to_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MeshConfig::set_default_virtual_service_export_to(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to)
  default_virtual_service_export_to_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MeshConfig::set_default_virtual_service_export_to(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  default_virtual_service_export_to_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to)
}
inline void MeshConfig::set_default_virtual_service_export_to(int index, const char* value, size_t size) {
  default_virtual_service_export_to_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to)
}
inline ::std::string* MeshConfig::add_default_virtual_service_export_to() {
  // @@protoc_insertion_point(field_add_mutable:istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to)
  return default_virtual_service_export_to_.Add();
}
inline void MeshConfig::add_default_virtual_service_export_to(const ::std::string& value) {
  default_virtual_service_export_to_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to)
}
#if LANG_CXX11
inline void MeshConfig::add_default_virtual_service_export_to(::std::string&& value) {
  default_virtual_service_export_to_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to)
}
#endif
inline void MeshConfig::add_default_virtual_service_export_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  default_virtual_service_export_to_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to)
}
inline void MeshConfig::add_default_virtual_service_export_to(const char* value, size_t size) {
  default_virtual_service_export_to_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MeshConfig::default_virtual_service_export_to() const {
  // @@protoc_insertion_point(field_list:istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to)
  return default_virtual_service_export_to_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MeshConfig::mutable_default_virtual_service_export_to() {
  // @@protoc_insertion_point(field_mutable_list:istio.mesh.v1alpha1.MeshConfig.default_virtual_service_export_to)
  return &default_virtual_service_export_to_;
}

// repeated string default_destination_rule_export_to = 33;
inline int MeshConfig::default_destination_rule_export_to_size() const {
  return default_destination_rule_export_to_.size();
}
inline void MeshConfig::clear_default_destination_rule_export_to() {
  default_destination_rule_export_to_.Clear();
}
inline const ::std::string& MeshConfig::default_destination_rule_export_to(int index) const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to)
  return default_destination_rule_export_to_.Get(index);
}
inline ::std::string* MeshConfig::mutable_default_destination_rule_export_to(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to)
  return default_destination_rule_export_to_.Mutable(index);
}
inline void MeshConfig::set_default_destination_rule_export_to(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to)
  default_destination_rule_export_to_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MeshConfig::set_default_destination_rule_export_to(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to)
  default_destination_rule_export_to_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MeshConfig::set_default_destination_rule_export_to(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  default_destination_rule_export_to_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to)
}
inline void MeshConfig::set_default_destination_rule_export_to(int index, const char* value, size_t size) {
  default_destination_rule_export_to_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to)
}
inline ::std::string* MeshConfig::add_default_destination_rule_export_to() {
  // @@protoc_insertion_point(field_add_mutable:istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to)
  return default_destination_rule_export_to_.Add();
}
inline void MeshConfig::add_default_destination_rule_export_to(const ::std::string& value) {
  default_destination_rule_export_to_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to)
}
#if LANG_CXX11
inline void MeshConfig::add_default_destination_rule_export_to(::std::string&& value) {
  default_destination_rule_export_to_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to)
}
#endif
inline void MeshConfig::add_default_destination_rule_export_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  default_destination_rule_export_to_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to)
}
inline void MeshConfig::add_default_destination_rule_export_to(const char* value, size_t size) {
  default_destination_rule_export_to_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MeshConfig::default_destination_rule_export_to() const {
  // @@protoc_insertion_point(field_list:istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to)
  return default_destination_rule_export_to_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MeshConfig::mutable_default_destination_rule_export_to() {
  // @@protoc_insertion_point(field_mutable_list:istio.mesh.v1alpha1.MeshConfig.default_destination_rule_export_to)
  return &default_destination_rule_export_to_;
}

// string root_namespace = 34;
inline void MeshConfig::clear_root_namespace() {
  root_namespace_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MeshConfig::root_namespace() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.root_namespace)
  return root_namespace_.GetNoArena();
}
inline void MeshConfig::set_root_namespace(const ::std::string& value) {
  
  root_namespace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.MeshConfig.root_namespace)
}
#if LANG_CXX11
inline void MeshConfig::set_root_namespace(::std::string&& value) {
  
  root_namespace_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.MeshConfig.root_namespace)
}
#endif
inline void MeshConfig::set_root_namespace(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  root_namespace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.MeshConfig.root_namespace)
}
inline void MeshConfig::set_root_namespace(const char* value, size_t size) {
  
  root_namespace_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.MeshConfig.root_namespace)
}
inline ::std::string* MeshConfig::mutable_root_namespace() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.root_namespace)
  return root_namespace_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MeshConfig::release_root_namespace() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.root_namespace)
  
  return root_namespace_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MeshConfig::set_allocated_root_namespace(::std::string* root_namespace) {
  if (root_namespace != NULL) {
    
  } else {
    
  }
  root_namespace_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), root_namespace);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.root_namespace)
}

// .istio.mesh.v1alpha1.LocalityLoadBalancerSetting locality_lb_setting = 35;
inline bool MeshConfig::has_locality_lb_setting() const {
  return this != internal_default_instance() && locality_lb_setting_ != NULL;
}
inline void MeshConfig::clear_locality_lb_setting() {
  if (GetArenaNoVirtual() == NULL && locality_lb_setting_ != NULL) {
    delete locality_lb_setting_;
  }
  locality_lb_setting_ = NULL;
}
inline const ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting& MeshConfig::locality_lb_setting() const {
  const ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting* p = locality_lb_setting_;
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.MeshConfig.locality_lb_setting)
  return p != NULL ? *p : *reinterpret_cast<const ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting*>(
      &::istio::mesh::v1alpha1::_LocalityLoadBalancerSetting_default_instance_);
}
inline ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting* MeshConfig::release_locality_lb_setting() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.MeshConfig.locality_lb_setting)
  
  ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting* temp = locality_lb_setting_;
  locality_lb_setting_ = NULL;
  return temp;
}
inline ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting* MeshConfig::mutable_locality_lb_setting() {
  
  if (locality_lb_setting_ == NULL) {
    locality_lb_setting_ = new ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.MeshConfig.locality_lb_setting)
  return locality_lb_setting_;
}
inline void MeshConfig::set_allocated_locality_lb_setting(::istio::mesh::v1alpha1::LocalityLoadBalancerSetting* locality_lb_setting) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete locality_lb_setting_;
  }
  if (locality_lb_setting) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      locality_lb_setting = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, locality_lb_setting, submessage_arena);
    }
    
  } else {
    
  }
  locality_lb_setting_ = locality_lb_setting;
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.MeshConfig.locality_lb_setting)
}

// -------------------------------------------------------------------

// ConfigSource

// string address = 1;
inline void ConfigSource::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ConfigSource::address() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ConfigSource.address)
  return address_.GetNoArena();
}
inline void ConfigSource::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.ConfigSource.address)
}
#if LANG_CXX11
inline void ConfigSource::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.ConfigSource.address)
}
#endif
inline void ConfigSource::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.ConfigSource.address)
}
inline void ConfigSource::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.ConfigSource.address)
}
inline ::std::string* ConfigSource::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ConfigSource.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ConfigSource::release_address() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ConfigSource.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ConfigSource::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ConfigSource.address)
}

// .istio.networking.v1alpha3.TLSSettings tls_settings = 2;
inline bool ConfigSource::has_tls_settings() const {
  return this != internal_default_instance() && tls_settings_ != NULL;
}
inline const ::istio::networking::v1alpha3::TLSSettings& ConfigSource::tls_settings() const {
  const ::istio::networking::v1alpha3::TLSSettings* p = tls_settings_;
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.ConfigSource.tls_settings)
  return p != NULL ? *p : *reinterpret_cast<const ::istio::networking::v1alpha3::TLSSettings*>(
      &::istio::networking::v1alpha3::_TLSSettings_default_instance_);
}
inline ::istio::networking::v1alpha3::TLSSettings* ConfigSource::release_tls_settings() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.ConfigSource.tls_settings)
  
  ::istio::networking::v1alpha3::TLSSettings* temp = tls_settings_;
  tls_settings_ = NULL;
  return temp;
}
inline ::istio::networking::v1alpha3::TLSSettings* ConfigSource::mutable_tls_settings() {
  
  if (tls_settings_ == NULL) {
    tls_settings_ = new ::istio::networking::v1alpha3::TLSSettings;
  }
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.ConfigSource.tls_settings)
  return tls_settings_;
}
inline void ConfigSource::set_allocated_tls_settings(::istio::networking::v1alpha3::TLSSettings* tls_settings) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tls_settings_);
  }
  if (tls_settings) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tls_settings = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tls_settings, submessage_arena);
    }
    
  } else {
    
  }
  tls_settings_ = tls_settings;
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.ConfigSource.tls_settings)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// LocalityLoadBalancerSetting_Distribute

// string from = 1;
inline void LocalityLoadBalancerSetting_Distribute::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalityLoadBalancerSetting_Distribute::from() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.from)
  return from_.GetNoArena();
}
inline void LocalityLoadBalancerSetting_Distribute::set_from(const ::std::string& value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.from)
}
#if LANG_CXX11
inline void LocalityLoadBalancerSetting_Distribute::set_from(::std::string&& value) {
  
  from_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.from)
}
#endif
inline void LocalityLoadBalancerSetting_Distribute::set_from(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.from)
}
inline void LocalityLoadBalancerSetting_Distribute::set_from(const char* value, size_t size) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.from)
}
inline ::std::string* LocalityLoadBalancerSetting_Distribute::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.from)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalityLoadBalancerSetting_Distribute::release_from() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.from)
  
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalityLoadBalancerSetting_Distribute::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.from)
}

// map<string, uint32> to = 2;
inline int LocalityLoadBalancerSetting_Distribute::to_size() const {
  return to_.size();
}
inline void LocalityLoadBalancerSetting_Distribute::clear_to() {
  to_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >&
LocalityLoadBalancerSetting_Distribute::to() const {
  // @@protoc_insertion_point(field_map:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.to)
  return to_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::uint32 >*
LocalityLoadBalancerSetting_Distribute::mutable_to() {
  // @@protoc_insertion_point(field_mutable_map:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute.to)
  return to_.MutableMap();
}

// -------------------------------------------------------------------

// LocalityLoadBalancerSetting_Failover

// string from = 1;
inline void LocalityLoadBalancerSetting_Failover::clear_from() {
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalityLoadBalancerSetting_Failover::from() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.from)
  return from_.GetNoArena();
}
inline void LocalityLoadBalancerSetting_Failover::set_from(const ::std::string& value) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.from)
}
#if LANG_CXX11
inline void LocalityLoadBalancerSetting_Failover::set_from(::std::string&& value) {
  
  from_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.from)
}
#endif
inline void LocalityLoadBalancerSetting_Failover::set_from(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.from)
}
inline void LocalityLoadBalancerSetting_Failover::set_from(const char* value, size_t size) {
  
  from_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.from)
}
inline ::std::string* LocalityLoadBalancerSetting_Failover::mutable_from() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.from)
  return from_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalityLoadBalancerSetting_Failover::release_from() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.from)
  
  return from_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalityLoadBalancerSetting_Failover::set_allocated_from(::std::string* from) {
  if (from != NULL) {
    
  } else {
    
  }
  from_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.from)
}

// string to = 2;
inline void LocalityLoadBalancerSetting_Failover::clear_to() {
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LocalityLoadBalancerSetting_Failover::to() const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.to)
  return to_.GetNoArena();
}
inline void LocalityLoadBalancerSetting_Failover::set_to(const ::std::string& value) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.to)
}
#if LANG_CXX11
inline void LocalityLoadBalancerSetting_Failover::set_to(::std::string&& value) {
  
  to_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.to)
}
#endif
inline void LocalityLoadBalancerSetting_Failover::set_to(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.to)
}
inline void LocalityLoadBalancerSetting_Failover::set_to(const char* value, size_t size) {
  
  to_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.to)
}
inline ::std::string* LocalityLoadBalancerSetting_Failover::mutable_to() {
  
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.to)
  return to_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LocalityLoadBalancerSetting_Failover::release_to() {
  // @@protoc_insertion_point(field_release:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.to)
  
  return to_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LocalityLoadBalancerSetting_Failover::set_allocated_to(::std::string* to) {
  if (to != NULL) {
    
  } else {
    
  }
  to_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), to);
  // @@protoc_insertion_point(field_set_allocated:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover.to)
}

// -------------------------------------------------------------------

// LocalityLoadBalancerSetting

// repeated .istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Distribute distribute = 1;
inline int LocalityLoadBalancerSetting::distribute_size() const {
  return distribute_.size();
}
inline void LocalityLoadBalancerSetting::clear_distribute() {
  distribute_.Clear();
}
inline const ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute& LocalityLoadBalancerSetting::distribute(int index) const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.distribute)
  return distribute_.Get(index);
}
inline ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute* LocalityLoadBalancerSetting::mutable_distribute(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.distribute)
  return distribute_.Mutable(index);
}
inline ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute* LocalityLoadBalancerSetting::add_distribute() {
  // @@protoc_insertion_point(field_add:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.distribute)
  return distribute_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute >*
LocalityLoadBalancerSetting::mutable_distribute() {
  // @@protoc_insertion_point(field_mutable_list:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.distribute)
  return &distribute_;
}
inline const ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Distribute >&
LocalityLoadBalancerSetting::distribute() const {
  // @@protoc_insertion_point(field_list:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.distribute)
  return distribute_;
}

// repeated .istio.mesh.v1alpha1.LocalityLoadBalancerSetting.Failover failover = 2;
inline int LocalityLoadBalancerSetting::failover_size() const {
  return failover_.size();
}
inline void LocalityLoadBalancerSetting::clear_failover() {
  failover_.Clear();
}
inline const ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover& LocalityLoadBalancerSetting::failover(int index) const {
  // @@protoc_insertion_point(field_get:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.failover)
  return failover_.Get(index);
}
inline ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover* LocalityLoadBalancerSetting::mutable_failover(int index) {
  // @@protoc_insertion_point(field_mutable:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.failover)
  return failover_.Mutable(index);
}
inline ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover* LocalityLoadBalancerSetting::add_failover() {
  // @@protoc_insertion_point(field_add:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.failover)
  return failover_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover >*
LocalityLoadBalancerSetting::mutable_failover() {
  // @@protoc_insertion_point(field_mutable_list:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.failover)
  return &failover_;
}
inline const ::google::protobuf::RepeatedPtrField< ::istio::mesh::v1alpha1::LocalityLoadBalancerSetting_Failover >&
LocalityLoadBalancerSetting::failover() const {
  // @@protoc_insertion_point(field_list:istio.mesh.v1alpha1.LocalityLoadBalancerSetting.failover)
  return failover_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha1
}  // namespace mesh
}  // namespace istio

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy_Mode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy_Mode>() {
  return ::istio::mesh::v1alpha1::MeshConfig_OutboundTrafficPolicy_Mode_descriptor();
}
template <> struct is_proto_enum< ::istio::mesh::v1alpha1::MeshConfig_IngressControllerMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::istio::mesh::v1alpha1::MeshConfig_IngressControllerMode>() {
  return ::istio::mesh::v1alpha1::MeshConfig_IngressControllerMode_descriptor();
}
template <> struct is_proto_enum< ::istio::mesh::v1alpha1::MeshConfig_AuthPolicy> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::istio::mesh::v1alpha1::MeshConfig_AuthPolicy>() {
  return ::istio::mesh::v1alpha1::MeshConfig_AuthPolicy_descriptor();
}
template <> struct is_proto_enum< ::istio::mesh::v1alpha1::MeshConfig_AccessLogEncoding> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::istio::mesh::v1alpha1::MeshConfig_AccessLogEncoding>() {
  return ::istio::mesh::v1alpha1::MeshConfig_AccessLogEncoding_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mesh_2fv1alpha1_2fconfig_2eproto__INCLUDED
