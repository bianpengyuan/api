// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authentication/v1alpha1/policy.proto

#include "authentication/v1alpha1/policy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace istio {
namespace authentication {
namespace v1alpha1 {
class StringMatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringMatch>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr exact_;
  ::google::protobuf::internal::ArenaStringPtr prefix_;
  ::google::protobuf::internal::ArenaStringPtr suffix_;
  ::google::protobuf::internal::ArenaStringPtr regex_;
} _StringMatch_default_instance_;
class MutualTlsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MutualTls>
      _instance;
} _MutualTls_default_instance_;
class Jwt_TriggerRuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Jwt_TriggerRule>
      _instance;
} _Jwt_TriggerRule_default_instance_;
class JwtDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Jwt>
      _instance;
} _Jwt_default_instance_;
class PeerAuthenticationMethodDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PeerAuthenticationMethod>
      _instance;
  const ::istio::authentication::v1alpha1::MutualTls* mtls_;
  const ::istio::authentication::v1alpha1::Jwt* jwt_;
} _PeerAuthenticationMethod_default_instance_;
class OriginAuthenticationMethodDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OriginAuthenticationMethod>
      _instance;
} _OriginAuthenticationMethod_default_instance_;
class PolicyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Policy>
      _instance;
} _Policy_default_instance_;
class TargetSelector_LabelsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetSelector_LabelsEntry_DoNotUse>
      _instance;
} _TargetSelector_LabelsEntry_DoNotUse_default_instance_;
class TargetSelectorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TargetSelector>
      _instance;
} _TargetSelector_default_instance_;
class PortSelectorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PortSelector>
      _instance;
  ::google::protobuf::uint32 number_;
  ::google::protobuf::internal::ArenaStringPtr name_;
} _PortSelector_default_instance_;
}  // namespace v1alpha1
}  // namespace authentication
}  // namespace istio
namespace protobuf_authentication_2fv1alpha1_2fpolicy_2eproto {
void InitDefaultsStringMatchImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::authentication::v1alpha1::_StringMatch_default_instance_;
    new (ptr) ::istio::authentication::v1alpha1::StringMatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::authentication::v1alpha1::StringMatch::InitAsDefaultInstance();
}

void InitDefaultsStringMatch() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStringMatchImpl);
}

void InitDefaultsMutualTlsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::authentication::v1alpha1::_MutualTls_default_instance_;
    new (ptr) ::istio::authentication::v1alpha1::MutualTls();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::authentication::v1alpha1::MutualTls::InitAsDefaultInstance();
}

void InitDefaultsMutualTls() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMutualTlsImpl);
}

void InitDefaultsJwt_TriggerRuleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsStringMatch();
  {
    void* ptr = &::istio::authentication::v1alpha1::_Jwt_TriggerRule_default_instance_;
    new (ptr) ::istio::authentication::v1alpha1::Jwt_TriggerRule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::authentication::v1alpha1::Jwt_TriggerRule::InitAsDefaultInstance();
}

void InitDefaultsJwt_TriggerRule() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJwt_TriggerRuleImpl);
}

void InitDefaultsJwtImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsJwt_TriggerRule();
  {
    void* ptr = &::istio::authentication::v1alpha1::_Jwt_default_instance_;
    new (ptr) ::istio::authentication::v1alpha1::Jwt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::authentication::v1alpha1::Jwt::InitAsDefaultInstance();
}

void InitDefaultsJwt() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJwtImpl);
}

void InitDefaultsPeerAuthenticationMethodImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsMutualTls();
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsJwt();
  {
    void* ptr = &::istio::authentication::v1alpha1::_PeerAuthenticationMethod_default_instance_;
    new (ptr) ::istio::authentication::v1alpha1::PeerAuthenticationMethod();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::authentication::v1alpha1::PeerAuthenticationMethod::InitAsDefaultInstance();
}

void InitDefaultsPeerAuthenticationMethod() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPeerAuthenticationMethodImpl);
}

void InitDefaultsOriginAuthenticationMethodImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsJwt();
  {
    void* ptr = &::istio::authentication::v1alpha1::_OriginAuthenticationMethod_default_instance_;
    new (ptr) ::istio::authentication::v1alpha1::OriginAuthenticationMethod();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::authentication::v1alpha1::OriginAuthenticationMethod::InitAsDefaultInstance();
}

void InitDefaultsOriginAuthenticationMethod() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOriginAuthenticationMethodImpl);
}

void InitDefaultsPolicyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsTargetSelector();
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsPeerAuthenticationMethod();
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsOriginAuthenticationMethod();
  {
    void* ptr = &::istio::authentication::v1alpha1::_Policy_default_instance_;
    new (ptr) ::istio::authentication::v1alpha1::Policy();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::authentication::v1alpha1::Policy::InitAsDefaultInstance();
}

void InitDefaultsPolicy() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPolicyImpl);
}

void InitDefaultsTargetSelector_LabelsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::authentication::v1alpha1::_TargetSelector_LabelsEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::authentication::v1alpha1::TargetSelector_LabelsEntry_DoNotUse();
  }
  ::istio::authentication::v1alpha1::TargetSelector_LabelsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsTargetSelector_LabelsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTargetSelector_LabelsEntry_DoNotUseImpl);
}

void InitDefaultsTargetSelectorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsTargetSelector_LabelsEntry_DoNotUse();
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsPortSelector();
  {
    void* ptr = &::istio::authentication::v1alpha1::_TargetSelector_default_instance_;
    new (ptr) ::istio::authentication::v1alpha1::TargetSelector();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::authentication::v1alpha1::TargetSelector::InitAsDefaultInstance();
}

void InitDefaultsTargetSelector() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTargetSelectorImpl);
}

void InitDefaultsPortSelectorImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::authentication::v1alpha1::_PortSelector_default_instance_;
    new (ptr) ::istio::authentication::v1alpha1::PortSelector();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::authentication::v1alpha1::PortSelector::InitAsDefaultInstance();
}

void InitDefaultsPortSelector() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPortSelectorImpl);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::StringMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::StringMatch, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::istio::authentication::v1alpha1::StringMatchDefaultTypeInternal, exact_),
  offsetof(::istio::authentication::v1alpha1::StringMatchDefaultTypeInternal, prefix_),
  offsetof(::istio::authentication::v1alpha1::StringMatchDefaultTypeInternal, suffix_),
  offsetof(::istio::authentication::v1alpha1::StringMatchDefaultTypeInternal, regex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::StringMatch, match_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::MutualTls, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::MutualTls, allow_tls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::MutualTls, mode_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Jwt_TriggerRule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Jwt_TriggerRule, excluded_paths_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Jwt_TriggerRule, included_paths_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Jwt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Jwt, issuer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Jwt, audiences_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Jwt, jwks_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Jwt, jwt_headers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Jwt, jwt_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Jwt, trigger_rules_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::PeerAuthenticationMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::PeerAuthenticationMethod, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::istio::authentication::v1alpha1::PeerAuthenticationMethodDefaultTypeInternal, mtls_),
  offsetof(::istio::authentication::v1alpha1::PeerAuthenticationMethodDefaultTypeInternal, jwt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::PeerAuthenticationMethod, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::OriginAuthenticationMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::OriginAuthenticationMethod, jwt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Policy, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Policy, targets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Policy, peers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Policy, peer_is_optional_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Policy, origins_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Policy, origin_is_optional_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::Policy, principal_binding_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::TargetSelector_LabelsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::TargetSelector_LabelsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::TargetSelector_LabelsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::TargetSelector_LabelsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::TargetSelector, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::TargetSelector, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::TargetSelector, labels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::TargetSelector, ports_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::PortSelector, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::PortSelector, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::istio::authentication::v1alpha1::PortSelectorDefaultTypeInternal, number_),
  offsetof(::istio::authentication::v1alpha1::PortSelectorDefaultTypeInternal, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::authentication::v1alpha1::PortSelector, port_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::istio::authentication::v1alpha1::StringMatch)},
  { 10, -1, sizeof(::istio::authentication::v1alpha1::MutualTls)},
  { 17, -1, sizeof(::istio::authentication::v1alpha1::Jwt_TriggerRule)},
  { 24, -1, sizeof(::istio::authentication::v1alpha1::Jwt)},
  { 35, -1, sizeof(::istio::authentication::v1alpha1::PeerAuthenticationMethod)},
  { 43, -1, sizeof(::istio::authentication::v1alpha1::OriginAuthenticationMethod)},
  { 49, -1, sizeof(::istio::authentication::v1alpha1::Policy)},
  { 60, 67, sizeof(::istio::authentication::v1alpha1::TargetSelector_LabelsEntry_DoNotUse)},
  { 69, -1, sizeof(::istio::authentication::v1alpha1::TargetSelector)},
  { 77, -1, sizeof(::istio::authentication::v1alpha1::PortSelector)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::authentication::v1alpha1::_StringMatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::authentication::v1alpha1::_MutualTls_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::authentication::v1alpha1::_Jwt_TriggerRule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::authentication::v1alpha1::_Jwt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::authentication::v1alpha1::_PeerAuthenticationMethod_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::authentication::v1alpha1::_OriginAuthenticationMethod_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::authentication::v1alpha1::_Policy_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::authentication::v1alpha1::_TargetSelector_LabelsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::authentication::v1alpha1::_TargetSelector_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::authentication::v1alpha1::_PortSelector_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "authentication/v1alpha1/policy.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n$authentication/v1alpha1/policy.proto\022\035"
      "istio.authentication.v1alpha1\"a\n\013StringM"
      "atch\022\017\n\005exact\030\001 \001(\tH\000\022\020\n\006prefix\030\002 \001(\tH\000\022"
      "\020\n\006suffix\030\003 \001(\tH\000\022\017\n\005regex\030\004 \001(\tH\000B\014\n\nma"
      "tch_type\"\177\n\tMutualTls\022\021\n\tallow_tls\030\001 \001(\010"
      "\022;\n\004mode\030\002 \001(\0162-.istio.authentication.v1"
      "alpha1.MutualTls.Mode\"\"\n\004Mode\022\n\n\006STRICT\020"
      "\000\022\016\n\nPERMISSIVE\020\001\"\302\002\n\003Jwt\022\016\n\006issuer\030\001 \001("
      "\t\022\021\n\taudiences\030\002 \003(\t\022\020\n\010jwks_uri\030\003 \001(\t\022\023"
      "\n\013jwt_headers\030\006 \003(\t\022\022\n\njwt_params\030\007 \003(\t\022"
      "E\n\rtrigger_rules\030\t \003(\0132..istio.authentic"
      "ation.v1alpha1.Jwt.TriggerRule\032\225\001\n\013Trigg"
      "erRule\022B\n\016excluded_paths\030\001 \003(\0132*.istio.a"
      "uthentication.v1alpha1.StringMatch\022B\n\016in"
      "cluded_paths\030\002 \003(\0132*.istio.authenticatio"
      "n.v1alpha1.StringMatch\"\221\001\n\030PeerAuthentic"
      "ationMethod\0228\n\004mtls\030\001 \001(\0132(.istio.authen"
      "tication.v1alpha1.MutualTlsH\000\0221\n\003jwt\030\002 \001"
      "(\0132\".istio.authentication.v1alpha1.JwtH\000"
      "B\010\n\006params\"M\n\032OriginAuthenticationMethod"
      "\022/\n\003jwt\030\001 \001(\0132\".istio.authentication.v1a"
      "lpha1.Jwt\"\336\002\n\006Policy\022>\n\007targets\030\001 \003(\0132-."
      "istio.authentication.v1alpha1.TargetSele"
      "ctor\022F\n\005peers\030\002 \003(\01327.istio.authenticati"
      "on.v1alpha1.PeerAuthenticationMethod\022\030\n\020"
      "peer_is_optional\030\003 \001(\010\022J\n\007origins\030\004 \003(\0132"
      "9.istio.authentication.v1alpha1.OriginAu"
      "thenticationMethod\022\032\n\022origin_is_optional"
      "\030\005 \001(\010\022J\n\021principal_binding\030\006 \001(\0162/.isti"
      "o.authentication.v1alpha1.PrincipalBindi"
      "ng\"\324\001\n\016TargetSelector\022\014\n\004name\030\001 \001(\t\022I\n\006l"
      "abels\030\003 \003(\01329.istio.authentication.v1alp"
      "ha1.TargetSelector.LabelsEntry\022:\n\005ports\030"
      "\002 \003(\0132+.istio.authentication.v1alpha1.Po"
      "rtSelector\032-\n\013LabelsEntry\022\013\n\003key\030\001 \001(\t\022\r"
      "\n\005value\030\002 \001(\t:\0028\001\"8\n\014PortSelector\022\020\n\006num"
      "ber\030\001 \001(\rH\000\022\016\n\004name\030\002 \001(\tH\000B\006\n\004port*0\n\020P"
      "rincipalBinding\022\014\n\010USE_PEER\020\000\022\016\n\nUSE_ORI"
      "GIN\020\001B&Z$istio.io/api/authentication/v1a"
      "lpha1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1573);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "authentication/v1alpha1/policy.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_authentication_2fv1alpha1_2fpolicy_2eproto
namespace istio {
namespace authentication {
namespace v1alpha1 {
const ::google::protobuf::EnumDescriptor* MutualTls_Mode_descriptor() {
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_enum_descriptors[0];
}
bool MutualTls_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const MutualTls_Mode MutualTls::STRICT;
const MutualTls_Mode MutualTls::PERMISSIVE;
const MutualTls_Mode MutualTls::Mode_MIN;
const MutualTls_Mode MutualTls::Mode_MAX;
const int MutualTls::Mode_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* PrincipalBinding_descriptor() {
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_enum_descriptors[1];
}
bool PrincipalBinding_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void StringMatch::InitAsDefaultInstance() {
  ::istio::authentication::v1alpha1::_StringMatch_default_instance_.exact_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::istio::authentication::v1alpha1::_StringMatch_default_instance_.prefix_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::istio::authentication::v1alpha1::_StringMatch_default_instance_.suffix_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::istio::authentication::v1alpha1::_StringMatch_default_instance_.regex_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringMatch::kExactFieldNumber;
const int StringMatch::kPrefixFieldNumber;
const int StringMatch::kSuffixFieldNumber;
const int StringMatch::kRegexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringMatch::StringMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsStringMatch();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.authentication.v1alpha1.StringMatch)
}
StringMatch::StringMatch(const StringMatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_match_type();
  switch (from.match_type_case()) {
    case kExact: {
      set_exact(from.exact());
      break;
    }
    case kPrefix: {
      set_prefix(from.prefix());
      break;
    }
    case kSuffix: {
      set_suffix(from.suffix());
      break;
    }
    case kRegex: {
      set_regex(from.regex());
      break;
    }
    case MATCH_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:istio.authentication.v1alpha1.StringMatch)
}

void StringMatch::SharedCtor() {
  clear_has_match_type();
  _cached_size_ = 0;
}

StringMatch::~StringMatch() {
  // @@protoc_insertion_point(destructor:istio.authentication.v1alpha1.StringMatch)
  SharedDtor();
}

void StringMatch::SharedDtor() {
  if (has_match_type()) {
    clear_match_type();
  }
}

void StringMatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringMatch::descriptor() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringMatch& StringMatch::default_instance() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsStringMatch();
  return *internal_default_instance();
}

StringMatch* StringMatch::New(::google::protobuf::Arena* arena) const {
  StringMatch* n = new StringMatch;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringMatch::clear_match_type() {
// @@protoc_insertion_point(one_of_clear_start:istio.authentication.v1alpha1.StringMatch)
  switch (match_type_case()) {
    case kExact: {
      match_type_.exact_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kPrefix: {
      match_type_.prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSuffix: {
      match_type_.suffix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kRegex: {
      match_type_.regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case MATCH_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MATCH_TYPE_NOT_SET;
}


void StringMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.authentication.v1alpha1.StringMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_match_type();
  _internal_metadata_.Clear();
}

bool StringMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.authentication.v1alpha1.StringMatch)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string exact = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exact()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exact().data(), static_cast<int>(this->exact().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.authentication.v1alpha1.StringMatch.exact"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string prefix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prefix().data(), static_cast<int>(this->prefix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.authentication.v1alpha1.StringMatch.prefix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string suffix = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_suffix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->suffix().data(), static_cast<int>(this->suffix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.authentication.v1alpha1.StringMatch.suffix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string regex = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regex().data(), static_cast<int>(this->regex().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.authentication.v1alpha1.StringMatch.regex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.authentication.v1alpha1.StringMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.authentication.v1alpha1.StringMatch)
  return false;
#undef DO_
}

void StringMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.authentication.v1alpha1.StringMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string exact = 1;
  if (has_exact()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exact().data(), static_cast<int>(this->exact().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.StringMatch.exact");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->exact(), output);
  }

  // string prefix = 2;
  if (has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prefix().data(), static_cast<int>(this->prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.StringMatch.prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->prefix(), output);
  }

  // string suffix = 3;
  if (has_suffix()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suffix().data(), static_cast<int>(this->suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.StringMatch.suffix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->suffix(), output);
  }

  // string regex = 4;
  if (has_regex()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.StringMatch.regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->regex(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.authentication.v1alpha1.StringMatch)
}

::google::protobuf::uint8* StringMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.authentication.v1alpha1.StringMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string exact = 1;
  if (has_exact()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exact().data(), static_cast<int>(this->exact().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.StringMatch.exact");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->exact(), target);
  }

  // string prefix = 2;
  if (has_prefix()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prefix().data(), static_cast<int>(this->prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.StringMatch.prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->prefix(), target);
  }

  // string suffix = 3;
  if (has_suffix()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->suffix().data(), static_cast<int>(this->suffix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.StringMatch.suffix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->suffix(), target);
  }

  // string regex = 4;
  if (has_regex()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.StringMatch.regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->regex(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.authentication.v1alpha1.StringMatch)
  return target;
}

size_t StringMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.authentication.v1alpha1.StringMatch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (match_type_case()) {
    // string exact = 1;
    case kExact: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->exact());
      break;
    }
    // string prefix = 2;
    case kPrefix: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prefix());
      break;
    }
    // string suffix = 3;
    case kSuffix: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->suffix());
      break;
    }
    // string regex = 4;
    case kRegex: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regex());
      break;
    }
    case MATCH_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.authentication.v1alpha1.StringMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const StringMatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.authentication.v1alpha1.StringMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.authentication.v1alpha1.StringMatch)
    MergeFrom(*source);
  }
}

void StringMatch::MergeFrom(const StringMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.authentication.v1alpha1.StringMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.match_type_case()) {
    case kExact: {
      set_exact(from.exact());
      break;
    }
    case kPrefix: {
      set_prefix(from.prefix());
      break;
    }
    case kSuffix: {
      set_suffix(from.suffix());
      break;
    }
    case kRegex: {
      set_regex(from.regex());
      break;
    }
    case MATCH_TYPE_NOT_SET: {
      break;
    }
  }
}

void StringMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.authentication.v1alpha1.StringMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringMatch::CopyFrom(const StringMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.authentication.v1alpha1.StringMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringMatch::IsInitialized() const {
  return true;
}

void StringMatch::Swap(StringMatch* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringMatch::InternalSwap(StringMatch* other) {
  using std::swap;
  swap(match_type_, other->match_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringMatch::GetMetadata() const {
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MutualTls::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MutualTls::kAllowTlsFieldNumber;
const int MutualTls::kModeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MutualTls::MutualTls()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsMutualTls();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.authentication.v1alpha1.MutualTls)
}
MutualTls::MutualTls(const MutualTls& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&allow_tls_, &from.allow_tls_,
    static_cast<size_t>(reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&allow_tls_)) + sizeof(mode_));
  // @@protoc_insertion_point(copy_constructor:istio.authentication.v1alpha1.MutualTls)
}

void MutualTls::SharedCtor() {
  ::memset(&allow_tls_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&allow_tls_)) + sizeof(mode_));
  _cached_size_ = 0;
}

MutualTls::~MutualTls() {
  // @@protoc_insertion_point(destructor:istio.authentication.v1alpha1.MutualTls)
  SharedDtor();
}

void MutualTls::SharedDtor() {
}

void MutualTls::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MutualTls::descriptor() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MutualTls& MutualTls::default_instance() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsMutualTls();
  return *internal_default_instance();
}

MutualTls* MutualTls::New(::google::protobuf::Arena* arena) const {
  MutualTls* n = new MutualTls;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MutualTls::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.authentication.v1alpha1.MutualTls)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&allow_tls_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&allow_tls_)) + sizeof(mode_));
  _internal_metadata_.Clear();
}

bool MutualTls::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.authentication.v1alpha1.MutualTls)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool allow_tls = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_tls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.authentication.v1alpha1.MutualTls.Mode mode = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_mode(static_cast< ::istio::authentication::v1alpha1::MutualTls_Mode >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.authentication.v1alpha1.MutualTls)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.authentication.v1alpha1.MutualTls)
  return false;
#undef DO_
}

void MutualTls::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.authentication.v1alpha1.MutualTls)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool allow_tls = 1;
  if (this->allow_tls() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->allow_tls(), output);
  }

  // .istio.authentication.v1alpha1.MutualTls.Mode mode = 2;
  if (this->mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->mode(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.authentication.v1alpha1.MutualTls)
}

::google::protobuf::uint8* MutualTls::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.authentication.v1alpha1.MutualTls)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool allow_tls = 1;
  if (this->allow_tls() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->allow_tls(), target);
  }

  // .istio.authentication.v1alpha1.MutualTls.Mode mode = 2;
  if (this->mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->mode(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.authentication.v1alpha1.MutualTls)
  return target;
}

size_t MutualTls::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.authentication.v1alpha1.MutualTls)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool allow_tls = 1;
  if (this->allow_tls() != 0) {
    total_size += 1 + 1;
  }

  // .istio.authentication.v1alpha1.MutualTls.Mode mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MutualTls::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.authentication.v1alpha1.MutualTls)
  GOOGLE_DCHECK_NE(&from, this);
  const MutualTls* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MutualTls>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.authentication.v1alpha1.MutualTls)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.authentication.v1alpha1.MutualTls)
    MergeFrom(*source);
  }
}

void MutualTls::MergeFrom(const MutualTls& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.authentication.v1alpha1.MutualTls)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.allow_tls() != 0) {
    set_allow_tls(from.allow_tls());
  }
  if (from.mode() != 0) {
    set_mode(from.mode());
  }
}

void MutualTls::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.authentication.v1alpha1.MutualTls)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MutualTls::CopyFrom(const MutualTls& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.authentication.v1alpha1.MutualTls)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MutualTls::IsInitialized() const {
  return true;
}

void MutualTls::Swap(MutualTls* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MutualTls::InternalSwap(MutualTls* other) {
  using std::swap;
  swap(allow_tls_, other->allow_tls_);
  swap(mode_, other->mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MutualTls::GetMetadata() const {
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Jwt_TriggerRule::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Jwt_TriggerRule::kExcludedPathsFieldNumber;
const int Jwt_TriggerRule::kIncludedPathsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Jwt_TriggerRule::Jwt_TriggerRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsJwt_TriggerRule();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.authentication.v1alpha1.Jwt.TriggerRule)
}
Jwt_TriggerRule::Jwt_TriggerRule(const Jwt_TriggerRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      excluded_paths_(from.excluded_paths_),
      included_paths_(from.included_paths_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:istio.authentication.v1alpha1.Jwt.TriggerRule)
}

void Jwt_TriggerRule::SharedCtor() {
  _cached_size_ = 0;
}

Jwt_TriggerRule::~Jwt_TriggerRule() {
  // @@protoc_insertion_point(destructor:istio.authentication.v1alpha1.Jwt.TriggerRule)
  SharedDtor();
}

void Jwt_TriggerRule::SharedDtor() {
}

void Jwt_TriggerRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Jwt_TriggerRule::descriptor() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Jwt_TriggerRule& Jwt_TriggerRule::default_instance() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsJwt_TriggerRule();
  return *internal_default_instance();
}

Jwt_TriggerRule* Jwt_TriggerRule::New(::google::protobuf::Arena* arena) const {
  Jwt_TriggerRule* n = new Jwt_TriggerRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Jwt_TriggerRule::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.authentication.v1alpha1.Jwt.TriggerRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  excluded_paths_.Clear();
  included_paths_.Clear();
  _internal_metadata_.Clear();
}

bool Jwt_TriggerRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.authentication.v1alpha1.Jwt.TriggerRule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .istio.authentication.v1alpha1.StringMatch excluded_paths = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_excluded_paths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.authentication.v1alpha1.StringMatch included_paths = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_included_paths()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.authentication.v1alpha1.Jwt.TriggerRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.authentication.v1alpha1.Jwt.TriggerRule)
  return false;
#undef DO_
}

void Jwt_TriggerRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.authentication.v1alpha1.Jwt.TriggerRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.authentication.v1alpha1.StringMatch excluded_paths = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->excluded_paths_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->excluded_paths(static_cast<int>(i)), output);
  }

  // repeated .istio.authentication.v1alpha1.StringMatch included_paths = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->included_paths_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->included_paths(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.authentication.v1alpha1.Jwt.TriggerRule)
}

::google::protobuf::uint8* Jwt_TriggerRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.authentication.v1alpha1.Jwt.TriggerRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.authentication.v1alpha1.StringMatch excluded_paths = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->excluded_paths_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->excluded_paths(static_cast<int>(i)), deterministic, target);
  }

  // repeated .istio.authentication.v1alpha1.StringMatch included_paths = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->included_paths_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->included_paths(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.authentication.v1alpha1.Jwt.TriggerRule)
  return target;
}

size_t Jwt_TriggerRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.authentication.v1alpha1.Jwt.TriggerRule)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.authentication.v1alpha1.StringMatch excluded_paths = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->excluded_paths_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->excluded_paths(static_cast<int>(i)));
    }
  }

  // repeated .istio.authentication.v1alpha1.StringMatch included_paths = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->included_paths_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->included_paths(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Jwt_TriggerRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.authentication.v1alpha1.Jwt.TriggerRule)
  GOOGLE_DCHECK_NE(&from, this);
  const Jwt_TriggerRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Jwt_TriggerRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.authentication.v1alpha1.Jwt.TriggerRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.authentication.v1alpha1.Jwt.TriggerRule)
    MergeFrom(*source);
  }
}

void Jwt_TriggerRule::MergeFrom(const Jwt_TriggerRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.authentication.v1alpha1.Jwt.TriggerRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  excluded_paths_.MergeFrom(from.excluded_paths_);
  included_paths_.MergeFrom(from.included_paths_);
}

void Jwt_TriggerRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.authentication.v1alpha1.Jwt.TriggerRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Jwt_TriggerRule::CopyFrom(const Jwt_TriggerRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.authentication.v1alpha1.Jwt.TriggerRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Jwt_TriggerRule::IsInitialized() const {
  return true;
}

void Jwt_TriggerRule::Swap(Jwt_TriggerRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Jwt_TriggerRule::InternalSwap(Jwt_TriggerRule* other) {
  using std::swap;
  excluded_paths_.InternalSwap(&other->excluded_paths_);
  included_paths_.InternalSwap(&other->included_paths_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Jwt_TriggerRule::GetMetadata() const {
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Jwt::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Jwt::kIssuerFieldNumber;
const int Jwt::kAudiencesFieldNumber;
const int Jwt::kJwksUriFieldNumber;
const int Jwt::kJwtHeadersFieldNumber;
const int Jwt::kJwtParamsFieldNumber;
const int Jwt::kTriggerRulesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Jwt::Jwt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsJwt();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.authentication.v1alpha1.Jwt)
}
Jwt::Jwt(const Jwt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      audiences_(from.audiences_),
      jwt_headers_(from.jwt_headers_),
      jwt_params_(from.jwt_params_),
      trigger_rules_(from.trigger_rules_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.issuer().size() > 0) {
    issuer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuer_);
  }
  jwks_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jwks_uri().size() > 0) {
    jwks_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jwks_uri_);
  }
  // @@protoc_insertion_point(copy_constructor:istio.authentication.v1alpha1.Jwt)
}

void Jwt::SharedCtor() {
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Jwt::~Jwt() {
  // @@protoc_insertion_point(destructor:istio.authentication.v1alpha1.Jwt)
  SharedDtor();
}

void Jwt::SharedDtor() {
  issuer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Jwt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Jwt::descriptor() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Jwt& Jwt::default_instance() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsJwt();
  return *internal_default_instance();
}

Jwt* Jwt::New(::google::protobuf::Arena* arena) const {
  Jwt* n = new Jwt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Jwt::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.authentication.v1alpha1.Jwt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audiences_.Clear();
  jwt_headers_.Clear();
  jwt_params_.Clear();
  trigger_rules_.Clear();
  issuer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  jwks_uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Jwt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.authentication.v1alpha1.Jwt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string issuer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->issuer().data(), static_cast<int>(this->issuer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.authentication.v1alpha1.Jwt.issuer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string audiences = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_audiences()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audiences(this->audiences_size() - 1).data(),
            static_cast<int>(this->audiences(this->audiences_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.authentication.v1alpha1.Jwt.audiences"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string jwks_uri = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jwks_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jwks_uri().data(), static_cast<int>(this->jwks_uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.authentication.v1alpha1.Jwt.jwks_uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string jwt_headers = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_jwt_headers()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jwt_headers(this->jwt_headers_size() - 1).data(),
            static_cast<int>(this->jwt_headers(this->jwt_headers_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.authentication.v1alpha1.Jwt.jwt_headers"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string jwt_params = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_jwt_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jwt_params(this->jwt_params_size() - 1).data(),
            static_cast<int>(this->jwt_params(this->jwt_params_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.authentication.v1alpha1.Jwt.jwt_params"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.authentication.v1alpha1.Jwt.TriggerRule trigger_rules = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_trigger_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.authentication.v1alpha1.Jwt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.authentication.v1alpha1.Jwt)
  return false;
#undef DO_
}

void Jwt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.authentication.v1alpha1.Jwt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.Jwt.issuer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->issuer(), output);
  }

  // repeated string audiences = 2;
  for (int i = 0, n = this->audiences_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audiences(i).data(), static_cast<int>(this->audiences(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.Jwt.audiences");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->audiences(i), output);
  }

  // string jwks_uri = 3;
  if (this->jwks_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jwks_uri().data(), static_cast<int>(this->jwks_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.Jwt.jwks_uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->jwks_uri(), output);
  }

  // repeated string jwt_headers = 6;
  for (int i = 0, n = this->jwt_headers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jwt_headers(i).data(), static_cast<int>(this->jwt_headers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.Jwt.jwt_headers");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->jwt_headers(i), output);
  }

  // repeated string jwt_params = 7;
  for (int i = 0, n = this->jwt_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jwt_params(i).data(), static_cast<int>(this->jwt_params(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.Jwt.jwt_params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->jwt_params(i), output);
  }

  // repeated .istio.authentication.v1alpha1.Jwt.TriggerRule trigger_rules = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trigger_rules_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->trigger_rules(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.authentication.v1alpha1.Jwt)
}

::google::protobuf::uint8* Jwt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.authentication.v1alpha1.Jwt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.Jwt.issuer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->issuer(), target);
  }

  // repeated string audiences = 2;
  for (int i = 0, n = this->audiences_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audiences(i).data(), static_cast<int>(this->audiences(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.Jwt.audiences");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->audiences(i), target);
  }

  // string jwks_uri = 3;
  if (this->jwks_uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jwks_uri().data(), static_cast<int>(this->jwks_uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.Jwt.jwks_uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->jwks_uri(), target);
  }

  // repeated string jwt_headers = 6;
  for (int i = 0, n = this->jwt_headers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jwt_headers(i).data(), static_cast<int>(this->jwt_headers(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.Jwt.jwt_headers");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->jwt_headers(i), target);
  }

  // repeated string jwt_params = 7;
  for (int i = 0, n = this->jwt_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jwt_params(i).data(), static_cast<int>(this->jwt_params(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.Jwt.jwt_params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->jwt_params(i), target);
  }

  // repeated .istio.authentication.v1alpha1.Jwt.TriggerRule trigger_rules = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->trigger_rules_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->trigger_rules(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.authentication.v1alpha1.Jwt)
  return target;
}

size_t Jwt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.authentication.v1alpha1.Jwt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string audiences = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->audiences_size());
  for (int i = 0, n = this->audiences_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->audiences(i));
  }

  // repeated string jwt_headers = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->jwt_headers_size());
  for (int i = 0, n = this->jwt_headers_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->jwt_headers(i));
  }

  // repeated string jwt_params = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->jwt_params_size());
  for (int i = 0, n = this->jwt_params_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->jwt_params(i));
  }

  // repeated .istio.authentication.v1alpha1.Jwt.TriggerRule trigger_rules = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->trigger_rules_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->trigger_rules(static_cast<int>(i)));
    }
  }

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->issuer());
  }

  // string jwks_uri = 3;
  if (this->jwks_uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jwks_uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Jwt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.authentication.v1alpha1.Jwt)
  GOOGLE_DCHECK_NE(&from, this);
  const Jwt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Jwt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.authentication.v1alpha1.Jwt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.authentication.v1alpha1.Jwt)
    MergeFrom(*source);
  }
}

void Jwt::MergeFrom(const Jwt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.authentication.v1alpha1.Jwt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  audiences_.MergeFrom(from.audiences_);
  jwt_headers_.MergeFrom(from.jwt_headers_);
  jwt_params_.MergeFrom(from.jwt_params_);
  trigger_rules_.MergeFrom(from.trigger_rules_);
  if (from.issuer().size() > 0) {

    issuer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuer_);
  }
  if (from.jwks_uri().size() > 0) {

    jwks_uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jwks_uri_);
  }
}

void Jwt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.authentication.v1alpha1.Jwt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Jwt::CopyFrom(const Jwt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.authentication.v1alpha1.Jwt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Jwt::IsInitialized() const {
  return true;
}

void Jwt::Swap(Jwt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Jwt::InternalSwap(Jwt* other) {
  using std::swap;
  audiences_.InternalSwap(&other->audiences_);
  jwt_headers_.InternalSwap(&other->jwt_headers_);
  jwt_params_.InternalSwap(&other->jwt_params_);
  trigger_rules_.InternalSwap(&other->trigger_rules_);
  issuer_.Swap(&other->issuer_);
  jwks_uri_.Swap(&other->jwks_uri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Jwt::GetMetadata() const {
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PeerAuthenticationMethod::InitAsDefaultInstance() {
  ::istio::authentication::v1alpha1::_PeerAuthenticationMethod_default_instance_.mtls_ = const_cast< ::istio::authentication::v1alpha1::MutualTls*>(
      ::istio::authentication::v1alpha1::MutualTls::internal_default_instance());
  ::istio::authentication::v1alpha1::_PeerAuthenticationMethod_default_instance_.jwt_ = const_cast< ::istio::authentication::v1alpha1::Jwt*>(
      ::istio::authentication::v1alpha1::Jwt::internal_default_instance());
}
void PeerAuthenticationMethod::set_allocated_mtls(::istio::authentication::v1alpha1::MutualTls* mtls) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_params();
  if (mtls) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mtls = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mtls, submessage_arena);
    }
    set_has_mtls();
    params_.mtls_ = mtls;
  }
  // @@protoc_insertion_point(field_set_allocated:istio.authentication.v1alpha1.PeerAuthenticationMethod.mtls)
}
void PeerAuthenticationMethod::set_allocated_jwt(::istio::authentication::v1alpha1::Jwt* jwt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_params();
  if (jwt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      jwt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, jwt, submessage_arena);
    }
    set_has_jwt();
    params_.jwt_ = jwt;
  }
  // @@protoc_insertion_point(field_set_allocated:istio.authentication.v1alpha1.PeerAuthenticationMethod.jwt)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PeerAuthenticationMethod::kMtlsFieldNumber;
const int PeerAuthenticationMethod::kJwtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PeerAuthenticationMethod::PeerAuthenticationMethod()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsPeerAuthenticationMethod();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.authentication.v1alpha1.PeerAuthenticationMethod)
}
PeerAuthenticationMethod::PeerAuthenticationMethod(const PeerAuthenticationMethod& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_params();
  switch (from.params_case()) {
    case kMtls: {
      mutable_mtls()->::istio::authentication::v1alpha1::MutualTls::MergeFrom(from.mtls());
      break;
    }
    case kJwt: {
      mutable_jwt()->::istio::authentication::v1alpha1::Jwt::MergeFrom(from.jwt());
      break;
    }
    case PARAMS_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:istio.authentication.v1alpha1.PeerAuthenticationMethod)
}

void PeerAuthenticationMethod::SharedCtor() {
  clear_has_params();
  _cached_size_ = 0;
}

PeerAuthenticationMethod::~PeerAuthenticationMethod() {
  // @@protoc_insertion_point(destructor:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  SharedDtor();
}

void PeerAuthenticationMethod::SharedDtor() {
  if (has_params()) {
    clear_params();
  }
}

void PeerAuthenticationMethod::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PeerAuthenticationMethod::descriptor() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PeerAuthenticationMethod& PeerAuthenticationMethod::default_instance() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsPeerAuthenticationMethod();
  return *internal_default_instance();
}

PeerAuthenticationMethod* PeerAuthenticationMethod::New(::google::protobuf::Arena* arena) const {
  PeerAuthenticationMethod* n = new PeerAuthenticationMethod;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PeerAuthenticationMethod::clear_params() {
// @@protoc_insertion_point(one_of_clear_start:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  switch (params_case()) {
    case kMtls: {
      delete params_.mtls_;
      break;
    }
    case kJwt: {
      delete params_.jwt_;
      break;
    }
    case PARAMS_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PARAMS_NOT_SET;
}


void PeerAuthenticationMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_params();
  _internal_metadata_.Clear();
}

bool PeerAuthenticationMethod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .istio.authentication.v1alpha1.MutualTls mtls = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mtls()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.authentication.v1alpha1.Jwt jwt = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_jwt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  return false;
#undef DO_
}

void PeerAuthenticationMethod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.authentication.v1alpha1.MutualTls mtls = 1;
  if (has_mtls()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *params_.mtls_, output);
  }

  // .istio.authentication.v1alpha1.Jwt jwt = 2;
  if (has_jwt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *params_.jwt_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.authentication.v1alpha1.PeerAuthenticationMethod)
}

::google::protobuf::uint8* PeerAuthenticationMethod::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.authentication.v1alpha1.MutualTls mtls = 1;
  if (has_mtls()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *params_.mtls_, deterministic, target);
  }

  // .istio.authentication.v1alpha1.Jwt jwt = 2;
  if (has_jwt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *params_.jwt_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  return target;
}

size_t PeerAuthenticationMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (params_case()) {
    // .istio.authentication.v1alpha1.MutualTls mtls = 1;
    case kMtls: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *params_.mtls_);
      break;
    }
    // .istio.authentication.v1alpha1.Jwt jwt = 2;
    case kJwt: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *params_.jwt_);
      break;
    }
    case PARAMS_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PeerAuthenticationMethod::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const PeerAuthenticationMethod* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PeerAuthenticationMethod>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.authentication.v1alpha1.PeerAuthenticationMethod)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.authentication.v1alpha1.PeerAuthenticationMethod)
    MergeFrom(*source);
  }
}

void PeerAuthenticationMethod::MergeFrom(const PeerAuthenticationMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.params_case()) {
    case kMtls: {
      mutable_mtls()->::istio::authentication::v1alpha1::MutualTls::MergeFrom(from.mtls());
      break;
    }
    case kJwt: {
      mutable_jwt()->::istio::authentication::v1alpha1::Jwt::MergeFrom(from.jwt());
      break;
    }
    case PARAMS_NOT_SET: {
      break;
    }
  }
}

void PeerAuthenticationMethod::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PeerAuthenticationMethod::CopyFrom(const PeerAuthenticationMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.authentication.v1alpha1.PeerAuthenticationMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PeerAuthenticationMethod::IsInitialized() const {
  return true;
}

void PeerAuthenticationMethod::Swap(PeerAuthenticationMethod* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PeerAuthenticationMethod::InternalSwap(PeerAuthenticationMethod* other) {
  using std::swap;
  swap(params_, other->params_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PeerAuthenticationMethod::GetMetadata() const {
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OriginAuthenticationMethod::InitAsDefaultInstance() {
  ::istio::authentication::v1alpha1::_OriginAuthenticationMethod_default_instance_._instance.get_mutable()->jwt_ = const_cast< ::istio::authentication::v1alpha1::Jwt*>(
      ::istio::authentication::v1alpha1::Jwt::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OriginAuthenticationMethod::kJwtFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OriginAuthenticationMethod::OriginAuthenticationMethod()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsOriginAuthenticationMethod();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.authentication.v1alpha1.OriginAuthenticationMethod)
}
OriginAuthenticationMethod::OriginAuthenticationMethod(const OriginAuthenticationMethod& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_jwt()) {
    jwt_ = new ::istio::authentication::v1alpha1::Jwt(*from.jwt_);
  } else {
    jwt_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:istio.authentication.v1alpha1.OriginAuthenticationMethod)
}

void OriginAuthenticationMethod::SharedCtor() {
  jwt_ = NULL;
  _cached_size_ = 0;
}

OriginAuthenticationMethod::~OriginAuthenticationMethod() {
  // @@protoc_insertion_point(destructor:istio.authentication.v1alpha1.OriginAuthenticationMethod)
  SharedDtor();
}

void OriginAuthenticationMethod::SharedDtor() {
  if (this != internal_default_instance()) delete jwt_;
}

void OriginAuthenticationMethod::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OriginAuthenticationMethod::descriptor() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OriginAuthenticationMethod& OriginAuthenticationMethod::default_instance() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsOriginAuthenticationMethod();
  return *internal_default_instance();
}

OriginAuthenticationMethod* OriginAuthenticationMethod::New(::google::protobuf::Arena* arena) const {
  OriginAuthenticationMethod* n = new OriginAuthenticationMethod;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OriginAuthenticationMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.authentication.v1alpha1.OriginAuthenticationMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && jwt_ != NULL) {
    delete jwt_;
  }
  jwt_ = NULL;
  _internal_metadata_.Clear();
}

bool OriginAuthenticationMethod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.authentication.v1alpha1.OriginAuthenticationMethod)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .istio.authentication.v1alpha1.Jwt jwt = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_jwt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.authentication.v1alpha1.OriginAuthenticationMethod)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.authentication.v1alpha1.OriginAuthenticationMethod)
  return false;
#undef DO_
}

void OriginAuthenticationMethod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.authentication.v1alpha1.OriginAuthenticationMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.authentication.v1alpha1.Jwt jwt = 1;
  if (this->has_jwt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->jwt_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.authentication.v1alpha1.OriginAuthenticationMethod)
}

::google::protobuf::uint8* OriginAuthenticationMethod::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.authentication.v1alpha1.OriginAuthenticationMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.authentication.v1alpha1.Jwt jwt = 1;
  if (this->has_jwt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->jwt_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.authentication.v1alpha1.OriginAuthenticationMethod)
  return target;
}

size_t OriginAuthenticationMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.authentication.v1alpha1.OriginAuthenticationMethod)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .istio.authentication.v1alpha1.Jwt jwt = 1;
  if (this->has_jwt()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->jwt_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OriginAuthenticationMethod::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.authentication.v1alpha1.OriginAuthenticationMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const OriginAuthenticationMethod* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OriginAuthenticationMethod>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.authentication.v1alpha1.OriginAuthenticationMethod)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.authentication.v1alpha1.OriginAuthenticationMethod)
    MergeFrom(*source);
  }
}

void OriginAuthenticationMethod::MergeFrom(const OriginAuthenticationMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.authentication.v1alpha1.OriginAuthenticationMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_jwt()) {
    mutable_jwt()->::istio::authentication::v1alpha1::Jwt::MergeFrom(from.jwt());
  }
}

void OriginAuthenticationMethod::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.authentication.v1alpha1.OriginAuthenticationMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OriginAuthenticationMethod::CopyFrom(const OriginAuthenticationMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.authentication.v1alpha1.OriginAuthenticationMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OriginAuthenticationMethod::IsInitialized() const {
  return true;
}

void OriginAuthenticationMethod::Swap(OriginAuthenticationMethod* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OriginAuthenticationMethod::InternalSwap(OriginAuthenticationMethod* other) {
  using std::swap;
  swap(jwt_, other->jwt_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OriginAuthenticationMethod::GetMetadata() const {
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Policy::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Policy::kTargetsFieldNumber;
const int Policy::kPeersFieldNumber;
const int Policy::kPeerIsOptionalFieldNumber;
const int Policy::kOriginsFieldNumber;
const int Policy::kOriginIsOptionalFieldNumber;
const int Policy::kPrincipalBindingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Policy::Policy()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsPolicy();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.authentication.v1alpha1.Policy)
}
Policy::Policy(const Policy& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      targets_(from.targets_),
      peers_(from.peers_),
      origins_(from.origins_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&peer_is_optional_, &from.peer_is_optional_,
    static_cast<size_t>(reinterpret_cast<char*>(&principal_binding_) -
    reinterpret_cast<char*>(&peer_is_optional_)) + sizeof(principal_binding_));
  // @@protoc_insertion_point(copy_constructor:istio.authentication.v1alpha1.Policy)
}

void Policy::SharedCtor() {
  ::memset(&peer_is_optional_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&principal_binding_) -
      reinterpret_cast<char*>(&peer_is_optional_)) + sizeof(principal_binding_));
  _cached_size_ = 0;
}

Policy::~Policy() {
  // @@protoc_insertion_point(destructor:istio.authentication.v1alpha1.Policy)
  SharedDtor();
}

void Policy::SharedDtor() {
}

void Policy::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Policy::descriptor() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Policy& Policy::default_instance() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsPolicy();
  return *internal_default_instance();
}

Policy* Policy::New(::google::protobuf::Arena* arena) const {
  Policy* n = new Policy;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Policy::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.authentication.v1alpha1.Policy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  targets_.Clear();
  peers_.Clear();
  origins_.Clear();
  ::memset(&peer_is_optional_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&principal_binding_) -
      reinterpret_cast<char*>(&peer_is_optional_)) + sizeof(principal_binding_));
  _internal_metadata_.Clear();
}

bool Policy::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.authentication.v1alpha1.Policy)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .istio.authentication.v1alpha1.TargetSelector targets = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_targets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.authentication.v1alpha1.PeerAuthenticationMethod peers = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_peers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool peer_is_optional = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &peer_is_optional_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.authentication.v1alpha1.OriginAuthenticationMethod origins = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_origins()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool origin_is_optional = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &origin_is_optional_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.authentication.v1alpha1.PrincipalBinding principal_binding = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_principal_binding(static_cast< ::istio::authentication::v1alpha1::PrincipalBinding >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.authentication.v1alpha1.Policy)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.authentication.v1alpha1.Policy)
  return false;
#undef DO_
}

void Policy::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.authentication.v1alpha1.Policy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.authentication.v1alpha1.TargetSelector targets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->targets_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->targets(static_cast<int>(i)), output);
  }

  // repeated .istio.authentication.v1alpha1.PeerAuthenticationMethod peers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->peers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->peers(static_cast<int>(i)), output);
  }

  // bool peer_is_optional = 3;
  if (this->peer_is_optional() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->peer_is_optional(), output);
  }

  // repeated .istio.authentication.v1alpha1.OriginAuthenticationMethod origins = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->origins_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->origins(static_cast<int>(i)), output);
  }

  // bool origin_is_optional = 5;
  if (this->origin_is_optional() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->origin_is_optional(), output);
  }

  // .istio.authentication.v1alpha1.PrincipalBinding principal_binding = 6;
  if (this->principal_binding() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->principal_binding(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.authentication.v1alpha1.Policy)
}

::google::protobuf::uint8* Policy::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.authentication.v1alpha1.Policy)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.authentication.v1alpha1.TargetSelector targets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->targets_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->targets(static_cast<int>(i)), deterministic, target);
  }

  // repeated .istio.authentication.v1alpha1.PeerAuthenticationMethod peers = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->peers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->peers(static_cast<int>(i)), deterministic, target);
  }

  // bool peer_is_optional = 3;
  if (this->peer_is_optional() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->peer_is_optional(), target);
  }

  // repeated .istio.authentication.v1alpha1.OriginAuthenticationMethod origins = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->origins_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->origins(static_cast<int>(i)), deterministic, target);
  }

  // bool origin_is_optional = 5;
  if (this->origin_is_optional() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->origin_is_optional(), target);
  }

  // .istio.authentication.v1alpha1.PrincipalBinding principal_binding = 6;
  if (this->principal_binding() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->principal_binding(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.authentication.v1alpha1.Policy)
  return target;
}

size_t Policy::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.authentication.v1alpha1.Policy)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.authentication.v1alpha1.TargetSelector targets = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->targets_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->targets(static_cast<int>(i)));
    }
  }

  // repeated .istio.authentication.v1alpha1.PeerAuthenticationMethod peers = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->peers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->peers(static_cast<int>(i)));
    }
  }

  // repeated .istio.authentication.v1alpha1.OriginAuthenticationMethod origins = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->origins_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->origins(static_cast<int>(i)));
    }
  }

  // bool peer_is_optional = 3;
  if (this->peer_is_optional() != 0) {
    total_size += 1 + 1;
  }

  // bool origin_is_optional = 5;
  if (this->origin_is_optional() != 0) {
    total_size += 1 + 1;
  }

  // .istio.authentication.v1alpha1.PrincipalBinding principal_binding = 6;
  if (this->principal_binding() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->principal_binding());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Policy::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.authentication.v1alpha1.Policy)
  GOOGLE_DCHECK_NE(&from, this);
  const Policy* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Policy>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.authentication.v1alpha1.Policy)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.authentication.v1alpha1.Policy)
    MergeFrom(*source);
  }
}

void Policy::MergeFrom(const Policy& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.authentication.v1alpha1.Policy)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  targets_.MergeFrom(from.targets_);
  peers_.MergeFrom(from.peers_);
  origins_.MergeFrom(from.origins_);
  if (from.peer_is_optional() != 0) {
    set_peer_is_optional(from.peer_is_optional());
  }
  if (from.origin_is_optional() != 0) {
    set_origin_is_optional(from.origin_is_optional());
  }
  if (from.principal_binding() != 0) {
    set_principal_binding(from.principal_binding());
  }
}

void Policy::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.authentication.v1alpha1.Policy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Policy::CopyFrom(const Policy& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.authentication.v1alpha1.Policy)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Policy::IsInitialized() const {
  return true;
}

void Policy::Swap(Policy* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Policy::InternalSwap(Policy* other) {
  using std::swap;
  targets_.InternalSwap(&other->targets_);
  peers_.InternalSwap(&other->peers_);
  origins_.InternalSwap(&other->origins_);
  swap(peer_is_optional_, other->peer_is_optional_);
  swap(origin_is_optional_, other->origin_is_optional_);
  swap(principal_binding_, other->principal_binding_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Policy::GetMetadata() const {
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

TargetSelector_LabelsEntry_DoNotUse::TargetSelector_LabelsEntry_DoNotUse() {}
TargetSelector_LabelsEntry_DoNotUse::TargetSelector_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void TargetSelector_LabelsEntry_DoNotUse::MergeFrom(const TargetSelector_LabelsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata TargetSelector_LabelsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[7];
}
void TargetSelector_LabelsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void TargetSelector::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TargetSelector::kNameFieldNumber;
const int TargetSelector::kLabelsFieldNumber;
const int TargetSelector::kPortsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TargetSelector::TargetSelector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsTargetSelector();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.authentication.v1alpha1.TargetSelector)
}
TargetSelector::TargetSelector(const TargetSelector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ports_(from.ports_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  labels_.MergeFrom(from.labels_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:istio.authentication.v1alpha1.TargetSelector)
}

void TargetSelector::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TargetSelector::~TargetSelector() {
  // @@protoc_insertion_point(destructor:istio.authentication.v1alpha1.TargetSelector)
  SharedDtor();
}

void TargetSelector::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TargetSelector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TargetSelector::descriptor() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TargetSelector& TargetSelector::default_instance() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsTargetSelector();
  return *internal_default_instance();
}

TargetSelector* TargetSelector::New(::google::protobuf::Arena* arena) const {
  TargetSelector* n = new TargetSelector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TargetSelector::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.authentication.v1alpha1.TargetSelector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ports_.Clear();
  labels_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TargetSelector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.authentication.v1alpha1.TargetSelector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.authentication.v1alpha1.TargetSelector.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.authentication.v1alpha1.PortSelector ports = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_ports()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> labels = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          TargetSelector_LabelsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              TargetSelector_LabelsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&labels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.authentication.v1alpha1.TargetSelector.LabelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.authentication.v1alpha1.TargetSelector.LabelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.authentication.v1alpha1.TargetSelector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.authentication.v1alpha1.TargetSelector)
  return false;
#undef DO_
}

void TargetSelector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.authentication.v1alpha1.TargetSelector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.TargetSelector.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .istio.authentication.v1alpha1.PortSelector ports = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ports_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->ports(static_cast<int>(i)), output);
  }

  // map<string, string> labels = 3;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.authentication.v1alpha1.TargetSelector.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.authentication.v1alpha1.TargetSelector.LabelsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TargetSelector_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<TargetSelector_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.authentication.v1alpha1.TargetSelector)
}

::google::protobuf::uint8* TargetSelector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.authentication.v1alpha1.TargetSelector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.TargetSelector.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .istio.authentication.v1alpha1.PortSelector ports = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ports_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->ports(static_cast<int>(i)), deterministic, target);
  }

  // map<string, string> labels = 3;
  if (!this->labels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.authentication.v1alpha1.TargetSelector.LabelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.authentication.v1alpha1.TargetSelector.LabelsEntry.value");
      }
    };

    if (deterministic &&
        this->labels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->labels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<TargetSelector_LabelsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(labels_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<TargetSelector_LabelsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->labels().begin();
          it != this->labels().end(); ++it) {
        entry.reset(labels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.authentication.v1alpha1.TargetSelector)
  return target;
}

size_t TargetSelector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.authentication.v1alpha1.TargetSelector)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.authentication.v1alpha1.PortSelector ports = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->ports_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ports(static_cast<int>(i)));
    }
  }

  // map<string, string> labels = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->labels_size());
  {
    ::google::protobuf::scoped_ptr<TargetSelector_LabelsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->labels().begin();
        it != this->labels().end(); ++it) {
      entry.reset(labels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TargetSelector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.authentication.v1alpha1.TargetSelector)
  GOOGLE_DCHECK_NE(&from, this);
  const TargetSelector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TargetSelector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.authentication.v1alpha1.TargetSelector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.authentication.v1alpha1.TargetSelector)
    MergeFrom(*source);
  }
}

void TargetSelector::MergeFrom(const TargetSelector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.authentication.v1alpha1.TargetSelector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ports_.MergeFrom(from.ports_);
  labels_.MergeFrom(from.labels_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void TargetSelector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.authentication.v1alpha1.TargetSelector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TargetSelector::CopyFrom(const TargetSelector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.authentication.v1alpha1.TargetSelector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TargetSelector::IsInitialized() const {
  return true;
}

void TargetSelector::Swap(TargetSelector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TargetSelector::InternalSwap(TargetSelector* other) {
  using std::swap;
  ports_.InternalSwap(&other->ports_);
  labels_.Swap(&other->labels_);
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TargetSelector::GetMetadata() const {
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PortSelector::InitAsDefaultInstance() {
  ::istio::authentication::v1alpha1::_PortSelector_default_instance_.number_ = 0u;
  ::istio::authentication::v1alpha1::_PortSelector_default_instance_.name_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PortSelector::kNumberFieldNumber;
const int PortSelector::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PortSelector::PortSelector()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsPortSelector();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.authentication.v1alpha1.PortSelector)
}
PortSelector::PortSelector(const PortSelector& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_port();
  switch (from.port_case()) {
    case kNumber: {
      set_number(from.number());
      break;
    }
    case kName: {
      set_name(from.name());
      break;
    }
    case PORT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:istio.authentication.v1alpha1.PortSelector)
}

void PortSelector::SharedCtor() {
  clear_has_port();
  _cached_size_ = 0;
}

PortSelector::~PortSelector() {
  // @@protoc_insertion_point(destructor:istio.authentication.v1alpha1.PortSelector)
  SharedDtor();
}

void PortSelector::SharedDtor() {
  if (has_port()) {
    clear_port();
  }
}

void PortSelector::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PortSelector::descriptor() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PortSelector& PortSelector::default_instance() {
  ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::InitDefaultsPortSelector();
  return *internal_default_instance();
}

PortSelector* PortSelector::New(::google::protobuf::Arena* arena) const {
  PortSelector* n = new PortSelector;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PortSelector::clear_port() {
// @@protoc_insertion_point(one_of_clear_start:istio.authentication.v1alpha1.PortSelector)
  switch (port_case()) {
    case kNumber: {
      // No need to clear
      break;
    }
    case kName: {
      port_.name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case PORT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PORT_NOT_SET;
}


void PortSelector::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.authentication.v1alpha1.PortSelector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_port();
  _internal_metadata_.Clear();
}

bool PortSelector::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.authentication.v1alpha1.PortSelector)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          clear_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_.number_)));
          set_has_number();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.authentication.v1alpha1.PortSelector.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.authentication.v1alpha1.PortSelector)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.authentication.v1alpha1.PortSelector)
  return false;
#undef DO_
}

void PortSelector::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.authentication.v1alpha1.PortSelector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 number = 1;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->number(), output);
  }

  // string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.PortSelector.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.authentication.v1alpha1.PortSelector)
}

::google::protobuf::uint8* PortSelector::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.authentication.v1alpha1.PortSelector)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 number = 1;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->number(), target);
  }

  // string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.authentication.v1alpha1.PortSelector.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.authentication.v1alpha1.PortSelector)
  return target;
}

size_t PortSelector::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.authentication.v1alpha1.PortSelector)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (port_case()) {
    // uint32 number = 1;
    case kNumber: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->number());
      break;
    }
    // string name = 2;
    case kName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
      break;
    }
    case PORT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PortSelector::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.authentication.v1alpha1.PortSelector)
  GOOGLE_DCHECK_NE(&from, this);
  const PortSelector* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PortSelector>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.authentication.v1alpha1.PortSelector)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.authentication.v1alpha1.PortSelector)
    MergeFrom(*source);
  }
}

void PortSelector::MergeFrom(const PortSelector& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.authentication.v1alpha1.PortSelector)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.port_case()) {
    case kNumber: {
      set_number(from.number());
      break;
    }
    case kName: {
      set_name(from.name());
      break;
    }
    case PORT_NOT_SET: {
      break;
    }
  }
}

void PortSelector::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.authentication.v1alpha1.PortSelector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PortSelector::CopyFrom(const PortSelector& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.authentication.v1alpha1.PortSelector)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PortSelector::IsInitialized() const {
  return true;
}

void PortSelector::Swap(PortSelector* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PortSelector::InternalSwap(PortSelector* other) {
  using std::swap;
  swap(port_, other->port_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PortSelector::GetMetadata() const {
  protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_authentication_2fv1alpha1_2fpolicy_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace authentication
}  // namespace istio

// @@protoc_insertion_point(global_scope)
