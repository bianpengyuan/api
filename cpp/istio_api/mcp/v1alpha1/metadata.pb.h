// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mcp/v1alpha1/metadata.proto

#ifndef PROTOBUF_mcp_2fv1alpha1_2fmetadata_2eproto__INCLUDED
#define PROTOBUF_mcp_2fv1alpha1_2fmetadata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "gogoproto/gogo.pb.h"
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/struct.pb.h>
// @@protoc_insertion_point(includes)

namespace protobuf_mcp_2fv1alpha1_2fmetadata_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsMetadata_LabelsEntry_DoNotUseImpl();
void InitDefaultsMetadata_LabelsEntry_DoNotUse();
void InitDefaultsMetadata_AnnotationsEntry_DoNotUseImpl();
void InitDefaultsMetadata_AnnotationsEntry_DoNotUse();
void InitDefaultsMetadataImpl();
void InitDefaultsMetadata();
inline void InitDefaults() {
  InitDefaultsMetadata_LabelsEntry_DoNotUse();
  InitDefaultsMetadata_AnnotationsEntry_DoNotUse();
  InitDefaultsMetadata();
}
}  // namespace protobuf_mcp_2fv1alpha1_2fmetadata_2eproto
namespace istio {
namespace mcp {
namespace v1alpha1 {
class Metadata;
class MetadataDefaultTypeInternal;
extern MetadataDefaultTypeInternal _Metadata_default_instance_;
class Metadata_AnnotationsEntry_DoNotUse;
class Metadata_AnnotationsEntry_DoNotUseDefaultTypeInternal;
extern Metadata_AnnotationsEntry_DoNotUseDefaultTypeInternal _Metadata_AnnotationsEntry_DoNotUse_default_instance_;
class Metadata_LabelsEntry_DoNotUse;
class Metadata_LabelsEntry_DoNotUseDefaultTypeInternal;
extern Metadata_LabelsEntry_DoNotUseDefaultTypeInternal _Metadata_LabelsEntry_DoNotUse_default_instance_;
}  // namespace v1alpha1
}  // namespace mcp
}  // namespace istio
namespace istio {
namespace mcp {
namespace v1alpha1 {

// ===================================================================

class Metadata_LabelsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Metadata_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Metadata_LabelsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Metadata_LabelsEntry_DoNotUse();
  Metadata_LabelsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Metadata_LabelsEntry_DoNotUse& other);
  static const Metadata_LabelsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Metadata_LabelsEntry_DoNotUse*>(&_Metadata_LabelsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Metadata_AnnotationsEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<Metadata_AnnotationsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<Metadata_AnnotationsEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  Metadata_AnnotationsEntry_DoNotUse();
  Metadata_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const Metadata_AnnotationsEntry_DoNotUse& other);
  static const Metadata_AnnotationsEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const Metadata_AnnotationsEntry_DoNotUse*>(&_Metadata_AnnotationsEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class Metadata : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mcp.v1alpha1.Metadata) */ {
 public:
  Metadata();
  virtual ~Metadata();

  Metadata(const Metadata& from);

  inline Metadata& operator=(const Metadata& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Metadata(Metadata&& from) noexcept
    : Metadata() {
    *this = ::std::move(from);
  }

  inline Metadata& operator=(Metadata&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Metadata& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Metadata* internal_default_instance() {
    return reinterpret_cast<const Metadata*>(
               &_Metadata_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Metadata* other);
  friend void swap(Metadata& a, Metadata& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Metadata* New() const PROTOBUF_FINAL { return New(NULL); }

  Metadata* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Metadata& from);
  void MergeFrom(const Metadata& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Metadata* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> labels = 4;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // map<string, string> annotations = 5;
  int annotations_size() const;
  void clear_annotations();
  static const int kAnnotationsFieldNumber = 5;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      annotations() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_annotations();

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // .google.protobuf.Timestamp create_time = 2;
  bool has_create_time() const;
  void clear_create_time();
  static const int kCreateTimeFieldNumber = 2;
  const ::google::protobuf::Timestamp& create_time() const;
  ::google::protobuf::Timestamp* release_create_time();
  ::google::protobuf::Timestamp* mutable_create_time();
  void set_allocated_create_time(::google::protobuf::Timestamp* create_time);

  // @@protoc_insertion_point(class_scope:istio.mcp.v1alpha1.Metadata)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      Metadata_LabelsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  ::google::protobuf::internal::MapField<
      Metadata_AnnotationsEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > annotations_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::Timestamp* create_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_mcp_2fv1alpha1_2fmetadata_2eproto::TableStruct;
  friend void ::protobuf_mcp_2fv1alpha1_2fmetadata_2eproto::InitDefaultsMetadataImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Metadata

// string name = 1;
inline void Metadata::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Metadata::name() const {
  // @@protoc_insertion_point(field_get:istio.mcp.v1alpha1.Metadata.name)
  return name_.GetNoArena();
}
inline void Metadata::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mcp.v1alpha1.Metadata.name)
}
#if LANG_CXX11
inline void Metadata::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mcp.v1alpha1.Metadata.name)
}
#endif
inline void Metadata::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mcp.v1alpha1.Metadata.name)
}
inline void Metadata::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mcp.v1alpha1.Metadata.name)
}
inline ::std::string* Metadata::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:istio.mcp.v1alpha1.Metadata.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Metadata::release_name() {
  // @@protoc_insertion_point(field_release:istio.mcp.v1alpha1.Metadata.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Metadata::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:istio.mcp.v1alpha1.Metadata.name)
}

// .google.protobuf.Timestamp create_time = 2;
inline bool Metadata::has_create_time() const {
  return this != internal_default_instance() && create_time_ != NULL;
}
inline const ::google::protobuf::Timestamp& Metadata::create_time() const {
  const ::google::protobuf::Timestamp* p = create_time_;
  // @@protoc_insertion_point(field_get:istio.mcp.v1alpha1.Metadata.create_time)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Timestamp*>(
      &::google::protobuf::_Timestamp_default_instance_);
}
inline ::google::protobuf::Timestamp* Metadata::release_create_time() {
  // @@protoc_insertion_point(field_release:istio.mcp.v1alpha1.Metadata.create_time)
  
  ::google::protobuf::Timestamp* temp = create_time_;
  create_time_ = NULL;
  return temp;
}
inline ::google::protobuf::Timestamp* Metadata::mutable_create_time() {
  
  if (create_time_ == NULL) {
    create_time_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:istio.mcp.v1alpha1.Metadata.create_time)
  return create_time_;
}
inline void Metadata::set_allocated_create_time(::google::protobuf::Timestamp* create_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(create_time_);
  }
  if (create_time) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast< ::google::protobuf::MessageLite*>(create_time)->GetArena();
    if (message_arena != submessage_arena) {
      create_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, create_time, submessage_arena);
    }
    
  } else {
    
  }
  create_time_ = create_time;
  // @@protoc_insertion_point(field_set_allocated:istio.mcp.v1alpha1.Metadata.create_time)
}

// string version = 3;
inline void Metadata::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Metadata::version() const {
  // @@protoc_insertion_point(field_get:istio.mcp.v1alpha1.Metadata.version)
  return version_.GetNoArena();
}
inline void Metadata::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mcp.v1alpha1.Metadata.version)
}
#if LANG_CXX11
inline void Metadata::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mcp.v1alpha1.Metadata.version)
}
#endif
inline void Metadata::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mcp.v1alpha1.Metadata.version)
}
inline void Metadata::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mcp.v1alpha1.Metadata.version)
}
inline ::std::string* Metadata::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:istio.mcp.v1alpha1.Metadata.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Metadata::release_version() {
  // @@protoc_insertion_point(field_release:istio.mcp.v1alpha1.Metadata.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Metadata::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:istio.mcp.v1alpha1.Metadata.version)
}

// map<string, string> labels = 4;
inline int Metadata::labels_size() const {
  return labels_.size();
}
inline void Metadata::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Metadata::labels() const {
  // @@protoc_insertion_point(field_map:istio.mcp.v1alpha1.Metadata.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Metadata::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:istio.mcp.v1alpha1.Metadata.labels)
  return labels_.MutableMap();
}

// map<string, string> annotations = 5;
inline int Metadata::annotations_size() const {
  return annotations_.size();
}
inline void Metadata::clear_annotations() {
  annotations_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
Metadata::annotations() const {
  // @@protoc_insertion_point(field_map:istio.mcp.v1alpha1.Metadata.annotations)
  return annotations_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
Metadata::mutable_annotations() {
  // @@protoc_insertion_point(field_mutable_map:istio.mcp.v1alpha1.Metadata.annotations)
  return annotations_.MutableMap();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha1
}  // namespace mcp
}  // namespace istio

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mcp_2fv1alpha1_2fmetadata_2eproto__INCLUDED
