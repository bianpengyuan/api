// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mcp/v1alpha1/mcp.proto

#include "mcp/v1alpha1/mcp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace istio {
namespace mcp {
namespace v1alpha1 {
class SinkNode_AnnotationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SinkNode_AnnotationsEntry_DoNotUse>
      _instance;
} _SinkNode_AnnotationsEntry_DoNotUse_default_instance_;
class SinkNodeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SinkNode>
      _instance;
} _SinkNode_default_instance_;
class MeshConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeshConfigRequest>
      _instance;
} _MeshConfigRequest_default_instance_;
class MeshConfigResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MeshConfigResponse>
      _instance;
} _MeshConfigResponse_default_instance_;
class IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse>
      _instance;
} _IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse_default_instance_;
class IncrementalMeshConfigRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IncrementalMeshConfigRequest>
      _instance;
} _IncrementalMeshConfigRequest_default_instance_;
class IncrementalMeshConfigResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IncrementalMeshConfigResponse>
      _instance;
} _IncrementalMeshConfigResponse_default_instance_;
class RequestResources_InitialResourceVersionsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestResources_InitialResourceVersionsEntry_DoNotUse>
      _instance;
} _RequestResources_InitialResourceVersionsEntry_DoNotUse_default_instance_;
class RequestResourcesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestResources>
      _instance;
} _RequestResources_default_instance_;
class ResourcesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Resources>
      _instance;
} _Resources_default_instance_;
}  // namespace v1alpha1
}  // namespace mcp
}  // namespace istio
namespace protobuf_mcp_2fv1alpha1_2fmcp_2eproto {
void InitDefaultsSinkNode_AnnotationsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mcp::v1alpha1::_SinkNode_AnnotationsEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mcp::v1alpha1::SinkNode_AnnotationsEntry_DoNotUse();
  }
  ::istio::mcp::v1alpha1::SinkNode_AnnotationsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsSinkNode_AnnotationsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSinkNode_AnnotationsEntry_DoNotUseImpl);
}

void InitDefaultsSinkNodeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsSinkNode_AnnotationsEntry_DoNotUse();
  {
    void* ptr = &::istio::mcp::v1alpha1::_SinkNode_default_instance_;
    new (ptr) ::istio::mcp::v1alpha1::SinkNode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mcp::v1alpha1::SinkNode::InitAsDefaultInstance();
}

void InitDefaultsSinkNode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSinkNodeImpl);
}

void InitDefaultsMeshConfigRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsSinkNode();
  protobuf_google_2frpc_2fstatus_2eproto::InitDefaultsStatus();
  {
    void* ptr = &::istio::mcp::v1alpha1::_MeshConfigRequest_default_instance_;
    new (ptr) ::istio::mcp::v1alpha1::MeshConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mcp::v1alpha1::MeshConfigRequest::InitAsDefaultInstance();
}

void InitDefaultsMeshConfigRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMeshConfigRequestImpl);
}

void InitDefaultsMeshConfigResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mcp_2fv1alpha1_2fresource_2eproto::InitDefaultsResource();
  {
    void* ptr = &::istio::mcp::v1alpha1::_MeshConfigResponse_default_instance_;
    new (ptr) ::istio::mcp::v1alpha1::MeshConfigResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mcp::v1alpha1::MeshConfigResponse::InitAsDefaultInstance();
}

void InitDefaultsMeshConfigResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMeshConfigResponseImpl);
}

void InitDefaultsIncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mcp::v1alpha1::_IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mcp::v1alpha1::IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse();
  }
  ::istio::mcp::v1alpha1::IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsIncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUseImpl);
}

void InitDefaultsIncrementalMeshConfigRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsSinkNode();
  protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsIncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse();
  protobuf_google_2frpc_2fstatus_2eproto::InitDefaultsStatus();
  {
    void* ptr = &::istio::mcp::v1alpha1::_IncrementalMeshConfigRequest_default_instance_;
    new (ptr) ::istio::mcp::v1alpha1::IncrementalMeshConfigRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mcp::v1alpha1::IncrementalMeshConfigRequest::InitAsDefaultInstance();
}

void InitDefaultsIncrementalMeshConfigRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIncrementalMeshConfigRequestImpl);
}

void InitDefaultsIncrementalMeshConfigResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mcp_2fv1alpha1_2fresource_2eproto::InitDefaultsResource();
  {
    void* ptr = &::istio::mcp::v1alpha1::_IncrementalMeshConfigResponse_default_instance_;
    new (ptr) ::istio::mcp::v1alpha1::IncrementalMeshConfigResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mcp::v1alpha1::IncrementalMeshConfigResponse::InitAsDefaultInstance();
}

void InitDefaultsIncrementalMeshConfigResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsIncrementalMeshConfigResponseImpl);
}

void InitDefaultsRequestResources_InitialResourceVersionsEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mcp::v1alpha1::_RequestResources_InitialResourceVersionsEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mcp::v1alpha1::RequestResources_InitialResourceVersionsEntry_DoNotUse();
  }
  ::istio::mcp::v1alpha1::RequestResources_InitialResourceVersionsEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsRequestResources_InitialResourceVersionsEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestResources_InitialResourceVersionsEntry_DoNotUseImpl);
}

void InitDefaultsRequestResourcesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsSinkNode();
  protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsRequestResources_InitialResourceVersionsEntry_DoNotUse();
  protobuf_google_2frpc_2fstatus_2eproto::InitDefaultsStatus();
  {
    void* ptr = &::istio::mcp::v1alpha1::_RequestResources_default_instance_;
    new (ptr) ::istio::mcp::v1alpha1::RequestResources();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mcp::v1alpha1::RequestResources::InitAsDefaultInstance();
}

void InitDefaultsRequestResources() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestResourcesImpl);
}

void InitDefaultsResourcesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mcp_2fv1alpha1_2fresource_2eproto::InitDefaultsResource();
  {
    void* ptr = &::istio::mcp::v1alpha1::_Resources_default_instance_;
    new (ptr) ::istio::mcp::v1alpha1::Resources();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mcp::v1alpha1::Resources::InitAsDefaultInstance();
}

void InitDefaultsResources() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResourcesImpl);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::SinkNode_AnnotationsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::SinkNode_AnnotationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::SinkNode_AnnotationsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::SinkNode_AnnotationsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::SinkNode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::SinkNode, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::SinkNode, annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::MeshConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::MeshConfigRequest, version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::MeshConfigRequest, sink_node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::MeshConfigRequest, type_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::MeshConfigRequest, response_nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::MeshConfigRequest, error_detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::MeshConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::MeshConfigResponse, version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::MeshConfigResponse, resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::MeshConfigResponse, type_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::MeshConfigResponse, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigRequest, sink_node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigRequest, type_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigRequest, initial_resource_versions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigRequest, response_nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigRequest, error_detail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigResponse, system_version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigResponse, resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigResponse, removed_resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::IncrementalMeshConfigResponse, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::RequestResources_InitialResourceVersionsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::RequestResources_InitialResourceVersionsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::RequestResources_InitialResourceVersionsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::RequestResources_InitialResourceVersionsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::RequestResources, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::RequestResources, sink_node_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::RequestResources, collection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::RequestResources, initial_resource_versions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::RequestResources, response_nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::RequestResources, error_detail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::RequestResources, incremental_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::Resources, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::Resources, system_version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::Resources, collection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::Resources, resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::Resources, removed_resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::Resources, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mcp::v1alpha1::Resources, incremental_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::istio::mcp::v1alpha1::SinkNode_AnnotationsEntry_DoNotUse)},
  { 9, -1, sizeof(::istio::mcp::v1alpha1::SinkNode)},
  { 16, -1, sizeof(::istio::mcp::v1alpha1::MeshConfigRequest)},
  { 26, -1, sizeof(::istio::mcp::v1alpha1::MeshConfigResponse)},
  { 35, 42, sizeof(::istio::mcp::v1alpha1::IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse)},
  { 44, -1, sizeof(::istio::mcp::v1alpha1::IncrementalMeshConfigRequest)},
  { 54, -1, sizeof(::istio::mcp::v1alpha1::IncrementalMeshConfigResponse)},
  { 63, 70, sizeof(::istio::mcp::v1alpha1::RequestResources_InitialResourceVersionsEntry_DoNotUse)},
  { 72, -1, sizeof(::istio::mcp::v1alpha1::RequestResources)},
  { 83, -1, sizeof(::istio::mcp::v1alpha1::Resources)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mcp::v1alpha1::_SinkNode_AnnotationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mcp::v1alpha1::_SinkNode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mcp::v1alpha1::_MeshConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mcp::v1alpha1::_MeshConfigResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mcp::v1alpha1::_IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mcp::v1alpha1::_IncrementalMeshConfigRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mcp::v1alpha1::_IncrementalMeshConfigResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mcp::v1alpha1::_RequestResources_InitialResourceVersionsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mcp::v1alpha1::_RequestResources_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mcp::v1alpha1::_Resources_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mcp/v1alpha1/mcp.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\026mcp/v1alpha1/mcp.proto\022\022istio.mcp.v1al"
      "pha1\032\027google/rpc/status.proto\032\024gogoproto"
      "/gogo.proto\032\033mcp/v1alpha1/resource.proto"
      "\"\216\001\n\010SinkNode\022\n\n\002id\030\001 \001(\t\022B\n\013annotations"
      "\030\002 \003(\0132-.istio.mcp.v1alpha1.SinkNode.Ann"
      "otationsEntry\0322\n\020AnnotationsEntry\022\013\n\003key"
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\256\001\n\021MeshConfig"
      "Request\022\024\n\014version_info\030\001 \001(\t\022/\n\tsink_no"
      "de\030\002 \001(\0132\034.istio.mcp.v1alpha1.SinkNode\022\020"
      "\n\010type_url\030\003 \001(\t\022\026\n\016response_nonce\030\004 \001(\t"
      "\022(\n\014error_detail\030\005 \001(\0132\022.google.rpc.Stat"
      "us\"\202\001\n\022MeshConfigResponse\022\024\n\014version_inf"
      "o\030\001 \001(\t\0225\n\tresources\030\002 \003(\0132\034.istio.mcp.v"
      "1alpha1.ResourceB\004\310\336\037\000\022\020\n\010type_url\030\003 \001(\t"
      "\022\r\n\005nonce\030\004 \001(\t\"\325\002\n\034IncrementalMeshConfi"
      "gRequest\022/\n\tsink_node\030\001 \001(\0132\034.istio.mcp."
      "v1alpha1.SinkNode\022\020\n\010type_url\030\002 \001(\t\022p\n\031i"
      "nitial_resource_versions\030\003 \003(\0132M.istio.m"
      "cp.v1alpha1.IncrementalMeshConfigRequest"
      ".InitialResourceVersionsEntry\022\026\n\016respons"
      "e_nonce\030\004 \001(\t\022(\n\014error_detail\030\005 \001(\0132\022.go"
      "ogle.rpc.Status\032>\n\034InitialResourceVersio"
      "nsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\""
      "\235\001\n\035IncrementalMeshConfigResponse\022\033\n\023sys"
      "tem_version_info\030\001 \001(\t\0225\n\tresources\030\002 \003("
      "\0132\034.istio.mcp.v1alpha1.ResourceB\004\310\336\037\000\022\031\n"
      "\021removed_resources\030\003 \003(\t\022\r\n\005nonce\030\004 \001(\t\""
      "\324\002\n\020RequestResources\022/\n\tsink_node\030\001 \001(\0132"
      "\034.istio.mcp.v1alpha1.SinkNode\022\022\n\ncollect"
      "ion\030\002 \001(\t\022d\n\031initial_resource_versions\030\003"
      " \003(\0132A.istio.mcp.v1alpha1.RequestResourc"
      "es.InitialResourceVersionsEntry\022\026\n\016respo"
      "nse_nonce\030\004 \001(\t\022(\n\014error_detail\030\005 \001(\0132\022."
      "google.rpc.Status\022\023\n\013incremental\030\006 \001(\010\032>"
      "\n\034InitialResourceVersionsEntry\022\013\n\003key\030\001 "
      "\001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\262\001\n\tResources\022\033\n\023"
      "system_version_info\030\001 \001(\t\022\022\n\ncollection\030"
      "\002 \001(\t\0225\n\tresources\030\003 \003(\0132\034.istio.mcp.v1a"
      "lpha1.ResourceB\004\310\336\037\000\022\031\n\021removed_resource"
      "s\030\004 \003(\t\022\r\n\005nonce\030\005 \001(\t\022\023\n\013incremental\030\006 "
      "\001(\0102\235\002\n\033AggregatedMeshConfigService\022p\n\031S"
      "treamAggregatedResources\022%.istio.mcp.v1a"
      "lpha1.MeshConfigRequest\032&.istio.mcp.v1al"
      "pha1.MeshConfigResponse\"\000(\0010\001\022\213\001\n\036Increm"
      "entalAggregatedResources\0220.istio.mcp.v1a"
      "lpha1.IncrementalMeshConfigRequest\0321.ist"
      "io.mcp.v1alpha1.IncrementalMeshConfigRes"
      "ponse\"\000(\0010\0012v\n\016ResourceSource\022d\n\027Establi"
      "shResourceStream\022$.istio.mcp.v1alpha1.Re"
      "questResources\032\035.istio.mcp.v1alpha1.Reso"
      "urces\"\000(\0010\0012t\n\014ResourceSink\022d\n\027Establish"
      "ResourceStream\022\035.istio.mcp.v1alpha1.Reso"
      "urces\032$.istio.mcp.v1alpha1.RequestResour"
      "ces\"\000(\0010\001B\037Z\031istio.io/api/mcp/v1alpha1\250\342"
      "\036\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2170);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mcp/v1alpha1/mcp.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
  ::protobuf_gogoproto_2fgogo_2eproto::AddDescriptors();
  ::protobuf_mcp_2fv1alpha1_2fresource_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mcp_2fv1alpha1_2fmcp_2eproto
namespace istio {
namespace mcp {
namespace v1alpha1 {

// ===================================================================

SinkNode_AnnotationsEntry_DoNotUse::SinkNode_AnnotationsEntry_DoNotUse() {}
SinkNode_AnnotationsEntry_DoNotUse::SinkNode_AnnotationsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void SinkNode_AnnotationsEntry_DoNotUse::MergeFrom(const SinkNode_AnnotationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata SinkNode_AnnotationsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[0];
}
void SinkNode_AnnotationsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void SinkNode::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SinkNode::kIdFieldNumber;
const int SinkNode::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SinkNode::SinkNode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsSinkNode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mcp.v1alpha1.SinkNode)
}
SinkNode::SinkNode(const SinkNode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  annotations_.MergeFrom(from.annotations_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:istio.mcp.v1alpha1.SinkNode)
}

void SinkNode::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SinkNode::~SinkNode() {
  // @@protoc_insertion_point(destructor:istio.mcp.v1alpha1.SinkNode)
  SharedDtor();
}

void SinkNode::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SinkNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SinkNode::descriptor() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SinkNode& SinkNode::default_instance() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsSinkNode();
  return *internal_default_instance();
}

SinkNode* SinkNode::New(::google::protobuf::Arena* arena) const {
  SinkNode* n = new SinkNode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SinkNode::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mcp.v1alpha1.SinkNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  annotations_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SinkNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mcp.v1alpha1.SinkNode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.SinkNode.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> annotations = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          SinkNode_AnnotationsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              SinkNode_AnnotationsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&annotations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.SinkNode.AnnotationsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.SinkNode.AnnotationsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mcp.v1alpha1.SinkNode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mcp.v1alpha1.SinkNode)
  return false;
#undef DO_
}

void SinkNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mcp.v1alpha1.SinkNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.SinkNode.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // map<string, string> annotations = 2;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mcp.v1alpha1.SinkNode.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mcp.v1alpha1.SinkNode.AnnotationsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SinkNode_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SinkNode_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mcp.v1alpha1.SinkNode)
}

::google::protobuf::uint8* SinkNode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mcp.v1alpha1.SinkNode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.SinkNode.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // map<string, string> annotations = 2;
  if (!this->annotations().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mcp.v1alpha1.SinkNode.AnnotationsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mcp.v1alpha1.SinkNode.AnnotationsEntry.value");
      }
    };

    if (deterministic &&
        this->annotations().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->annotations().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<SinkNode_AnnotationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(annotations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<SinkNode_AnnotationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->annotations().begin();
          it != this->annotations().end(); ++it) {
        entry.reset(annotations_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mcp.v1alpha1.SinkNode)
  return target;
}

size_t SinkNode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mcp.v1alpha1.SinkNode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> annotations = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->annotations_size());
  {
    ::google::protobuf::scoped_ptr<SinkNode_AnnotationsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->annotations().begin();
        it != this->annotations().end(); ++it) {
      entry.reset(annotations_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SinkNode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mcp.v1alpha1.SinkNode)
  GOOGLE_DCHECK_NE(&from, this);
  const SinkNode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SinkNode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mcp.v1alpha1.SinkNode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mcp.v1alpha1.SinkNode)
    MergeFrom(*source);
  }
}

void SinkNode::MergeFrom(const SinkNode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mcp.v1alpha1.SinkNode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  annotations_.MergeFrom(from.annotations_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void SinkNode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mcp.v1alpha1.SinkNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SinkNode::CopyFrom(const SinkNode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mcp.v1alpha1.SinkNode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SinkNode::IsInitialized() const {
  return true;
}

void SinkNode::Swap(SinkNode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SinkNode::InternalSwap(SinkNode* other) {
  using std::swap;
  annotations_.Swap(&other->annotations_);
  id_.Swap(&other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SinkNode::GetMetadata() const {
  protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MeshConfigRequest::InitAsDefaultInstance() {
  ::istio::mcp::v1alpha1::_MeshConfigRequest_default_instance_._instance.get_mutable()->sink_node_ = const_cast< ::istio::mcp::v1alpha1::SinkNode*>(
      ::istio::mcp::v1alpha1::SinkNode::internal_default_instance());
  ::istio::mcp::v1alpha1::_MeshConfigRequest_default_instance_._instance.get_mutable()->error_detail_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void MeshConfigRequest::clear_error_detail() {
  if (GetArenaNoVirtual() == NULL && error_detail_ != NULL) {
    delete error_detail_;
  }
  error_detail_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeshConfigRequest::kVersionInfoFieldNumber;
const int MeshConfigRequest::kSinkNodeFieldNumber;
const int MeshConfigRequest::kTypeUrlFieldNumber;
const int MeshConfigRequest::kResponseNonceFieldNumber;
const int MeshConfigRequest::kErrorDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeshConfigRequest::MeshConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsMeshConfigRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mcp.v1alpha1.MeshConfigRequest)
}
MeshConfigRequest::MeshConfigRequest(const MeshConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version_info().size() > 0) {
    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  type_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_url().size() > 0) {
    type_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_url_);
  }
  response_nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_nonce().size() > 0) {
    response_nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_nonce_);
  }
  if (from.has_sink_node()) {
    sink_node_ = new ::istio::mcp::v1alpha1::SinkNode(*from.sink_node_);
  } else {
    sink_node_ = NULL;
  }
  if (from.has_error_detail()) {
    error_detail_ = new ::google::rpc::Status(*from.error_detail_);
  } else {
    error_detail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:istio.mcp.v1alpha1.MeshConfigRequest)
}

void MeshConfigRequest::SharedCtor() {
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sink_node_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_detail_) -
      reinterpret_cast<char*>(&sink_node_)) + sizeof(error_detail_));
  _cached_size_ = 0;
}

MeshConfigRequest::~MeshConfigRequest() {
  // @@protoc_insertion_point(destructor:istio.mcp.v1alpha1.MeshConfigRequest)
  SharedDtor();
}

void MeshConfigRequest::SharedDtor() {
  version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete sink_node_;
  if (this != internal_default_instance()) delete error_detail_;
}

void MeshConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeshConfigRequest::descriptor() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeshConfigRequest& MeshConfigRequest::default_instance() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsMeshConfigRequest();
  return *internal_default_instance();
}

MeshConfigRequest* MeshConfigRequest::New(::google::protobuf::Arena* arena) const {
  MeshConfigRequest* n = new MeshConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeshConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mcp.v1alpha1.MeshConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && sink_node_ != NULL) {
    delete sink_node_;
  }
  sink_node_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_detail_ != NULL) {
    delete error_detail_;
  }
  error_detail_ = NULL;
  _internal_metadata_.Clear();
}

bool MeshConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mcp.v1alpha1.MeshConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_info().data(), static_cast<int>(this->version_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.MeshConfigRequest.version_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mcp.v1alpha1.SinkNode sink_node = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sink_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_url().data(), static_cast<int>(this->type_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.MeshConfigRequest.type_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_nonce = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_nonce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_nonce().data(), static_cast<int>(this->response_nonce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.MeshConfigRequest.response_nonce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status error_detail = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mcp.v1alpha1.MeshConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mcp.v1alpha1.MeshConfigRequest)
  return false;
#undef DO_
}

void MeshConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mcp.v1alpha1.MeshConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_info().data(), static_cast<int>(this->version_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.MeshConfigRequest.version_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version_info(), output);
  }

  // .istio.mcp.v1alpha1.SinkNode sink_node = 2;
  if (this->has_sink_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->sink_node_, output);
  }

  // string type_url = 3;
  if (this->type_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_url().data(), static_cast<int>(this->type_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.MeshConfigRequest.type_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type_url(), output);
  }

  // string response_nonce = 4;
  if (this->response_nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_nonce().data(), static_cast<int>(this->response_nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.MeshConfigRequest.response_nonce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->response_nonce(), output);
  }

  // .google.rpc.Status error_detail = 5;
  if (this->has_error_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->error_detail_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mcp.v1alpha1.MeshConfigRequest)
}

::google::protobuf::uint8* MeshConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mcp.v1alpha1.MeshConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_info().data(), static_cast<int>(this->version_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.MeshConfigRequest.version_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version_info(), target);
  }

  // .istio.mcp.v1alpha1.SinkNode sink_node = 2;
  if (this->has_sink_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->sink_node_, deterministic, target);
  }

  // string type_url = 3;
  if (this->type_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_url().data(), static_cast<int>(this->type_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.MeshConfigRequest.type_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type_url(), target);
  }

  // string response_nonce = 4;
  if (this->response_nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_nonce().data(), static_cast<int>(this->response_nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.MeshConfigRequest.response_nonce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->response_nonce(), target);
  }

  // .google.rpc.Status error_detail = 5;
  if (this->has_error_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->error_detail_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mcp.v1alpha1.MeshConfigRequest)
  return target;
}

size_t MeshConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mcp.v1alpha1.MeshConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string version_info = 1;
  if (this->version_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version_info());
  }

  // string type_url = 3;
  if (this->type_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_url());
  }

  // string response_nonce = 4;
  if (this->response_nonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_nonce());
  }

  // .istio.mcp.v1alpha1.SinkNode sink_node = 2;
  if (this->has_sink_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sink_node_);
  }

  // .google.rpc.Status error_detail = 5;
  if (this->has_error_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_detail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeshConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mcp.v1alpha1.MeshConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MeshConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeshConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mcp.v1alpha1.MeshConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mcp.v1alpha1.MeshConfigRequest)
    MergeFrom(*source);
  }
}

void MeshConfigRequest::MergeFrom(const MeshConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mcp.v1alpha1.MeshConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version_info().size() > 0) {

    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  if (from.type_url().size() > 0) {

    type_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_url_);
  }
  if (from.response_nonce().size() > 0) {

    response_nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_nonce_);
  }
  if (from.has_sink_node()) {
    mutable_sink_node()->::istio::mcp::v1alpha1::SinkNode::MergeFrom(from.sink_node());
  }
  if (from.has_error_detail()) {
    mutable_error_detail()->::google::rpc::Status::MergeFrom(from.error_detail());
  }
}

void MeshConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mcp.v1alpha1.MeshConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeshConfigRequest::CopyFrom(const MeshConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mcp.v1alpha1.MeshConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeshConfigRequest::IsInitialized() const {
  return true;
}

void MeshConfigRequest::Swap(MeshConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeshConfigRequest::InternalSwap(MeshConfigRequest* other) {
  using std::swap;
  version_info_.Swap(&other->version_info_);
  type_url_.Swap(&other->type_url_);
  response_nonce_.Swap(&other->response_nonce_);
  swap(sink_node_, other->sink_node_);
  swap(error_detail_, other->error_detail_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeshConfigRequest::GetMetadata() const {
  protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MeshConfigResponse::InitAsDefaultInstance() {
}
void MeshConfigResponse::clear_resources() {
  resources_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeshConfigResponse::kVersionInfoFieldNumber;
const int MeshConfigResponse::kResourcesFieldNumber;
const int MeshConfigResponse::kTypeUrlFieldNumber;
const int MeshConfigResponse::kNonceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeshConfigResponse::MeshConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsMeshConfigResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mcp.v1alpha1.MeshConfigResponse)
}
MeshConfigResponse::MeshConfigResponse(const MeshConfigResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      resources_(from.resources_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version_info().size() > 0) {
    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  type_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_url().size() > 0) {
    type_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_url_);
  }
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nonce().size() > 0) {
    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  // @@protoc_insertion_point(copy_constructor:istio.mcp.v1alpha1.MeshConfigResponse)
}

void MeshConfigResponse::SharedCtor() {
  version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MeshConfigResponse::~MeshConfigResponse() {
  // @@protoc_insertion_point(destructor:istio.mcp.v1alpha1.MeshConfigResponse)
  SharedDtor();
}

void MeshConfigResponse::SharedDtor() {
  version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MeshConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeshConfigResponse::descriptor() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MeshConfigResponse& MeshConfigResponse::default_instance() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsMeshConfigResponse();
  return *internal_default_instance();
}

MeshConfigResponse* MeshConfigResponse::New(::google::protobuf::Arena* arena) const {
  MeshConfigResponse* n = new MeshConfigResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeshConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mcp.v1alpha1.MeshConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resources_.Clear();
  version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MeshConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mcp.v1alpha1.MeshConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version_info().data(), static_cast<int>(this->version_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.MeshConfigResponse.version_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.mcp.v1alpha1.Resource resources = 2 [(.gogoproto.nullable) = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_url().data(), static_cast<int>(this->type_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.MeshConfigResponse.type_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nonce = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nonce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nonce().data(), static_cast<int>(this->nonce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.MeshConfigResponse.nonce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mcp.v1alpha1.MeshConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mcp.v1alpha1.MeshConfigResponse)
  return false;
#undef DO_
}

void MeshConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mcp.v1alpha1.MeshConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_info().data(), static_cast<int>(this->version_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.MeshConfigResponse.version_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version_info(), output);
  }

  // repeated .istio.mcp.v1alpha1.Resource resources = 2 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resources(static_cast<int>(i)), output);
  }

  // string type_url = 3;
  if (this->type_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_url().data(), static_cast<int>(this->type_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.MeshConfigResponse.type_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->type_url(), output);
  }

  // string nonce = 4;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), static_cast<int>(this->nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.MeshConfigResponse.nonce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nonce(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mcp.v1alpha1.MeshConfigResponse)
}

::google::protobuf::uint8* MeshConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mcp.v1alpha1.MeshConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version_info = 1;
  if (this->version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version_info().data(), static_cast<int>(this->version_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.MeshConfigResponse.version_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version_info(), target);
  }

  // repeated .istio.mcp.v1alpha1.Resource resources = 2 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resources_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->resources(static_cast<int>(i)), deterministic, target);
  }

  // string type_url = 3;
  if (this->type_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_url().data(), static_cast<int>(this->type_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.MeshConfigResponse.type_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->type_url(), target);
  }

  // string nonce = 4;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), static_cast<int>(this->nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.MeshConfigResponse.nonce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nonce(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mcp.v1alpha1.MeshConfigResponse)
  return target;
}

size_t MeshConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mcp.v1alpha1.MeshConfigResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.mcp.v1alpha1.Resource resources = 2 [(.gogoproto.nullable) = false];
  {
    unsigned int count = static_cast<unsigned int>(this->resources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->resources(static_cast<int>(i)));
    }
  }

  // string version_info = 1;
  if (this->version_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version_info());
  }

  // string type_url = 3;
  if (this->type_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_url());
  }

  // string nonce = 4;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nonce());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeshConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mcp.v1alpha1.MeshConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MeshConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeshConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mcp.v1alpha1.MeshConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mcp.v1alpha1.MeshConfigResponse)
    MergeFrom(*source);
  }
}

void MeshConfigResponse::MergeFrom(const MeshConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mcp.v1alpha1.MeshConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resources_.MergeFrom(from.resources_);
  if (from.version_info().size() > 0) {

    version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_info_);
  }
  if (from.type_url().size() > 0) {

    type_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_url_);
  }
  if (from.nonce().size() > 0) {

    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
}

void MeshConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mcp.v1alpha1.MeshConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeshConfigResponse::CopyFrom(const MeshConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mcp.v1alpha1.MeshConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MeshConfigResponse::IsInitialized() const {
  return true;
}

void MeshConfigResponse::Swap(MeshConfigResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeshConfigResponse::InternalSwap(MeshConfigResponse* other) {
  using std::swap;
  resources_.InternalSwap(&other->resources_);
  version_info_.Swap(&other->version_info_);
  type_url_.Swap(&other->type_url_);
  nonce_.Swap(&other->nonce_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeshConfigResponse::GetMetadata() const {
  protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse::IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse() {}
IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse::IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse::MergeFrom(const IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[4];
}
void IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void IncrementalMeshConfigRequest::InitAsDefaultInstance() {
  ::istio::mcp::v1alpha1::_IncrementalMeshConfigRequest_default_instance_._instance.get_mutable()->sink_node_ = const_cast< ::istio::mcp::v1alpha1::SinkNode*>(
      ::istio::mcp::v1alpha1::SinkNode::internal_default_instance());
  ::istio::mcp::v1alpha1::_IncrementalMeshConfigRequest_default_instance_._instance.get_mutable()->error_detail_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void IncrementalMeshConfigRequest::clear_error_detail() {
  if (GetArenaNoVirtual() == NULL && error_detail_ != NULL) {
    delete error_detail_;
  }
  error_detail_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IncrementalMeshConfigRequest::kSinkNodeFieldNumber;
const int IncrementalMeshConfigRequest::kTypeUrlFieldNumber;
const int IncrementalMeshConfigRequest::kInitialResourceVersionsFieldNumber;
const int IncrementalMeshConfigRequest::kResponseNonceFieldNumber;
const int IncrementalMeshConfigRequest::kErrorDetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IncrementalMeshConfigRequest::IncrementalMeshConfigRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsIncrementalMeshConfigRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
}
IncrementalMeshConfigRequest::IncrementalMeshConfigRequest(const IncrementalMeshConfigRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  initial_resource_versions_.MergeFrom(from.initial_resource_versions_);
  type_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type_url().size() > 0) {
    type_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_url_);
  }
  response_nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_nonce().size() > 0) {
    response_nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_nonce_);
  }
  if (from.has_sink_node()) {
    sink_node_ = new ::istio::mcp::v1alpha1::SinkNode(*from.sink_node_);
  } else {
    sink_node_ = NULL;
  }
  if (from.has_error_detail()) {
    error_detail_ = new ::google::rpc::Status(*from.error_detail_);
  } else {
    error_detail_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
}

void IncrementalMeshConfigRequest::SharedCtor() {
  type_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sink_node_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&error_detail_) -
      reinterpret_cast<char*>(&sink_node_)) + sizeof(error_detail_));
  _cached_size_ = 0;
}

IncrementalMeshConfigRequest::~IncrementalMeshConfigRequest() {
  // @@protoc_insertion_point(destructor:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
  SharedDtor();
}

void IncrementalMeshConfigRequest::SharedDtor() {
  type_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete sink_node_;
  if (this != internal_default_instance()) delete error_detail_;
}

void IncrementalMeshConfigRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IncrementalMeshConfigRequest::descriptor() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IncrementalMeshConfigRequest& IncrementalMeshConfigRequest::default_instance() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsIncrementalMeshConfigRequest();
  return *internal_default_instance();
}

IncrementalMeshConfigRequest* IncrementalMeshConfigRequest::New(::google::protobuf::Arena* arena) const {
  IncrementalMeshConfigRequest* n = new IncrementalMeshConfigRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IncrementalMeshConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initial_resource_versions_.Clear();
  type_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && sink_node_ != NULL) {
    delete sink_node_;
  }
  sink_node_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_detail_ != NULL) {
    delete error_detail_;
  }
  error_detail_ = NULL;
  _internal_metadata_.Clear();
}

bool IncrementalMeshConfigRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .istio.mcp.v1alpha1.SinkNode sink_node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sink_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type_url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type_url().data(), static_cast<int>(this->type_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.IncrementalMeshConfigRequest.type_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> initial_resource_versions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&initial_resource_versions_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.IncrementalMeshConfigRequest.InitialResourceVersionsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.IncrementalMeshConfigRequest.InitialResourceVersionsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_nonce = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_nonce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_nonce().data(), static_cast<int>(this->response_nonce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.IncrementalMeshConfigRequest.response_nonce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status error_detail = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
  return false;
#undef DO_
}

void IncrementalMeshConfigRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.mcp.v1alpha1.SinkNode sink_node = 1;
  if (this->has_sink_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sink_node_, output);
  }

  // string type_url = 2;
  if (this->type_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_url().data(), static_cast<int>(this->type_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.IncrementalMeshConfigRequest.type_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type_url(), output);
  }

  // map<string, string> initial_resource_versions = 3;
  if (!this->initial_resource_versions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mcp.v1alpha1.IncrementalMeshConfigRequest.InitialResourceVersionsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mcp.v1alpha1.IncrementalMeshConfigRequest.InitialResourceVersionsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->initial_resource_versions().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->initial_resource_versions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->initial_resource_versions().begin();
          it != this->initial_resource_versions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(initial_resource_versions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->initial_resource_versions().begin();
          it != this->initial_resource_versions().end(); ++it) {
        entry.reset(initial_resource_versions_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string response_nonce = 4;
  if (this->response_nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_nonce().data(), static_cast<int>(this->response_nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.IncrementalMeshConfigRequest.response_nonce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->response_nonce(), output);
  }

  // .google.rpc.Status error_detail = 5;
  if (this->has_error_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->error_detail_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
}

::google::protobuf::uint8* IncrementalMeshConfigRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.mcp.v1alpha1.SinkNode sink_node = 1;
  if (this->has_sink_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->sink_node_, deterministic, target);
  }

  // string type_url = 2;
  if (this->type_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type_url().data(), static_cast<int>(this->type_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.IncrementalMeshConfigRequest.type_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type_url(), target);
  }

  // map<string, string> initial_resource_versions = 3;
  if (!this->initial_resource_versions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mcp.v1alpha1.IncrementalMeshConfigRequest.InitialResourceVersionsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mcp.v1alpha1.IncrementalMeshConfigRequest.InitialResourceVersionsEntry.value");
      }
    };

    if (deterministic &&
        this->initial_resource_versions().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->initial_resource_versions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->initial_resource_versions().begin();
          it != this->initial_resource_versions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(initial_resource_versions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->initial_resource_versions().begin();
          it != this->initial_resource_versions().end(); ++it) {
        entry.reset(initial_resource_versions_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string response_nonce = 4;
  if (this->response_nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_nonce().data(), static_cast<int>(this->response_nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.IncrementalMeshConfigRequest.response_nonce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->response_nonce(), target);
  }

  // .google.rpc.Status error_detail = 5;
  if (this->has_error_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->error_detail_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
  return target;
}

size_t IncrementalMeshConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> initial_resource_versions = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->initial_resource_versions_size());
  {
    ::google::protobuf::scoped_ptr<IncrementalMeshConfigRequest_InitialResourceVersionsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->initial_resource_versions().begin();
        it != this->initial_resource_versions().end(); ++it) {
      entry.reset(initial_resource_versions_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string type_url = 2;
  if (this->type_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type_url());
  }

  // string response_nonce = 4;
  if (this->response_nonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_nonce());
  }

  // .istio.mcp.v1alpha1.SinkNode sink_node = 1;
  if (this->has_sink_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sink_node_);
  }

  // .google.rpc.Status error_detail = 5;
  if (this->has_error_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_detail_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IncrementalMeshConfigRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IncrementalMeshConfigRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IncrementalMeshConfigRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
    MergeFrom(*source);
  }
}

void IncrementalMeshConfigRequest::MergeFrom(const IncrementalMeshConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  initial_resource_versions_.MergeFrom(from.initial_resource_versions_);
  if (from.type_url().size() > 0) {

    type_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_url_);
  }
  if (from.response_nonce().size() > 0) {

    response_nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_nonce_);
  }
  if (from.has_sink_node()) {
    mutable_sink_node()->::istio::mcp::v1alpha1::SinkNode::MergeFrom(from.sink_node());
  }
  if (from.has_error_detail()) {
    mutable_error_detail()->::google::rpc::Status::MergeFrom(from.error_detail());
  }
}

void IncrementalMeshConfigRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IncrementalMeshConfigRequest::CopyFrom(const IncrementalMeshConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mcp.v1alpha1.IncrementalMeshConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncrementalMeshConfigRequest::IsInitialized() const {
  return true;
}

void IncrementalMeshConfigRequest::Swap(IncrementalMeshConfigRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IncrementalMeshConfigRequest::InternalSwap(IncrementalMeshConfigRequest* other) {
  using std::swap;
  initial_resource_versions_.Swap(&other->initial_resource_versions_);
  type_url_.Swap(&other->type_url_);
  response_nonce_.Swap(&other->response_nonce_);
  swap(sink_node_, other->sink_node_);
  swap(error_detail_, other->error_detail_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IncrementalMeshConfigRequest::GetMetadata() const {
  protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IncrementalMeshConfigResponse::InitAsDefaultInstance() {
}
void IncrementalMeshConfigResponse::clear_resources() {
  resources_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IncrementalMeshConfigResponse::kSystemVersionInfoFieldNumber;
const int IncrementalMeshConfigResponse::kResourcesFieldNumber;
const int IncrementalMeshConfigResponse::kRemovedResourcesFieldNumber;
const int IncrementalMeshConfigResponse::kNonceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IncrementalMeshConfigResponse::IncrementalMeshConfigResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsIncrementalMeshConfigResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
}
IncrementalMeshConfigResponse::IncrementalMeshConfigResponse(const IncrementalMeshConfigResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      resources_(from.resources_),
      removed_resources_(from.removed_resources_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  system_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_version_info().size() > 0) {
    system_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_version_info_);
  }
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nonce().size() > 0) {
    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  // @@protoc_insertion_point(copy_constructor:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
}

void IncrementalMeshConfigResponse::SharedCtor() {
  system_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

IncrementalMeshConfigResponse::~IncrementalMeshConfigResponse() {
  // @@protoc_insertion_point(destructor:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
  SharedDtor();
}

void IncrementalMeshConfigResponse::SharedDtor() {
  system_version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IncrementalMeshConfigResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IncrementalMeshConfigResponse::descriptor() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IncrementalMeshConfigResponse& IncrementalMeshConfigResponse::default_instance() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsIncrementalMeshConfigResponse();
  return *internal_default_instance();
}

IncrementalMeshConfigResponse* IncrementalMeshConfigResponse::New(::google::protobuf::Arena* arena) const {
  IncrementalMeshConfigResponse* n = new IncrementalMeshConfigResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IncrementalMeshConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resources_.Clear();
  removed_resources_.Clear();
  system_version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool IncrementalMeshConfigResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string system_version_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_system_version_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->system_version_info().data(), static_cast<int>(this->system_version_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.IncrementalMeshConfigResponse.system_version_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.mcp.v1alpha1.Resource resources = 2 [(.gogoproto.nullable) = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string removed_resources = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_removed_resources()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->removed_resources(this->removed_resources_size() - 1).data(),
            static_cast<int>(this->removed_resources(this->removed_resources_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.IncrementalMeshConfigResponse.removed_resources"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nonce = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nonce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nonce().data(), static_cast<int>(this->nonce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.IncrementalMeshConfigResponse.nonce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
  return false;
#undef DO_
}

void IncrementalMeshConfigResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string system_version_info = 1;
  if (this->system_version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_version_info().data(), static_cast<int>(this->system_version_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.IncrementalMeshConfigResponse.system_version_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->system_version_info(), output);
  }

  // repeated .istio.mcp.v1alpha1.Resource resources = 2 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->resources(static_cast<int>(i)), output);
  }

  // repeated string removed_resources = 3;
  for (int i = 0, n = this->removed_resources_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->removed_resources(i).data(), static_cast<int>(this->removed_resources(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.IncrementalMeshConfigResponse.removed_resources");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->removed_resources(i), output);
  }

  // string nonce = 4;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), static_cast<int>(this->nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.IncrementalMeshConfigResponse.nonce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->nonce(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
}

::google::protobuf::uint8* IncrementalMeshConfigResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string system_version_info = 1;
  if (this->system_version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_version_info().data(), static_cast<int>(this->system_version_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.IncrementalMeshConfigResponse.system_version_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->system_version_info(), target);
  }

  // repeated .istio.mcp.v1alpha1.Resource resources = 2 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resources_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->resources(static_cast<int>(i)), deterministic, target);
  }

  // repeated string removed_resources = 3;
  for (int i = 0, n = this->removed_resources_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->removed_resources(i).data(), static_cast<int>(this->removed_resources(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.IncrementalMeshConfigResponse.removed_resources");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->removed_resources(i), target);
  }

  // string nonce = 4;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), static_cast<int>(this->nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.IncrementalMeshConfigResponse.nonce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->nonce(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
  return target;
}

size_t IncrementalMeshConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.mcp.v1alpha1.Resource resources = 2 [(.gogoproto.nullable) = false];
  {
    unsigned int count = static_cast<unsigned int>(this->resources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->resources(static_cast<int>(i)));
    }
  }

  // repeated string removed_resources = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->removed_resources_size());
  for (int i = 0, n = this->removed_resources_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->removed_resources(i));
  }

  // string system_version_info = 1;
  if (this->system_version_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system_version_info());
  }

  // string nonce = 4;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nonce());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IncrementalMeshConfigResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IncrementalMeshConfigResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IncrementalMeshConfigResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
    MergeFrom(*source);
  }
}

void IncrementalMeshConfigResponse::MergeFrom(const IncrementalMeshConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resources_.MergeFrom(from.resources_);
  removed_resources_.MergeFrom(from.removed_resources_);
  if (from.system_version_info().size() > 0) {

    system_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_version_info_);
  }
  if (from.nonce().size() > 0) {

    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
}

void IncrementalMeshConfigResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IncrementalMeshConfigResponse::CopyFrom(const IncrementalMeshConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mcp.v1alpha1.IncrementalMeshConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IncrementalMeshConfigResponse::IsInitialized() const {
  return true;
}

void IncrementalMeshConfigResponse::Swap(IncrementalMeshConfigResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IncrementalMeshConfigResponse::InternalSwap(IncrementalMeshConfigResponse* other) {
  using std::swap;
  resources_.InternalSwap(&other->resources_);
  removed_resources_.InternalSwap(&other->removed_resources_);
  system_version_info_.Swap(&other->system_version_info_);
  nonce_.Swap(&other->nonce_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IncrementalMeshConfigResponse::GetMetadata() const {
  protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

RequestResources_InitialResourceVersionsEntry_DoNotUse::RequestResources_InitialResourceVersionsEntry_DoNotUse() {}
RequestResources_InitialResourceVersionsEntry_DoNotUse::RequestResources_InitialResourceVersionsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RequestResources_InitialResourceVersionsEntry_DoNotUse::MergeFrom(const RequestResources_InitialResourceVersionsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RequestResources_InitialResourceVersionsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[7];
}
void RequestResources_InitialResourceVersionsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void RequestResources::InitAsDefaultInstance() {
  ::istio::mcp::v1alpha1::_RequestResources_default_instance_._instance.get_mutable()->sink_node_ = const_cast< ::istio::mcp::v1alpha1::SinkNode*>(
      ::istio::mcp::v1alpha1::SinkNode::internal_default_instance());
  ::istio::mcp::v1alpha1::_RequestResources_default_instance_._instance.get_mutable()->error_detail_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void RequestResources::clear_error_detail() {
  if (GetArenaNoVirtual() == NULL && error_detail_ != NULL) {
    delete error_detail_;
  }
  error_detail_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestResources::kSinkNodeFieldNumber;
const int RequestResources::kCollectionFieldNumber;
const int RequestResources::kInitialResourceVersionsFieldNumber;
const int RequestResources::kResponseNonceFieldNumber;
const int RequestResources::kErrorDetailFieldNumber;
const int RequestResources::kIncrementalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestResources::RequestResources()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsRequestResources();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mcp.v1alpha1.RequestResources)
}
RequestResources::RequestResources(const RequestResources& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  initial_resource_versions_.MergeFrom(from.initial_resource_versions_);
  collection_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.collection().size() > 0) {
    collection_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  response_nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.response_nonce().size() > 0) {
    response_nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_nonce_);
  }
  if (from.has_sink_node()) {
    sink_node_ = new ::istio::mcp::v1alpha1::SinkNode(*from.sink_node_);
  } else {
    sink_node_ = NULL;
  }
  if (from.has_error_detail()) {
    error_detail_ = new ::google::rpc::Status(*from.error_detail_);
  } else {
    error_detail_ = NULL;
  }
  incremental_ = from.incremental_;
  // @@protoc_insertion_point(copy_constructor:istio.mcp.v1alpha1.RequestResources)
}

void RequestResources::SharedCtor() {
  collection_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sink_node_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&incremental_) -
      reinterpret_cast<char*>(&sink_node_)) + sizeof(incremental_));
  _cached_size_ = 0;
}

RequestResources::~RequestResources() {
  // @@protoc_insertion_point(destructor:istio.mcp.v1alpha1.RequestResources)
  SharedDtor();
}

void RequestResources::SharedDtor() {
  collection_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete sink_node_;
  if (this != internal_default_instance()) delete error_detail_;
}

void RequestResources::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestResources::descriptor() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestResources& RequestResources::default_instance() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsRequestResources();
  return *internal_default_instance();
}

RequestResources* RequestResources::New(::google::protobuf::Arena* arena) const {
  RequestResources* n = new RequestResources;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RequestResources::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mcp.v1alpha1.RequestResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  initial_resource_versions_.Clear();
  collection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  response_nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && sink_node_ != NULL) {
    delete sink_node_;
  }
  sink_node_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_detail_ != NULL) {
    delete error_detail_;
  }
  error_detail_ = NULL;
  incremental_ = false;
  _internal_metadata_.Clear();
}

bool RequestResources::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mcp.v1alpha1.RequestResources)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .istio.mcp.v1alpha1.SinkNode sink_node = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sink_node()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string collection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection().data(), static_cast<int>(this->collection().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.RequestResources.collection"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> initial_resource_versions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          RequestResources_InitialResourceVersionsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RequestResources_InitialResourceVersionsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&initial_resource_versions_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.RequestResources.InitialResourceVersionsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.RequestResources.InitialResourceVersionsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string response_nonce = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_response_nonce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->response_nonce().data(), static_cast<int>(this->response_nonce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.RequestResources.response_nonce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status error_detail = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error_detail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool incremental = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &incremental_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mcp.v1alpha1.RequestResources)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mcp.v1alpha1.RequestResources)
  return false;
#undef DO_
}

void RequestResources::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mcp.v1alpha1.RequestResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.mcp.v1alpha1.SinkNode sink_node = 1;
  if (this->has_sink_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->sink_node_, output);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection().data(), static_cast<int>(this->collection().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.RequestResources.collection");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collection(), output);
  }

  // map<string, string> initial_resource_versions = 3;
  if (!this->initial_resource_versions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mcp.v1alpha1.RequestResources.InitialResourceVersionsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mcp.v1alpha1.RequestResources.InitialResourceVersionsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->initial_resource_versions().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->initial_resource_versions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->initial_resource_versions().begin();
          it != this->initial_resource_versions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RequestResources_InitialResourceVersionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(initial_resource_versions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<RequestResources_InitialResourceVersionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->initial_resource_versions().begin();
          it != this->initial_resource_versions().end(); ++it) {
        entry.reset(initial_resource_versions_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string response_nonce = 4;
  if (this->response_nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_nonce().data(), static_cast<int>(this->response_nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.RequestResources.response_nonce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->response_nonce(), output);
  }

  // .google.rpc.Status error_detail = 5;
  if (this->has_error_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->error_detail_, output);
  }

  // bool incremental = 6;
  if (this->incremental() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->incremental(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mcp.v1alpha1.RequestResources)
}

::google::protobuf::uint8* RequestResources::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mcp.v1alpha1.RequestResources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.mcp.v1alpha1.SinkNode sink_node = 1;
  if (this->has_sink_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->sink_node_, deterministic, target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection().data(), static_cast<int>(this->collection().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.RequestResources.collection");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collection(), target);
  }

  // map<string, string> initial_resource_versions = 3;
  if (!this->initial_resource_versions().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mcp.v1alpha1.RequestResources.InitialResourceVersionsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mcp.v1alpha1.RequestResources.InitialResourceVersionsEntry.value");
      }
    };

    if (deterministic &&
        this->initial_resource_versions().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->initial_resource_versions().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->initial_resource_versions().begin();
          it != this->initial_resource_versions().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<RequestResources_InitialResourceVersionsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(initial_resource_versions_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<RequestResources_InitialResourceVersionsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->initial_resource_versions().begin();
          it != this->initial_resource_versions().end(); ++it) {
        entry.reset(initial_resource_versions_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string response_nonce = 4;
  if (this->response_nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->response_nonce().data(), static_cast<int>(this->response_nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.RequestResources.response_nonce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->response_nonce(), target);
  }

  // .google.rpc.Status error_detail = 5;
  if (this->has_error_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *this->error_detail_, deterministic, target);
  }

  // bool incremental = 6;
  if (this->incremental() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->incremental(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mcp.v1alpha1.RequestResources)
  return target;
}

size_t RequestResources::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mcp.v1alpha1.RequestResources)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> initial_resource_versions = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->initial_resource_versions_size());
  {
    ::google::protobuf::scoped_ptr<RequestResources_InitialResourceVersionsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->initial_resource_versions().begin();
        it != this->initial_resource_versions().end(); ++it) {
      entry.reset(initial_resource_versions_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection());
  }

  // string response_nonce = 4;
  if (this->response_nonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->response_nonce());
  }

  // .istio.mcp.v1alpha1.SinkNode sink_node = 1;
  if (this->has_sink_node()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sink_node_);
  }

  // .google.rpc.Status error_detail = 5;
  if (this->has_error_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->error_detail_);
  }

  // bool incremental = 6;
  if (this->incremental() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestResources::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mcp.v1alpha1.RequestResources)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestResources* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestResources>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mcp.v1alpha1.RequestResources)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mcp.v1alpha1.RequestResources)
    MergeFrom(*source);
  }
}

void RequestResources::MergeFrom(const RequestResources& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mcp.v1alpha1.RequestResources)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  initial_resource_versions_.MergeFrom(from.initial_resource_versions_);
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.response_nonce().size() > 0) {

    response_nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.response_nonce_);
  }
  if (from.has_sink_node()) {
    mutable_sink_node()->::istio::mcp::v1alpha1::SinkNode::MergeFrom(from.sink_node());
  }
  if (from.has_error_detail()) {
    mutable_error_detail()->::google::rpc::Status::MergeFrom(from.error_detail());
  }
  if (from.incremental() != 0) {
    set_incremental(from.incremental());
  }
}

void RequestResources::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mcp.v1alpha1.RequestResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestResources::CopyFrom(const RequestResources& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mcp.v1alpha1.RequestResources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestResources::IsInitialized() const {
  return true;
}

void RequestResources::Swap(RequestResources* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestResources::InternalSwap(RequestResources* other) {
  using std::swap;
  initial_resource_versions_.Swap(&other->initial_resource_versions_);
  collection_.Swap(&other->collection_);
  response_nonce_.Swap(&other->response_nonce_);
  swap(sink_node_, other->sink_node_);
  swap(error_detail_, other->error_detail_);
  swap(incremental_, other->incremental_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RequestResources::GetMetadata() const {
  protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Resources::InitAsDefaultInstance() {
}
void Resources::clear_resources() {
  resources_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Resources::kSystemVersionInfoFieldNumber;
const int Resources::kCollectionFieldNumber;
const int Resources::kResourcesFieldNumber;
const int Resources::kRemovedResourcesFieldNumber;
const int Resources::kNonceFieldNumber;
const int Resources::kIncrementalFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Resources::Resources()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsResources();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mcp.v1alpha1.Resources)
}
Resources::Resources(const Resources& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      resources_(from.resources_),
      removed_resources_(from.removed_resources_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  system_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.system_version_info().size() > 0) {
    system_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_version_info_);
  }
  collection_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.collection().size() > 0) {
    collection_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nonce().size() > 0) {
    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  incremental_ = from.incremental_;
  // @@protoc_insertion_point(copy_constructor:istio.mcp.v1alpha1.Resources)
}

void Resources::SharedCtor() {
  system_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collection_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  incremental_ = false;
  _cached_size_ = 0;
}

Resources::~Resources() {
  // @@protoc_insertion_point(destructor:istio.mcp.v1alpha1.Resources)
  SharedDtor();
}

void Resources::SharedDtor() {
  system_version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collection_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Resources::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Resources::descriptor() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Resources& Resources::default_instance() {
  ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::InitDefaultsResources();
  return *internal_default_instance();
}

Resources* Resources::New(::google::protobuf::Arena* arena) const {
  Resources* n = new Resources;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Resources::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mcp.v1alpha1.Resources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resources_.Clear();
  removed_resources_.Clear();
  system_version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  collection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nonce_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  incremental_ = false;
  _internal_metadata_.Clear();
}

bool Resources::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mcp.v1alpha1.Resources)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string system_version_info = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_system_version_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->system_version_info().data(), static_cast<int>(this->system_version_info().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.Resources.system_version_info"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string collection = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_collection()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->collection().data(), static_cast<int>(this->collection().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.Resources.collection"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.mcp.v1alpha1.Resource resources = 3 [(.gogoproto.nullable) = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string removed_resources = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_removed_resources()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->removed_resources(this->removed_resources_size() - 1).data(),
            static_cast<int>(this->removed_resources(this->removed_resources_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.Resources.removed_resources"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nonce = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nonce()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nonce().data(), static_cast<int>(this->nonce().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mcp.v1alpha1.Resources.nonce"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool incremental = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &incremental_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mcp.v1alpha1.Resources)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mcp.v1alpha1.Resources)
  return false;
#undef DO_
}

void Resources::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mcp.v1alpha1.Resources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string system_version_info = 1;
  if (this->system_version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_version_info().data(), static_cast<int>(this->system_version_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.Resources.system_version_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->system_version_info(), output);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection().data(), static_cast<int>(this->collection().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.Resources.collection");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->collection(), output);
  }

  // repeated .istio.mcp.v1alpha1.Resource resources = 3 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->resources(static_cast<int>(i)), output);
  }

  // repeated string removed_resources = 4;
  for (int i = 0, n = this->removed_resources_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->removed_resources(i).data(), static_cast<int>(this->removed_resources(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.Resources.removed_resources");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->removed_resources(i), output);
  }

  // string nonce = 5;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), static_cast<int>(this->nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.Resources.nonce");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->nonce(), output);
  }

  // bool incremental = 6;
  if (this->incremental() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->incremental(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mcp.v1alpha1.Resources)
}

::google::protobuf::uint8* Resources::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mcp.v1alpha1.Resources)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string system_version_info = 1;
  if (this->system_version_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->system_version_info().data(), static_cast<int>(this->system_version_info().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.Resources.system_version_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->system_version_info(), target);
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->collection().data(), static_cast<int>(this->collection().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.Resources.collection");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->collection(), target);
  }

  // repeated .istio.mcp.v1alpha1.Resource resources = 3 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resources_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->resources(static_cast<int>(i)), deterministic, target);
  }

  // repeated string removed_resources = 4;
  for (int i = 0, n = this->removed_resources_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->removed_resources(i).data(), static_cast<int>(this->removed_resources(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.Resources.removed_resources");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->removed_resources(i), target);
  }

  // string nonce = 5;
  if (this->nonce().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nonce().data(), static_cast<int>(this->nonce().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mcp.v1alpha1.Resources.nonce");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->nonce(), target);
  }

  // bool incremental = 6;
  if (this->incremental() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->incremental(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mcp.v1alpha1.Resources)
  return target;
}

size_t Resources::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mcp.v1alpha1.Resources)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.mcp.v1alpha1.Resource resources = 3 [(.gogoproto.nullable) = false];
  {
    unsigned int count = static_cast<unsigned int>(this->resources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->resources(static_cast<int>(i)));
    }
  }

  // repeated string removed_resources = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->removed_resources_size());
  for (int i = 0, n = this->removed_resources_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->removed_resources(i));
  }

  // string system_version_info = 1;
  if (this->system_version_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->system_version_info());
  }

  // string collection = 2;
  if (this->collection().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->collection());
  }

  // string nonce = 5;
  if (this->nonce().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nonce());
  }

  // bool incremental = 6;
  if (this->incremental() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Resources::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mcp.v1alpha1.Resources)
  GOOGLE_DCHECK_NE(&from, this);
  const Resources* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Resources>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mcp.v1alpha1.Resources)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mcp.v1alpha1.Resources)
    MergeFrom(*source);
  }
}

void Resources::MergeFrom(const Resources& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mcp.v1alpha1.Resources)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resources_.MergeFrom(from.resources_);
  removed_resources_.MergeFrom(from.removed_resources_);
  if (from.system_version_info().size() > 0) {

    system_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_version_info_);
  }
  if (from.collection().size() > 0) {

    collection_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.collection_);
  }
  if (from.nonce().size() > 0) {

    nonce_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nonce_);
  }
  if (from.incremental() != 0) {
    set_incremental(from.incremental());
  }
}

void Resources::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mcp.v1alpha1.Resources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Resources::CopyFrom(const Resources& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mcp.v1alpha1.Resources)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Resources::IsInitialized() const {
  return true;
}

void Resources::Swap(Resources* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Resources::InternalSwap(Resources* other) {
  using std::swap;
  resources_.InternalSwap(&other->resources_);
  removed_resources_.InternalSwap(&other->removed_resources_);
  system_version_info_.Swap(&other->system_version_info_);
  collection_.Swap(&other->collection_);
  nonce_.Swap(&other->nonce_);
  swap(incremental_, other->incremental_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Resources::GetMetadata() const {
  protobuf_mcp_2fv1alpha1_2fmcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2fv1alpha1_2fmcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1alpha1
}  // namespace mcp
}  // namespace istio

// @@protoc_insertion_point(global_scope)
