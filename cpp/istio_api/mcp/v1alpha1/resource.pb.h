// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mcp/v1alpha1/resource.proto

#ifndef PROTOBUF_mcp_2fv1alpha1_2fresource_2eproto__INCLUDED
#define PROTOBUF_mcp_2fv1alpha1_2fresource_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include "gogoproto/gogo.pb.h"
#include "mcp/v1alpha1/metadata.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_mcp_2fv1alpha1_2fresource_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsResourceImpl();
void InitDefaultsResource();
inline void InitDefaults() {
  InitDefaultsResource();
}
}  // namespace protobuf_mcp_2fv1alpha1_2fresource_2eproto
namespace istio {
namespace mcp {
namespace v1alpha1 {
class Resource;
class ResourceDefaultTypeInternal;
extern ResourceDefaultTypeInternal _Resource_default_instance_;
}  // namespace v1alpha1
}  // namespace mcp
}  // namespace istio
namespace istio {
namespace mcp {
namespace v1alpha1 {

// ===================================================================

class Resource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mcp.v1alpha1.Resource) */ {
 public:
  Resource();
  virtual ~Resource();

  Resource(const Resource& from);

  inline Resource& operator=(const Resource& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Resource(Resource&& from) noexcept
    : Resource() {
    *this = ::std::move(from);
  }

  inline Resource& operator=(Resource&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Resource& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Resource* internal_default_instance() {
    return reinterpret_cast<const Resource*>(
               &_Resource_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Resource* other);
  friend void swap(Resource& a, Resource& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Resource* New() const PROTOBUF_FINAL { return New(NULL); }

  Resource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Resource& from);
  void MergeFrom(const Resource& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Resource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .istio.mcp.v1alpha1.Metadata metadata = 1;
  bool has_metadata() const;
  void clear_metadata();
  static const int kMetadataFieldNumber = 1;
  const ::istio::mcp::v1alpha1::Metadata& metadata() const;
  ::istio::mcp::v1alpha1::Metadata* release_metadata();
  ::istio::mcp::v1alpha1::Metadata* mutable_metadata();
  void set_allocated_metadata(::istio::mcp::v1alpha1::Metadata* metadata);

  // .google.protobuf.Any body = 2;
  bool has_body() const;
  void clear_body();
  static const int kBodyFieldNumber = 2;
  const ::google::protobuf::Any& body() const;
  ::google::protobuf::Any* release_body();
  ::google::protobuf::Any* mutable_body();
  void set_allocated_body(::google::protobuf::Any* body);

  // @@protoc_insertion_point(class_scope:istio.mcp.v1alpha1.Resource)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::istio::mcp::v1alpha1::Metadata* metadata_;
  ::google::protobuf::Any* body_;
  mutable int _cached_size_;
  friend struct ::protobuf_mcp_2fv1alpha1_2fresource_2eproto::TableStruct;
  friend void ::protobuf_mcp_2fv1alpha1_2fresource_2eproto::InitDefaultsResourceImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Resource

// .istio.mcp.v1alpha1.Metadata metadata = 1;
inline bool Resource::has_metadata() const {
  return this != internal_default_instance() && metadata_ != NULL;
}
inline const ::istio::mcp::v1alpha1::Metadata& Resource::metadata() const {
  const ::istio::mcp::v1alpha1::Metadata* p = metadata_;
  // @@protoc_insertion_point(field_get:istio.mcp.v1alpha1.Resource.metadata)
  return p != NULL ? *p : *reinterpret_cast<const ::istio::mcp::v1alpha1::Metadata*>(
      &::istio::mcp::v1alpha1::_Metadata_default_instance_);
}
inline ::istio::mcp::v1alpha1::Metadata* Resource::release_metadata() {
  // @@protoc_insertion_point(field_release:istio.mcp.v1alpha1.Resource.metadata)
  
  ::istio::mcp::v1alpha1::Metadata* temp = metadata_;
  metadata_ = NULL;
  return temp;
}
inline ::istio::mcp::v1alpha1::Metadata* Resource::mutable_metadata() {
  
  if (metadata_ == NULL) {
    metadata_ = new ::istio::mcp::v1alpha1::Metadata;
  }
  // @@protoc_insertion_point(field_mutable:istio.mcp.v1alpha1.Resource.metadata)
  return metadata_;
}
inline void Resource::set_allocated_metadata(::istio::mcp::v1alpha1::Metadata* metadata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(metadata_);
  }
  if (metadata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      metadata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, metadata, submessage_arena);
    }
    
  } else {
    
  }
  metadata_ = metadata;
  // @@protoc_insertion_point(field_set_allocated:istio.mcp.v1alpha1.Resource.metadata)
}

// .google.protobuf.Any body = 2;
inline bool Resource::has_body() const {
  return this != internal_default_instance() && body_ != NULL;
}
inline const ::google::protobuf::Any& Resource::body() const {
  const ::google::protobuf::Any* p = body_;
  // @@protoc_insertion_point(field_get:istio.mcp.v1alpha1.Resource.body)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* Resource::release_body() {
  // @@protoc_insertion_point(field_release:istio.mcp.v1alpha1.Resource.body)
  
  ::google::protobuf::Any* temp = body_;
  body_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* Resource::mutable_body() {
  
  if (body_ == NULL) {
    body_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:istio.mcp.v1alpha1.Resource.body)
  return body_;
}
inline void Resource::set_allocated_body(::google::protobuf::Any* body) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(body_);
  }
  if (body) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      body = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, body, submessage_arena);
    }
    
  } else {
    
  }
  body_ = body;
  // @@protoc_insertion_point(field_set_allocated:istio.mcp.v1alpha1.Resource.body)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1alpha1
}  // namespace mcp
}  // namespace istio

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mcp_2fv1alpha1_2fresource_2eproto__INCLUDED
