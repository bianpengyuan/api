// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: envoy/config/filter/http/jwt_auth/v2alpha1/config.proto

#include "envoy/config/filter/http/jwt_auth/v2alpha1/config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace istio {
namespace envoy {
namespace config {
namespace filter {
namespace http {
namespace jwt_auth {
namespace v2alpha1 {
class HttpUriDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HttpUri>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr cluster_;
} _HttpUri_default_instance_;
class DataSourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DataSource>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::internal::ArenaStringPtr inline_bytes_;
  ::google::protobuf::internal::ArenaStringPtr inline_string_;
} _DataSource_default_instance_;
class JwtRuleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JwtRule>
      _instance;
  const ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::RemoteJwks* remote_jwks_;
  const ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSource* local_jwks_;
} _JwtRule_default_instance_;
class RemoteJwksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RemoteJwks>
      _instance;
} _RemoteJwks_default_instance_;
class JwtHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JwtHeader>
      _instance;
} _JwtHeader_default_instance_;
class JwtAuthenticationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JwtAuthentication>
      _instance;
} _JwtAuthentication_default_instance_;
}  // namespace v2alpha1
}  // namespace jwt_auth
}  // namespace http
}  // namespace filter
}  // namespace config
}  // namespace envoy
}  // namespace istio
namespace protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto {
void InitDefaultsHttpUriImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  {
    void* ptr = &::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_HttpUri_default_instance_;
    new (ptr) ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::HttpUri();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::HttpUri::InitAsDefaultInstance();
}

void InitDefaultsHttpUri() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsHttpUriImpl);
}

void InitDefaultsDataSourceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_DataSource_default_instance_;
    new (ptr) ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSource::InitAsDefaultInstance();
}

void InitDefaultsDataSource() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsDataSourceImpl);
}

void InitDefaultsJwtRuleImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsRemoteJwks();
  protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsDataSource();
  protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsJwtHeader();
  {
    void* ptr = &::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_JwtRule_default_instance_;
    new (ptr) ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRule();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRule::InitAsDefaultInstance();
}

void InitDefaultsJwtRule() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJwtRuleImpl);
}

void InitDefaultsRemoteJwksImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsHttpUri();
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  {
    void* ptr = &::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_RemoteJwks_default_instance_;
    new (ptr) ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::RemoteJwks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::RemoteJwks::InitAsDefaultInstance();
}

void InitDefaultsRemoteJwks() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRemoteJwksImpl);
}

void InitDefaultsJwtHeaderImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_JwtHeader_default_instance_;
    new (ptr) ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtHeader::InitAsDefaultInstance();
}

void InitDefaultsJwtHeader() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJwtHeaderImpl);
}

void InitDefaultsJwtAuthenticationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsJwtRule();
  {
    void* ptr = &::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_JwtAuthentication_default_instance_;
    new (ptr) ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtAuthentication();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtAuthentication::InitAsDefaultInstance();
}

void InitDefaultsJwtAuthentication() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsJwtAuthenticationImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::HttpUri, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::HttpUri, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::HttpUri, uri_),
  offsetof(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::HttpUriDefaultTypeInternal, cluster_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::HttpUri, timeout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::HttpUri, http_upstream_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSource, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSource, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSourceDefaultTypeInternal, filename_),
  offsetof(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSourceDefaultTypeInternal, inline_bytes_),
  offsetof(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSourceDefaultTypeInternal, inline_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSource, specifier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRule, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRule, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRule, issuer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRule, audiences_),
  offsetof(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRuleDefaultTypeInternal, remote_jwks_),
  offsetof(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRuleDefaultTypeInternal, local_jwks_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRule, forward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRule, from_headers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRule, from_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRule, forward_payload_header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRule, jwks_source_specifier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::RemoteJwks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::RemoteJwks, http_uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::RemoteJwks, cache_duration_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtHeader, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtHeader, value_prefix_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtAuthentication, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtAuthentication, rules_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtAuthentication, allow_missing_or_failed_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::HttpUri)},
  { 9, -1, sizeof(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSource)},
  { 18, -1, sizeof(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtRule)},
  { 32, -1, sizeof(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::RemoteJwks)},
  { 39, -1, sizeof(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtHeader)},
  { 46, -1, sizeof(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::JwtAuthentication)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_HttpUri_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_DataSource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_JwtRule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_RemoteJwks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_JwtHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_JwtAuthentication_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "envoy/config/filter/http/jwt_auth/v2alpha1/config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n7envoy/config/filter/http/jwt_auth/v2al"
      "pha1/config.proto\0220istio.envoy.config.fi"
      "lter.http.jwt_auth.v2alpha1\032\036google/prot"
      "obuf/duration.proto\"k\n\007HttpUri\022\013\n\003uri\030\001 "
      "\001(\t\022\021\n\007cluster\030\002 \001(\tH\000\022*\n\007timeout\030\003 \001(\0132"
      "\031.google.protobuf.DurationB\024\n\022http_upstr"
      "eam_type\"^\n\nDataSource\022\022\n\010filename\030\001 \001(\t"
      "H\000\022\026\n\014inline_bytes\030\002 \001(\014H\000\022\027\n\rinline_str"
      "ing\030\003 \001(\tH\000B\013\n\tspecifier\"\207\003\n\007JwtRule\022\016\n\006"
      "issuer\030\001 \001(\t\022\021\n\taudiences\030\002 \003(\t\022S\n\013remot"
      "e_jwks\030\003 \001(\0132<.istio.envoy.config.filter"
      ".http.jwt_auth.v2alpha1.RemoteJwksH\000\022R\n\n"
      "local_jwks\030\004 \001(\0132<.istio.envoy.config.fi"
      "lter.http.jwt_auth.v2alpha1.DataSourceH\000"
      "\022\017\n\007forward\030\005 \001(\010\022Q\n\014from_headers\030\006 \003(\0132"
      ";.istio.envoy.config.filter.http.jwt_aut"
      "h.v2alpha1.JwtHeader\022\023\n\013from_params\030\007 \003("
      "\t\022\036\n\026forward_payload_header\030\010 \001(\tB\027\n\025jwk"
      "s_source_specifier\"\214\001\n\nRemoteJwks\022K\n\010htt"
      "p_uri\030\001 \001(\01329.istio.envoy.config.filter."
      "http.jwt_auth.v2alpha1.HttpUri\0221\n\016cache_"
      "duration\030\002 \001(\0132\031.google.protobuf.Duratio"
      "n\"/\n\tJwtHeader\022\014\n\004name\030\001 \001(\t\022\024\n\014value_pr"
      "efix\030\002 \001(\t\"~\n\021JwtAuthentication\022H\n\005rules"
      "\030\001 \003(\01329.istio.envoy.config.filter.http."
      "jwt_auth.v2alpha1.JwtRule\022\037\n\027allow_missi"
      "ng_or_failed\030\002 \001(\010B9Z7istio.io/api/envoy"
      "/config/filter/http/jwt_auth/v2alpha1b\006p"
      "roto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1125);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "envoy/config/filter/http/jwt_auth/v2alpha1/config.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto
namespace istio {
namespace envoy {
namespace config {
namespace filter {
namespace http {
namespace jwt_auth {
namespace v2alpha1 {

// ===================================================================

void HttpUri::InitAsDefaultInstance() {
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_HttpUri_default_instance_.cluster_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_HttpUri_default_instance_._instance.get_mutable()->timeout_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void HttpUri::clear_timeout() {
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) {
    delete timeout_;
  }
  timeout_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HttpUri::kUriFieldNumber;
const int HttpUri::kClusterFieldNumber;
const int HttpUri::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HttpUri::HttpUri()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsHttpUri();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
}
HttpUri::HttpUri(const HttpUri& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.has_timeout()) {
    timeout_ = new ::google::protobuf::Duration(*from.timeout_);
  } else {
    timeout_ = NULL;
  }
  clear_has_http_upstream_type();
  switch (from.http_upstream_type_case()) {
    case kCluster: {
      set_cluster(from.cluster());
      break;
    }
    case HTTP_UPSTREAM_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
}

void HttpUri::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  timeout_ = NULL;
  clear_has_http_upstream_type();
  _cached_size_ = 0;
}

HttpUri::~HttpUri() {
  // @@protoc_insertion_point(destructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  SharedDtor();
}

void HttpUri::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete timeout_;
  if (has_http_upstream_type()) {
    clear_http_upstream_type();
  }
}

void HttpUri::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HttpUri::descriptor() {
  ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HttpUri& HttpUri::default_instance() {
  ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsHttpUri();
  return *internal_default_instance();
}

HttpUri* HttpUri::New(::google::protobuf::Arena* arena) const {
  HttpUri* n = new HttpUri;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HttpUri::clear_http_upstream_type() {
// @@protoc_insertion_point(one_of_clear_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  switch (http_upstream_type_case()) {
    case kCluster: {
      http_upstream_type_.cluster_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case HTTP_UPSTREAM_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = HTTP_UPSTREAM_TYPE_NOT_SET;
}


void HttpUri::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && timeout_ != NULL) {
    delete timeout_;
  }
  timeout_ = NULL;
  clear_http_upstream_type();
  _internal_metadata_.Clear();
}

bool HttpUri::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cluster = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cluster()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cluster().data(), static_cast<int>(this->cluster().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri.cluster"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration timeout = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timeout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  return false;
#undef DO_
}

void HttpUri::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  // string cluster = 2;
  if (has_cluster()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri.cluster");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->cluster(), output);
  }

  // .google.protobuf.Duration timeout = 3;
  if (this->has_timeout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->timeout_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
}

::google::protobuf::uint8* HttpUri::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  // string cluster = 2;
  if (has_cluster()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cluster().data(), static_cast<int>(this->cluster().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri.cluster");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->cluster(), target);
  }

  // .google.protobuf.Duration timeout = 3;
  if (this->has_timeout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->timeout_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  return target;
}

size_t HttpUri::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // .google.protobuf.Duration timeout = 3;
  if (this->has_timeout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->timeout_);
  }

  switch (http_upstream_type_case()) {
    // string cluster = 2;
    case kCluster: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->cluster());
      break;
    }
    case HTTP_UPSTREAM_TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HttpUri::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  GOOGLE_DCHECK_NE(&from, this);
  const HttpUri* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HttpUri>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
    MergeFrom(*source);
  }
}

void HttpUri::MergeFrom(const HttpUri& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.has_timeout()) {
    mutable_timeout()->::google::protobuf::Duration::MergeFrom(from.timeout());
  }
  switch (from.http_upstream_type_case()) {
    case kCluster: {
      set_cluster(from.cluster());
      break;
    }
    case HTTP_UPSTREAM_TYPE_NOT_SET: {
      break;
    }
  }
}

void HttpUri::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HttpUri::CopyFrom(const HttpUri& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HttpUri::IsInitialized() const {
  return true;
}

void HttpUri::Swap(HttpUri* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HttpUri::InternalSwap(HttpUri* other) {
  using std::swap;
  uri_.Swap(&other->uri_);
  swap(timeout_, other->timeout_);
  swap(http_upstream_type_, other->http_upstream_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HttpUri::GetMetadata() const {
  protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DataSource::InitAsDefaultInstance() {
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_DataSource_default_instance_.filename_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_DataSource_default_instance_.inline_bytes_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_DataSource_default_instance_.inline_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DataSource::kFilenameFieldNumber;
const int DataSource::kInlineBytesFieldNumber;
const int DataSource::kInlineStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DataSource::DataSource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsDataSource();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
}
DataSource::DataSource(const DataSource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_specifier();
  switch (from.specifier_case()) {
    case kFilename: {
      set_filename(from.filename());
      break;
    }
    case kInlineBytes: {
      set_inline_bytes(from.inline_bytes());
      break;
    }
    case kInlineString: {
      set_inline_string(from.inline_string());
      break;
    }
    case SPECIFIER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
}

void DataSource::SharedCtor() {
  clear_has_specifier();
  _cached_size_ = 0;
}

DataSource::~DataSource() {
  // @@protoc_insertion_point(destructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  SharedDtor();
}

void DataSource::SharedDtor() {
  if (has_specifier()) {
    clear_specifier();
  }
}

void DataSource::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DataSource::descriptor() {
  ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DataSource& DataSource::default_instance() {
  ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsDataSource();
  return *internal_default_instance();
}

DataSource* DataSource::New(::google::protobuf::Arena* arena) const {
  DataSource* n = new DataSource;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DataSource::clear_specifier() {
// @@protoc_insertion_point(one_of_clear_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  switch (specifier_case()) {
    case kFilename: {
      specifier_.filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kInlineBytes: {
      specifier_.inline_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kInlineString: {
      specifier_.inline_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case SPECIFIER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = SPECIFIER_NOT_SET;
}


void DataSource::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_specifier();
  _internal_metadata_.Clear();
}

bool DataSource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource.filename"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes inline_bytes = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_inline_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string inline_string = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inline_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->inline_string().data(), static_cast<int>(this->inline_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource.inline_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  return false;
#undef DO_
}

void DataSource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filename = 1;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // bytes inline_bytes = 2;
  if (has_inline_bytes()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->inline_bytes(), output);
  }

  // string inline_string = 3;
  if (has_inline_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inline_string().data(), static_cast<int>(this->inline_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource.inline_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->inline_string(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
}

::google::protobuf::uint8* DataSource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filename = 1;
  if (has_filename()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // bytes inline_bytes = 2;
  if (has_inline_bytes()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->inline_bytes(), target);
  }

  // string inline_string = 3;
  if (has_inline_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->inline_string().data(), static_cast<int>(this->inline_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource.inline_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->inline_string(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  return target;
}

size_t DataSource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (specifier_case()) {
    // string filename = 1;
    case kFilename: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
      break;
    }
    // bytes inline_bytes = 2;
    case kInlineBytes: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->inline_bytes());
      break;
    }
    // string inline_string = 3;
    case kInlineString: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inline_string());
      break;
    }
    case SPECIFIER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DataSource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  GOOGLE_DCHECK_NE(&from, this);
  const DataSource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DataSource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
    MergeFrom(*source);
  }
}

void DataSource::MergeFrom(const DataSource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.specifier_case()) {
    case kFilename: {
      set_filename(from.filename());
      break;
    }
    case kInlineBytes: {
      set_inline_bytes(from.inline_bytes());
      break;
    }
    case kInlineString: {
      set_inline_string(from.inline_string());
      break;
    }
    case SPECIFIER_NOT_SET: {
      break;
    }
  }
}

void DataSource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataSource::CopyFrom(const DataSource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataSource::IsInitialized() const {
  return true;
}

void DataSource::Swap(DataSource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DataSource::InternalSwap(DataSource* other) {
  using std::swap;
  swap(specifier_, other->specifier_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DataSource::GetMetadata() const {
  protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JwtRule::InitAsDefaultInstance() {
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_JwtRule_default_instance_.remote_jwks_ = const_cast< ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::RemoteJwks*>(
      ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::RemoteJwks::internal_default_instance());
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_JwtRule_default_instance_.local_jwks_ = const_cast< ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSource*>(
      ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSource::internal_default_instance());
}
void JwtRule::set_allocated_remote_jwks(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::RemoteJwks* remote_jwks) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_jwks_source_specifier();
  if (remote_jwks) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      remote_jwks = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, remote_jwks, submessage_arena);
    }
    set_has_remote_jwks();
    jwks_source_specifier_.remote_jwks_ = remote_jwks;
  }
  // @@protoc_insertion_point(field_set_allocated:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.remote_jwks)
}
void JwtRule::set_allocated_local_jwks(::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSource* local_jwks) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_jwks_source_specifier();
  if (local_jwks) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      local_jwks = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, local_jwks, submessage_arena);
    }
    set_has_local_jwks();
    jwks_source_specifier_.local_jwks_ = local_jwks;
  }
  // @@protoc_insertion_point(field_set_allocated:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.local_jwks)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JwtRule::kIssuerFieldNumber;
const int JwtRule::kAudiencesFieldNumber;
const int JwtRule::kRemoteJwksFieldNumber;
const int JwtRule::kLocalJwksFieldNumber;
const int JwtRule::kForwardFieldNumber;
const int JwtRule::kFromHeadersFieldNumber;
const int JwtRule::kFromParamsFieldNumber;
const int JwtRule::kForwardPayloadHeaderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JwtRule::JwtRule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsJwtRule();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
}
JwtRule::JwtRule(const JwtRule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      audiences_(from.audiences_),
      from_headers_(from.from_headers_),
      from_params_(from.from_params_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.issuer().size() > 0) {
    issuer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuer_);
  }
  forward_payload_header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.forward_payload_header().size() > 0) {
    forward_payload_header_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.forward_payload_header_);
  }
  forward_ = from.forward_;
  clear_has_jwks_source_specifier();
  switch (from.jwks_source_specifier_case()) {
    case kRemoteJwks: {
      mutable_remote_jwks()->::istio::envoy::config::filter::http::jwt_auth::v2alpha1::RemoteJwks::MergeFrom(from.remote_jwks());
      break;
    }
    case kLocalJwks: {
      mutable_local_jwks()->::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSource::MergeFrom(from.local_jwks());
      break;
    }
    case JWKS_SOURCE_SPECIFIER_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
}

void JwtRule::SharedCtor() {
  issuer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forward_payload_header_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forward_ = false;
  clear_has_jwks_source_specifier();
  _cached_size_ = 0;
}

JwtRule::~JwtRule() {
  // @@protoc_insertion_point(destructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  SharedDtor();
}

void JwtRule::SharedDtor() {
  issuer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forward_payload_header_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_jwks_source_specifier()) {
    clear_jwks_source_specifier();
  }
}

void JwtRule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JwtRule::descriptor() {
  ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JwtRule& JwtRule::default_instance() {
  ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsJwtRule();
  return *internal_default_instance();
}

JwtRule* JwtRule::New(::google::protobuf::Arena* arena) const {
  JwtRule* n = new JwtRule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JwtRule::clear_jwks_source_specifier() {
// @@protoc_insertion_point(one_of_clear_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  switch (jwks_source_specifier_case()) {
    case kRemoteJwks: {
      delete jwks_source_specifier_.remote_jwks_;
      break;
    }
    case kLocalJwks: {
      delete jwks_source_specifier_.local_jwks_;
      break;
    }
    case JWKS_SOURCE_SPECIFIER_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = JWKS_SOURCE_SPECIFIER_NOT_SET;
}


void JwtRule::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audiences_.Clear();
  from_headers_.Clear();
  from_params_.Clear();
  issuer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forward_payload_header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  forward_ = false;
  clear_jwks_source_specifier();
  _internal_metadata_.Clear();
}

bool JwtRule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string issuer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issuer()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->issuer().data(), static_cast<int>(this->issuer().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.issuer"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string audiences = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_audiences()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audiences(this->audiences_size() - 1).data(),
            static_cast<int>(this->audiences(this->audiences_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.audiences"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks remote_jwks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_remote_jwks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource local_jwks = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_local_jwks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool forward = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &forward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader from_headers = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_from_headers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string from_params = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_from_params()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_params(this->from_params_size() - 1).data(),
            static_cast<int>(this->from_params(this->from_params_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.from_params"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string forward_payload_header = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_forward_payload_header()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->forward_payload_header().data(), static_cast<int>(this->forward_payload_header().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.forward_payload_header"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  return false;
#undef DO_
}

void JwtRule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.issuer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->issuer(), output);
  }

  // repeated string audiences = 2;
  for (int i = 0, n = this->audiences_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audiences(i).data(), static_cast<int>(this->audiences(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.audiences");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->audiences(i), output);
  }

  // .istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks remote_jwks = 3;
  if (has_remote_jwks()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *jwks_source_specifier_.remote_jwks_, output);
  }

  // .istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource local_jwks = 4;
  if (has_local_jwks()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *jwks_source_specifier_.local_jwks_, output);
  }

  // bool forward = 5;
  if (this->forward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->forward(), output);
  }

  // repeated .istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader from_headers = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->from_headers_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->from_headers(static_cast<int>(i)), output);
  }

  // repeated string from_params = 7;
  for (int i = 0, n = this->from_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_params(i).data(), static_cast<int>(this->from_params(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.from_params");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->from_params(i), output);
  }

  // string forward_payload_header = 8;
  if (this->forward_payload_header().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->forward_payload_header().data(), static_cast<int>(this->forward_payload_header().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.forward_payload_header");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->forward_payload_header(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
}

::google::protobuf::uint8* JwtRule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issuer().data(), static_cast<int>(this->issuer().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.issuer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->issuer(), target);
  }

  // repeated string audiences = 2;
  for (int i = 0, n = this->audiences_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audiences(i).data(), static_cast<int>(this->audiences(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.audiences");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->audiences(i), target);
  }

  // .istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks remote_jwks = 3;
  if (has_remote_jwks()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *jwks_source_specifier_.remote_jwks_, deterministic, target);
  }

  // .istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource local_jwks = 4;
  if (has_local_jwks()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *jwks_source_specifier_.local_jwks_, deterministic, target);
  }

  // bool forward = 5;
  if (this->forward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->forward(), target);
  }

  // repeated .istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader from_headers = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->from_headers_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->from_headers(static_cast<int>(i)), deterministic, target);
  }

  // repeated string from_params = 7;
  for (int i = 0, n = this->from_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_params(i).data(), static_cast<int>(this->from_params(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.from_params");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->from_params(i), target);
  }

  // string forward_payload_header = 8;
  if (this->forward_payload_header().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->forward_payload_header().data(), static_cast<int>(this->forward_payload_header().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule.forward_payload_header");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->forward_payload_header(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  return target;
}

size_t JwtRule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string audiences = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->audiences_size());
  for (int i = 0, n = this->audiences_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->audiences(i));
  }

  // repeated .istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader from_headers = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->from_headers_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->from_headers(static_cast<int>(i)));
    }
  }

  // repeated string from_params = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->from_params_size());
  for (int i = 0, n = this->from_params_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->from_params(i));
  }

  // string issuer = 1;
  if (this->issuer().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->issuer());
  }

  // string forward_payload_header = 8;
  if (this->forward_payload_header().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->forward_payload_header());
  }

  // bool forward = 5;
  if (this->forward() != 0) {
    total_size += 1 + 1;
  }

  switch (jwks_source_specifier_case()) {
    // .istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks remote_jwks = 3;
    case kRemoteJwks: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *jwks_source_specifier_.remote_jwks_);
      break;
    }
    // .istio.envoy.config.filter.http.jwt_auth.v2alpha1.DataSource local_jwks = 4;
    case kLocalJwks: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *jwks_source_specifier_.local_jwks_);
      break;
    }
    case JWKS_SOURCE_SPECIFIER_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JwtRule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  GOOGLE_DCHECK_NE(&from, this);
  const JwtRule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JwtRule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
    MergeFrom(*source);
  }
}

void JwtRule::MergeFrom(const JwtRule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  audiences_.MergeFrom(from.audiences_);
  from_headers_.MergeFrom(from.from_headers_);
  from_params_.MergeFrom(from.from_params_);
  if (from.issuer().size() > 0) {

    issuer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issuer_);
  }
  if (from.forward_payload_header().size() > 0) {

    forward_payload_header_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.forward_payload_header_);
  }
  if (from.forward() != 0) {
    set_forward(from.forward());
  }
  switch (from.jwks_source_specifier_case()) {
    case kRemoteJwks: {
      mutable_remote_jwks()->::istio::envoy::config::filter::http::jwt_auth::v2alpha1::RemoteJwks::MergeFrom(from.remote_jwks());
      break;
    }
    case kLocalJwks: {
      mutable_local_jwks()->::istio::envoy::config::filter::http::jwt_auth::v2alpha1::DataSource::MergeFrom(from.local_jwks());
      break;
    }
    case JWKS_SOURCE_SPECIFIER_NOT_SET: {
      break;
    }
  }
}

void JwtRule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JwtRule::CopyFrom(const JwtRule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JwtRule::IsInitialized() const {
  return true;
}

void JwtRule::Swap(JwtRule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JwtRule::InternalSwap(JwtRule* other) {
  using std::swap;
  audiences_.InternalSwap(&other->audiences_);
  from_headers_.InternalSwap(&other->from_headers_);
  from_params_.InternalSwap(&other->from_params_);
  issuer_.Swap(&other->issuer_);
  forward_payload_header_.Swap(&other->forward_payload_header_);
  swap(forward_, other->forward_);
  swap(jwks_source_specifier_, other->jwks_source_specifier_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JwtRule::GetMetadata() const {
  protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RemoteJwks::InitAsDefaultInstance() {
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_RemoteJwks_default_instance_._instance.get_mutable()->http_uri_ = const_cast< ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::HttpUri*>(
      ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::HttpUri::internal_default_instance());
  ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::_RemoteJwks_default_instance_._instance.get_mutable()->cache_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void RemoteJwks::clear_cache_duration() {
  if (GetArenaNoVirtual() == NULL && cache_duration_ != NULL) {
    delete cache_duration_;
  }
  cache_duration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoteJwks::kHttpUriFieldNumber;
const int RemoteJwks::kCacheDurationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoteJwks::RemoteJwks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsRemoteJwks();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
}
RemoteJwks::RemoteJwks(const RemoteJwks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_http_uri()) {
    http_uri_ = new ::istio::envoy::config::filter::http::jwt_auth::v2alpha1::HttpUri(*from.http_uri_);
  } else {
    http_uri_ = NULL;
  }
  if (from.has_cache_duration()) {
    cache_duration_ = new ::google::protobuf::Duration(*from.cache_duration_);
  } else {
    cache_duration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
}

void RemoteJwks::SharedCtor() {
  ::memset(&http_uri_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cache_duration_) -
      reinterpret_cast<char*>(&http_uri_)) + sizeof(cache_duration_));
  _cached_size_ = 0;
}

RemoteJwks::~RemoteJwks() {
  // @@protoc_insertion_point(destructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
  SharedDtor();
}

void RemoteJwks::SharedDtor() {
  if (this != internal_default_instance()) delete http_uri_;
  if (this != internal_default_instance()) delete cache_duration_;
}

void RemoteJwks::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoteJwks::descriptor() {
  ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RemoteJwks& RemoteJwks::default_instance() {
  ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsRemoteJwks();
  return *internal_default_instance();
}

RemoteJwks* RemoteJwks::New(::google::protobuf::Arena* arena) const {
  RemoteJwks* n = new RemoteJwks;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoteJwks::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && http_uri_ != NULL) {
    delete http_uri_;
  }
  http_uri_ = NULL;
  if (GetArenaNoVirtual() == NULL && cache_duration_ != NULL) {
    delete cache_duration_;
  }
  cache_duration_ = NULL;
  _internal_metadata_.Clear();
}

bool RemoteJwks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri http_uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_http_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration cache_duration = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cache_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
  return false;
#undef DO_
}

void RemoteJwks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri http_uri = 1;
  if (this->has_http_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->http_uri_, output);
  }

  // .google.protobuf.Duration cache_duration = 2;
  if (this->has_cache_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->cache_duration_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
}

::google::protobuf::uint8* RemoteJwks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri http_uri = 1;
  if (this->has_http_uri()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *this->http_uri_, deterministic, target);
  }

  // .google.protobuf.Duration cache_duration = 2;
  if (this->has_cache_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->cache_duration_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
  return target;
}

size_t RemoteJwks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .istio.envoy.config.filter.http.jwt_auth.v2alpha1.HttpUri http_uri = 1;
  if (this->has_http_uri()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->http_uri_);
  }

  // .google.protobuf.Duration cache_duration = 2;
  if (this->has_cache_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cache_duration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoteJwks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoteJwks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoteJwks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
    MergeFrom(*source);
  }
}

void RemoteJwks::MergeFrom(const RemoteJwks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_http_uri()) {
    mutable_http_uri()->::istio::envoy::config::filter::http::jwt_auth::v2alpha1::HttpUri::MergeFrom(from.http_uri());
  }
  if (from.has_cache_duration()) {
    mutable_cache_duration()->::google::protobuf::Duration::MergeFrom(from.cache_duration());
  }
}

void RemoteJwks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoteJwks::CopyFrom(const RemoteJwks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.RemoteJwks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoteJwks::IsInitialized() const {
  return true;
}

void RemoteJwks::Swap(RemoteJwks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoteJwks::InternalSwap(RemoteJwks* other) {
  using std::swap;
  swap(http_uri_, other->http_uri_);
  swap(cache_duration_, other->cache_duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoteJwks::GetMetadata() const {
  protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JwtHeader::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JwtHeader::kNameFieldNumber;
const int JwtHeader::kValuePrefixFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JwtHeader::JwtHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsJwtHeader();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
}
JwtHeader::JwtHeader(const JwtHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value_prefix().size() > 0) {
    value_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_prefix_);
  }
  // @@protoc_insertion_point(copy_constructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
}

void JwtHeader::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

JwtHeader::~JwtHeader() {
  // @@protoc_insertion_point(destructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
  SharedDtor();
}

void JwtHeader::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JwtHeader::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JwtHeader::descriptor() {
  ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JwtHeader& JwtHeader::default_instance() {
  ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsJwtHeader();
  return *internal_default_instance();
}

JwtHeader* JwtHeader::New(::google::protobuf::Arena* arena) const {
  JwtHeader* n = new JwtHeader;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JwtHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool JwtHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value_prefix = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value_prefix().data(), static_cast<int>(this->value_prefix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader.value_prefix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
  return false;
#undef DO_
}

void JwtHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string value_prefix = 2;
  if (this->value_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value_prefix().data(), static_cast<int>(this->value_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader.value_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value_prefix(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
}

::google::protobuf::uint8* JwtHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string value_prefix = 2;
  if (this->value_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value_prefix().data(), static_cast<int>(this->value_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader.value_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value_prefix(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
  return target;
}

size_t JwtHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string value_prefix = 2;
  if (this->value_prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value_prefix());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JwtHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const JwtHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JwtHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
    MergeFrom(*source);
  }
}

void JwtHeader::MergeFrom(const JwtHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value_prefix().size() > 0) {

    value_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_prefix_);
  }
}

void JwtHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JwtHeader::CopyFrom(const JwtHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JwtHeader::IsInitialized() const {
  return true;
}

void JwtHeader::Swap(JwtHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JwtHeader::InternalSwap(JwtHeader* other) {
  using std::swap;
  name_.Swap(&other->name_);
  value_prefix_.Swap(&other->value_prefix_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JwtHeader::GetMetadata() const {
  protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JwtAuthentication::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JwtAuthentication::kRulesFieldNumber;
const int JwtAuthentication::kAllowMissingOrFailedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JwtAuthentication::JwtAuthentication()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsJwtAuthentication();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
}
JwtAuthentication::JwtAuthentication(const JwtAuthentication& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rules_(from.rules_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  allow_missing_or_failed_ = from.allow_missing_or_failed_;
  // @@protoc_insertion_point(copy_constructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
}

void JwtAuthentication::SharedCtor() {
  allow_missing_or_failed_ = false;
  _cached_size_ = 0;
}

JwtAuthentication::~JwtAuthentication() {
  // @@protoc_insertion_point(destructor:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
  SharedDtor();
}

void JwtAuthentication::SharedDtor() {
}

void JwtAuthentication::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JwtAuthentication::descriptor() {
  ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JwtAuthentication& JwtAuthentication::default_instance() {
  ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::InitDefaultsJwtAuthentication();
  return *internal_default_instance();
}

JwtAuthentication* JwtAuthentication::New(::google::protobuf::Arena* arena) const {
  JwtAuthentication* n = new JwtAuthentication;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JwtAuthentication::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rules_.Clear();
  allow_missing_or_failed_ = false;
  _internal_metadata_.Clear();
}

bool JwtAuthentication::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule rules = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_rules()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool allow_missing_or_failed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &allow_missing_or_failed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
  return false;
#undef DO_
}

void JwtAuthentication::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule rules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rules(static_cast<int>(i)), output);
  }

  // bool allow_missing_or_failed = 2;
  if (this->allow_missing_or_failed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->allow_missing_or_failed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
}

::google::protobuf::uint8* JwtAuthentication::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule rules = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rules_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->rules(static_cast<int>(i)), deterministic, target);
  }

  // bool allow_missing_or_failed = 2;
  if (this->allow_missing_or_failed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->allow_missing_or_failed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
  return target;
}

size_t JwtAuthentication::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtRule rules = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->rules_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rules(static_cast<int>(i)));
    }
  }

  // bool allow_missing_or_failed = 2;
  if (this->allow_missing_or_failed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JwtAuthentication::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
  GOOGLE_DCHECK_NE(&from, this);
  const JwtAuthentication* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JwtAuthentication>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
    MergeFrom(*source);
  }
}

void JwtAuthentication::MergeFrom(const JwtAuthentication& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rules_.MergeFrom(from.rules_);
  if (from.allow_missing_or_failed() != 0) {
    set_allow_missing_or_failed(from.allow_missing_or_failed());
  }
}

void JwtAuthentication::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JwtAuthentication::CopyFrom(const JwtAuthentication& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.envoy.config.filter.http.jwt_auth.v2alpha1.JwtAuthentication)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JwtAuthentication::IsInitialized() const {
  return true;
}

void JwtAuthentication::Swap(JwtAuthentication* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JwtAuthentication::InternalSwap(JwtAuthentication* other) {
  using std::swap;
  rules_.InternalSwap(&other->rules_);
  swap(allow_missing_or_failed_, other->allow_missing_or_failed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JwtAuthentication::GetMetadata() const {
  protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_envoy_2fconfig_2ffilter_2fhttp_2fjwt_5fauth_2fv2alpha1_2fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2alpha1
}  // namespace jwt_auth
}  // namespace http
}  // namespace filter
}  // namespace config
}  // namespace envoy
}  // namespace istio

// @@protoc_insertion_point(global_scope)
