// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/v1/mixer.proto

#include "mixer/v1/mixer.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace protobuf_google_2frpc_2fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2frpc_2fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Status;
}  // namespace protobuf_google_2frpc_2fstatus_2eproto
namespace protobuf_mixer_2fv1_2fattributes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<8> scc_info_CompressedAttributes;
}  // namespace protobuf_mixer_2fv1_2fattributes_2eproto
namespace protobuf_mixer_2fv1_2fmixer_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fmixer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CheckRequest_QuotaParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fmixer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HeaderOperation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fmixer_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReferencedAttributes_AttributeMatch;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fmixer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CheckRequest_QuotasEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fmixer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CheckResponse_QuotasEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fmixer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ReferencedAttributes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fmixer_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RouteDirective;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fmixer_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_CheckResponse_QuotaResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fmixer_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_CheckResponse_PreconditionResult;
}  // namespace protobuf_mixer_2fv1_2fmixer_2eproto
namespace istio {
namespace mixer {
namespace v1 {
class CheckRequest_QuotaParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckRequest_QuotaParams>
      _instance;
} _CheckRequest_QuotaParams_default_instance_;
class CheckRequest_QuotasEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckRequest_QuotasEntry_DoNotUse>
      _instance;
} _CheckRequest_QuotasEntry_DoNotUse_default_instance_;
class CheckRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckRequest>
      _instance;
} _CheckRequest_default_instance_;
class CheckResponse_PreconditionResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckResponse_PreconditionResult>
      _instance;
} _CheckResponse_PreconditionResult_default_instance_;
class CheckResponse_QuotaResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckResponse_QuotaResult>
      _instance;
} _CheckResponse_QuotaResult_default_instance_;
class CheckResponse_QuotasEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckResponse_QuotasEntry_DoNotUse>
      _instance;
} _CheckResponse_QuotasEntry_DoNotUse_default_instance_;
class CheckResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CheckResponse>
      _instance;
} _CheckResponse_default_instance_;
class ReferencedAttributes_AttributeMatchDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReferencedAttributes_AttributeMatch>
      _instance;
} _ReferencedAttributes_AttributeMatch_default_instance_;
class ReferencedAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReferencedAttributes>
      _instance;
} _ReferencedAttributes_default_instance_;
class HeaderOperationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeaderOperation>
      _instance;
} _HeaderOperation_default_instance_;
class RouteDirectiveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RouteDirective>
      _instance;
} _RouteDirective_default_instance_;
class ReportRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportRequest>
      _instance;
} _ReportRequest_default_instance_;
class ReportResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReportResponse>
      _instance;
} _ReportResponse_default_instance_;
}  // namespace v1
}  // namespace mixer
}  // namespace istio
namespace protobuf_mixer_2fv1_2fmixer_2eproto {
static void InitDefaultsCheckRequest_QuotaParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CheckRequest_QuotaParams_default_instance_;
    new (ptr) ::istio::mixer::v1::CheckRequest_QuotaParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::CheckRequest_QuotaParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CheckRequest_QuotaParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCheckRequest_QuotaParams}, {}};

static void InitDefaultsCheckRequest_QuotasEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CheckRequest_QuotasEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::CheckRequest_QuotasEntry_DoNotUse();
  }
  ::istio::mixer::v1::CheckRequest_QuotasEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CheckRequest_QuotasEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCheckRequest_QuotasEntry_DoNotUse}, {
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckRequest_QuotaParams.base,}};

static void InitDefaultsCheckRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CheckRequest_default_instance_;
    new (ptr) ::istio::mixer::v1::CheckRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::CheckRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CheckRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCheckRequest}, {
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_CompressedAttributes.base,
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckRequest_QuotasEntry_DoNotUse.base,}};

static void InitDefaultsCheckResponse_PreconditionResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CheckResponse_PreconditionResult_default_instance_;
    new (ptr) ::istio::mixer::v1::CheckResponse_PreconditionResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::CheckResponse_PreconditionResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_CheckResponse_PreconditionResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsCheckResponse_PreconditionResult}, {
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReferencedAttributes.base,
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_RouteDirective.base,}};

static void InitDefaultsCheckResponse_QuotaResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CheckResponse_QuotaResult_default_instance_;
    new (ptr) ::istio::mixer::v1::CheckResponse_QuotaResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::CheckResponse_QuotaResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CheckResponse_QuotaResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCheckResponse_QuotaResult}, {
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReferencedAttributes.base,}};

static void InitDefaultsCheckResponse_QuotasEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CheckResponse_QuotasEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::CheckResponse_QuotasEntry_DoNotUse();
  }
  ::istio::mixer::v1::CheckResponse_QuotasEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CheckResponse_QuotasEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCheckResponse_QuotasEntry_DoNotUse}, {
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckResponse_QuotaResult.base,}};

static void InitDefaultsCheckResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CheckResponse_default_instance_;
    new (ptr) ::istio::mixer::v1::CheckResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::CheckResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CheckResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCheckResponse}, {
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckResponse_PreconditionResult.base,
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckResponse_QuotasEntry_DoNotUse.base,}};

static void InitDefaultsReferencedAttributes_AttributeMatch() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_ReferencedAttributes_AttributeMatch_default_instance_;
    new (ptr) ::istio::mixer::v1::ReferencedAttributes_AttributeMatch();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::ReferencedAttributes_AttributeMatch::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReferencedAttributes_AttributeMatch =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReferencedAttributes_AttributeMatch}, {}};

static void InitDefaultsReferencedAttributes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_ReferencedAttributes_default_instance_;
    new (ptr) ::istio::mixer::v1::ReferencedAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::ReferencedAttributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReferencedAttributes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReferencedAttributes}, {
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReferencedAttributes_AttributeMatch.base,}};

static void InitDefaultsHeaderOperation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_HeaderOperation_default_instance_;
    new (ptr) ::istio::mixer::v1::HeaderOperation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::HeaderOperation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeaderOperation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeaderOperation}, {}};

static void InitDefaultsRouteDirective() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_RouteDirective_default_instance_;
    new (ptr) ::istio::mixer::v1::RouteDirective();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::RouteDirective::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RouteDirective =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRouteDirective}, {
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_HeaderOperation.base,}};

static void InitDefaultsReportRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_ReportRequest_default_instance_;
    new (ptr) ::istio::mixer::v1::ReportRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::ReportRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReportRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReportRequest}, {
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_CompressedAttributes.base,}};

static void InitDefaultsReportResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_ReportResponse_default_instance_;
    new (ptr) ::istio::mixer::v1::ReportResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::ReportResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReportResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReportResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CheckRequest_QuotaParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckRequest_QuotasEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckResponse_PreconditionResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckResponse_QuotaResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckResponse_QuotasEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CheckResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReferencedAttributes_AttributeMatch.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReferencedAttributes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeaderOperation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RouteDirective.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReportResponse.base);
}

::google::protobuf::Metadata file_level_metadata[13];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckRequest_QuotaParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckRequest_QuotaParams, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckRequest_QuotaParams, best_effort_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckRequest_QuotasEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckRequest_QuotasEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckRequest_QuotasEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckRequest_QuotasEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckRequest, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckRequest, global_word_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckRequest, deduplication_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckRequest, quotas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_PreconditionResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_PreconditionResult, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_PreconditionResult, valid_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_PreconditionResult, valid_use_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_PreconditionResult, referenced_attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_PreconditionResult, route_directive_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_QuotaResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_QuotaResult, valid_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_QuotaResult, granted_amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_QuotaResult, referenced_attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_QuotasEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_QuotasEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_QuotasEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse_QuotasEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse, precondition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CheckResponse, quotas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReferencedAttributes_AttributeMatch, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReferencedAttributes_AttributeMatch, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReferencedAttributes_AttributeMatch, condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReferencedAttributes_AttributeMatch, regex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReferencedAttributes_AttributeMatch, map_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReferencedAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReferencedAttributes, words_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReferencedAttributes, attribute_matches_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::HeaderOperation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::HeaderOperation, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::HeaderOperation, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::HeaderOperation, operation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::RouteDirective, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::RouteDirective, request_header_operations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::RouteDirective, response_header_operations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::RouteDirective, direct_response_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::RouteDirective, direct_response_body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReportRequest, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReportRequest, repeated_attributes_semantics_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReportRequest, default_words_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReportRequest, global_word_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::ReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::istio::mixer::v1::CheckRequest_QuotaParams)},
  { 7, 14, sizeof(::istio::mixer::v1::CheckRequest_QuotasEntry_DoNotUse)},
  { 16, -1, sizeof(::istio::mixer::v1::CheckRequest)},
  { 25, -1, sizeof(::istio::mixer::v1::CheckResponse_PreconditionResult)},
  { 35, -1, sizeof(::istio::mixer::v1::CheckResponse_QuotaResult)},
  { 43, 50, sizeof(::istio::mixer::v1::CheckResponse_QuotasEntry_DoNotUse)},
  { 52, -1, sizeof(::istio::mixer::v1::CheckResponse)},
  { 59, -1, sizeof(::istio::mixer::v1::ReferencedAttributes_AttributeMatch)},
  { 68, -1, sizeof(::istio::mixer::v1::ReferencedAttributes)},
  { 75, -1, sizeof(::istio::mixer::v1::HeaderOperation)},
  { 83, -1, sizeof(::istio::mixer::v1::RouteDirective)},
  { 92, -1, sizeof(::istio::mixer::v1::ReportRequest)},
  { 101, -1, sizeof(::istio::mixer::v1::ReportResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CheckRequest_QuotaParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CheckRequest_QuotasEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CheckRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CheckResponse_PreconditionResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CheckResponse_QuotaResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CheckResponse_QuotasEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CheckResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_ReferencedAttributes_AttributeMatch_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_ReferencedAttributes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_HeaderOperation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_RouteDirective_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_ReportRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_ReportResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "mixer/v1/mixer.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024mixer/v1/mixer.proto\022\016istio.mixer.v1\032\024"
      "gogoproto/gogo.proto\032\036google/protobuf/du"
      "ration.proto\032\027google/rpc/status.proto\032\031m"
      "ixer/v1/attributes.proto\"\320\002\n\014CheckReques"
      "t\022>\n\nattributes\030\001 \001(\0132$.istio.mixer.v1.C"
      "ompressedAttributesB\004\310\336\037\000\022\031\n\021global_word"
      "_count\030\002 \001(\r\022\030\n\020deduplication_id\030\003 \001(\t\022>"
      "\n\006quotas\030\004 \003(\0132(.istio.mixer.v1.CheckReq"
      "uest.QuotasEntryB\004\310\336\037\000\0322\n\013QuotaParams\022\016\n"
      "\006amount\030\001 \001(\003\022\023\n\013best_effort\030\002 \001(\010\032W\n\013Qu"
      "otasEntry\022\013\n\003key\030\001 \001(\t\0227\n\005value\030\002 \001(\0132(."
      "istio.mixer.v1.CheckRequest.QuotaParams:"
      "\0028\001\"\303\005\n\rCheckResponse\022L\n\014precondition\030\002 "
      "\001(\01320.istio.mixer.v1.CheckResponse.Preco"
      "nditionResultB\004\310\336\037\000\022\?\n\006quotas\030\003 \003(\0132).is"
      "tio.mixer.v1.CheckResponse.QuotasEntryB\004"
      "\310\336\037\000\032\230\002\n\022PreconditionResult\022(\n\006status\030\001 "
      "\001(\0132\022.google.rpc.StatusB\004\310\336\037\000\022;\n\016valid_d"
      "uration\030\002 \001(\0132\031.google.protobuf.Duration"
      "B\010\310\336\037\000\230\337\037\001\022\027\n\017valid_use_count\030\003 \001(\005\022C\n\025r"
      "eferenced_attributes\030\005 \001(\0132$.istio.mixer"
      ".v1.ReferencedAttributes\0227\n\017route_direct"
      "ive\030\006 \001(\0132\036.istio.mixer.v1.RouteDirectiv"
      "eJ\004\010\004\020\005\032\255\001\n\013QuotaResult\022;\n\016valid_duratio"
      "n\030\001 \001(\0132\031.google.protobuf.DurationB\010\310\336\037\000"
      "\230\337\037\001\022\026\n\016granted_amount\030\002 \001(\003\022I\n\025referenc"
      "ed_attributes\030\005 \001(\0132$.istio.mixer.v1.Ref"
      "erencedAttributesB\004\310\336\037\000\032X\n\013QuotasEntry\022\013"
      "\n\003key\030\001 \001(\t\0228\n\005value\030\002 \001(\0132).istio.mixer"
      ".v1.CheckResponse.QuotaResult:\0028\001\"\312\002\n\024Re"
      "ferencedAttributes\022\r\n\005words\030\001 \003(\t\022T\n\021att"
      "ribute_matches\030\002 \003(\01323.istio.mixer.v1.Re"
      "ferencedAttributes.AttributeMatchB\004\310\336\037\000\032"
      "\201\001\n\016AttributeMatch\022\014\n\004name\030\001 \001(\021\022A\n\tcond"
      "ition\030\002 \001(\0162..istio.mixer.v1.ReferencedA"
      "ttributes.Condition\022\r\n\005regex\030\003 \001(\t\022\017\n\007ma"
      "p_key\030\004 \001(\021\"I\n\tCondition\022\031\n\025CONDITION_UN"
      "SPECIFIED\020\000\022\013\n\007ABSENCE\020\001\022\t\n\005EXACT\020\002\022\t\n\005R"
      "EGEX\020\003\"\236\001\n\017HeaderOperation\022\014\n\004name\030\001 \001(\t"
      "\022\r\n\005value\030\002 \001(\t\022<\n\toperation\030\003 \001(\0162).ist"
      "io.mixer.v1.HeaderOperation.Operation\"0\n"
      "\tOperation\022\013\n\007REPLACE\020\000\022\n\n\006REMOVE\020\001\022\n\n\006A"
      "PPEND\020\002\"\341\001\n\016RouteDirective\022H\n\031request_he"
      "ader_operations\030\001 \003(\0132\037.istio.mixer.v1.H"
      "eaderOperationB\004\310\336\037\000\022I\n\032response_header_"
      "operations\030\002 \003(\0132\037.istio.mixer.v1.Header"
      "OperationB\004\310\336\037\000\022\034\n\024direct_response_code\030"
      "\003 \001(\r\022\034\n\024direct_response_body\030\004 \001(\t\"\260\002\n\r"
      "ReportRequest\022>\n\nattributes\030\001 \003(\0132$.isti"
      "o.mixer.v1.CompressedAttributesB\004\310\336\037\000\022`\n"
      "\035repeated_attributes_semantics\030\004 \001(\01629.i"
      "stio.mixer.v1.ReportRequest.RepeatedAttr"
      "ibutesSemantics\022\025\n\rdefault_words\030\002 \003(\t\022\031"
      "\n\021global_word_count\030\003 \001(\r\"K\n\033RepeatedAtt"
      "ributesSemantics\022\022\n\016DELTA_ENCODING\020\000\022\030\n\024"
      "INDEPENDENT_ENCODING\020\001\"\020\n\016ReportResponse"
      "2\232\001\n\005Mixer\022F\n\005Check\022\034.istio.mixer.v1.Che"
      "ckRequest\032\035.istio.mixer.v1.CheckResponse"
      "\"\000\022I\n\006Report\022\035.istio.mixer.v1.ReportRequ"
      "est\032\036.istio.mixer.v1.ReportResponse\"\000B)Z"
      "\025istio.io/api/mixer/v1\200\001\001\370\001\001\310\341\036\000\250\342\036\000\360\341\036\000"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2448);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mixer/v1/mixer.proto", &protobuf_RegisterTypes);
  ::protobuf_gogoproto_2fgogo_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
  ::protobuf_mixer_2fv1_2fattributes_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mixer_2fv1_2fmixer_2eproto
namespace istio {
namespace mixer {
namespace v1 {
const ::google::protobuf::EnumDescriptor* ReferencedAttributes_Condition_descriptor() {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fmixer_2eproto::file_level_enum_descriptors[0];
}
bool ReferencedAttributes_Condition_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ReferencedAttributes_Condition ReferencedAttributes::CONDITION_UNSPECIFIED;
const ReferencedAttributes_Condition ReferencedAttributes::ABSENCE;
const ReferencedAttributes_Condition ReferencedAttributes::EXACT;
const ReferencedAttributes_Condition ReferencedAttributes::REGEX;
const ReferencedAttributes_Condition ReferencedAttributes::Condition_MIN;
const ReferencedAttributes_Condition ReferencedAttributes::Condition_MAX;
const int ReferencedAttributes::Condition_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* HeaderOperation_Operation_descriptor() {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fmixer_2eproto::file_level_enum_descriptors[1];
}
bool HeaderOperation_Operation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const HeaderOperation_Operation HeaderOperation::REPLACE;
const HeaderOperation_Operation HeaderOperation::REMOVE;
const HeaderOperation_Operation HeaderOperation::APPEND;
const HeaderOperation_Operation HeaderOperation::Operation_MIN;
const HeaderOperation_Operation HeaderOperation::Operation_MAX;
const int HeaderOperation::Operation_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* ReportRequest_RepeatedAttributesSemantics_descriptor() {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fmixer_2eproto::file_level_enum_descriptors[2];
}
bool ReportRequest_RepeatedAttributesSemantics_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const ReportRequest_RepeatedAttributesSemantics ReportRequest::DELTA_ENCODING;
const ReportRequest_RepeatedAttributesSemantics ReportRequest::INDEPENDENT_ENCODING;
const ReportRequest_RepeatedAttributesSemantics ReportRequest::RepeatedAttributesSemantics_MIN;
const ReportRequest_RepeatedAttributesSemantics ReportRequest::RepeatedAttributesSemantics_MAX;
const int ReportRequest::RepeatedAttributesSemantics_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void CheckRequest_QuotaParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckRequest_QuotaParams::kAmountFieldNumber;
const int CheckRequest_QuotaParams::kBestEffortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckRequest_QuotaParams::CheckRequest_QuotaParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckRequest_QuotaParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.CheckRequest.QuotaParams)
}
CheckRequest_QuotaParams::CheckRequest_QuotaParams(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckRequest_QuotaParams.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.CheckRequest.QuotaParams)
}
CheckRequest_QuotaParams::CheckRequest_QuotaParams(const CheckRequest_QuotaParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&best_effort_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(best_effort_));
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.CheckRequest.QuotaParams)
}

void CheckRequest_QuotaParams::SharedCtor() {
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&best_effort_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(best_effort_));
}

CheckRequest_QuotaParams::~CheckRequest_QuotaParams() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.CheckRequest.QuotaParams)
  SharedDtor();
}

void CheckRequest_QuotaParams::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CheckRequest_QuotaParams::ArenaDtor(void* object) {
  CheckRequest_QuotaParams* _this = reinterpret_cast< CheckRequest_QuotaParams* >(object);
  (void)_this;
}
void CheckRequest_QuotaParams::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckRequest_QuotaParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckRequest_QuotaParams::descriptor() {
  ::protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckRequest_QuotaParams& CheckRequest_QuotaParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckRequest_QuotaParams.base);
  return *internal_default_instance();
}


void CheckRequest_QuotaParams::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.CheckRequest.QuotaParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&best_effort_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(best_effort_));
  _internal_metadata_.Clear();
}

bool CheckRequest_QuotaParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.CheckRequest.QuotaParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool best_effort = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &best_effort_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.CheckRequest.QuotaParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.CheckRequest.QuotaParams)
  return false;
#undef DO_
}

void CheckRequest_QuotaParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.CheckRequest.QuotaParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 amount = 1;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->amount(), output);
  }

  // bool best_effort = 2;
  if (this->best_effort() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->best_effort(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.CheckRequest.QuotaParams)
}

::google::protobuf::uint8* CheckRequest_QuotaParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.CheckRequest.QuotaParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 amount = 1;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->amount(), target);
  }

  // bool best_effort = 2;
  if (this->best_effort() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->best_effort(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.CheckRequest.QuotaParams)
  return target;
}

size_t CheckRequest_QuotaParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.CheckRequest.QuotaParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 amount = 1;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  // bool best_effort = 2;
  if (this->best_effort() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckRequest_QuotaParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.CheckRequest.QuotaParams)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckRequest_QuotaParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckRequest_QuotaParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.CheckRequest.QuotaParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.CheckRequest.QuotaParams)
    MergeFrom(*source);
  }
}

void CheckRequest_QuotaParams::MergeFrom(const CheckRequest_QuotaParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.CheckRequest.QuotaParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.best_effort() != 0) {
    set_best_effort(from.best_effort());
  }
}

void CheckRequest_QuotaParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.CheckRequest.QuotaParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckRequest_QuotaParams::CopyFrom(const CheckRequest_QuotaParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.CheckRequest.QuotaParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckRequest_QuotaParams::IsInitialized() const {
  return true;
}

void CheckRequest_QuotaParams::Swap(CheckRequest_QuotaParams* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckRequest_QuotaParams* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckRequest_QuotaParams::UnsafeArenaSwap(CheckRequest_QuotaParams* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckRequest_QuotaParams::InternalSwap(CheckRequest_QuotaParams* other) {
  using std::swap;
  swap(amount_, other->amount_);
  swap(best_effort_, other->best_effort_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckRequest_QuotaParams::GetMetadata() const {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

CheckRequest_QuotasEntry_DoNotUse::CheckRequest_QuotasEntry_DoNotUse() {}
CheckRequest_QuotasEntry_DoNotUse::CheckRequest_QuotasEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CheckRequest_QuotasEntry_DoNotUse::MergeFrom(const CheckRequest_QuotasEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CheckRequest_QuotasEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[1];
}
void CheckRequest_QuotasEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void CheckRequest::InitAsDefaultInstance() {
  ::istio::mixer::v1::_CheckRequest_default_instance_._instance.get_mutable()->attributes_ = const_cast< ::istio::mixer::v1::CompressedAttributes*>(
      ::istio::mixer::v1::CompressedAttributes::internal_default_instance());
}
void CheckRequest::unsafe_arena_set_allocated_attributes(
    ::istio::mixer::v1::CompressedAttributes* attributes) {
  if (GetArenaNoVirtual() == NULL) {
    delete attributes_;
  }
  attributes_ = attributes;
  if (attributes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:istio.mixer.v1.CheckRequest.attributes)
}
void CheckRequest::clear_attributes() {
  if (GetArenaNoVirtual() == NULL && attributes_ != NULL) {
    delete attributes_;
  }
  attributes_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckRequest::kAttributesFieldNumber;
const int CheckRequest::kGlobalWordCountFieldNumber;
const int CheckRequest::kDeduplicationIdFieldNumber;
const int CheckRequest::kQuotasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckRequest::CheckRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.CheckRequest)
}
CheckRequest::CheckRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  quotas_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.CheckRequest)
}
CheckRequest::CheckRequest(const CheckRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quotas_.MergeFrom(from.quotas_);
  deduplication_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.deduplication_id().size() > 0) {
    deduplication_id_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deduplication_id(),
      GetArenaNoVirtual());
  }
  if (from.has_attributes()) {
    attributes_ = new ::istio::mixer::v1::CompressedAttributes(*from.attributes_);
  } else {
    attributes_ = NULL;
  }
  global_word_count_ = from.global_word_count_;
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.CheckRequest)
}

void CheckRequest::SharedCtor() {
  deduplication_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&attributes_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&global_word_count_) -
      reinterpret_cast<char*>(&attributes_)) + sizeof(global_word_count_));
}

CheckRequest::~CheckRequest() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.CheckRequest)
  SharedDtor();
}

void CheckRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  deduplication_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete attributes_;
}

void CheckRequest::ArenaDtor(void* object) {
  CheckRequest* _this = reinterpret_cast< CheckRequest* >(object);
  (void)_this;
}
void CheckRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckRequest::descriptor() {
  ::protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckRequest& CheckRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckRequest.base);
  return *internal_default_instance();
}


void CheckRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.CheckRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quotas_.Clear();
  deduplication_id_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  if (GetArenaNoVirtual() == NULL && attributes_ != NULL) {
    delete attributes_;
  }
  attributes_ = NULL;
  global_word_count_ = 0u;
  _internal_metadata_.Clear();
}

bool CheckRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.CheckRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .istio.mixer.v1.CompressedAttributes attributes = 1 [(.gogoproto.nullable) = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 global_word_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &global_word_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string deduplication_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deduplication_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deduplication_id().data(), static_cast<int>(this->deduplication_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.CheckRequest.deduplication_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .istio.mixer.v1.CheckRequest.QuotaParams> quotas = 4 [(.gogoproto.nullable) = false];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          CheckRequest_QuotasEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CheckRequest_QuotasEntry_DoNotUse,
              ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams > > parser(&quotas_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.CheckRequest.QuotasEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.CheckRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.CheckRequest)
  return false;
#undef DO_
}

void CheckRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.CheckRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.mixer.v1.CompressedAttributes attributes = 1 [(.gogoproto.nullable) = false];
  if (this->has_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_attributes(), output);
  }

  // uint32 global_word_count = 2;
  if (this->global_word_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->global_word_count(), output);
  }

  // string deduplication_id = 3;
  if (this->deduplication_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deduplication_id().data(), static_cast<int>(this->deduplication_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.CheckRequest.deduplication_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->deduplication_id(), output);
  }

  // map<string, .istio.mixer.v1.CheckRequest.QuotaParams> quotas = 4 [(.gogoproto.nullable) = false];
  if (!this->quotas().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.v1.CheckRequest.QuotasEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->quotas().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->quotas().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CheckRequest_QuotasEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(quotas_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<CheckRequest_QuotasEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it) {
        entry.reset(quotas_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.CheckRequest)
}

::google::protobuf::uint8* CheckRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.CheckRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.mixer.v1.CompressedAttributes attributes = 1 [(.gogoproto.nullable) = false];
  if (this->has_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_attributes(), deterministic, target);
  }

  // uint32 global_word_count = 2;
  if (this->global_word_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->global_word_count(), target);
  }

  // string deduplication_id = 3;
  if (this->deduplication_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deduplication_id().data(), static_cast<int>(this->deduplication_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.CheckRequest.deduplication_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->deduplication_id(), target);
  }

  // map<string, .istio.mixer.v1.CheckRequest.QuotaParams> quotas = 4 [(.gogoproto.nullable) = false];
  if (!this->quotas().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.v1.CheckRequest.QuotasEntry.key");
      }
    };

    if (deterministic &&
        this->quotas().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->quotas().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CheckRequest_QuotasEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(quotas_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<CheckRequest_QuotasEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it) {
        entry.reset(quotas_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.CheckRequest)
  return target;
}

size_t CheckRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.CheckRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .istio.mixer.v1.CheckRequest.QuotaParams> quotas = 4 [(.gogoproto.nullable) = false];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->quotas_size());
  {
    ::std::unique_ptr<CheckRequest_QuotasEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckRequest_QuotaParams >::const_iterator
        it = this->quotas().begin();
        it != this->quotas().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(quotas_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // string deduplication_id = 3;
  if (this->deduplication_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deduplication_id());
  }

  // .istio.mixer.v1.CompressedAttributes attributes = 1 [(.gogoproto.nullable) = false];
  if (this->has_attributes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *attributes_);
  }

  // uint32 global_word_count = 2;
  if (this->global_word_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->global_word_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.CheckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.CheckRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.CheckRequest)
    MergeFrom(*source);
  }
}

void CheckRequest::MergeFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.CheckRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quotas_.MergeFrom(from.quotas_);
  if (from.deduplication_id().size() > 0) {
    set_deduplication_id(from.deduplication_id());
  }
  if (from.has_attributes()) {
    mutable_attributes()->::istio::mixer::v1::CompressedAttributes::MergeFrom(from.attributes());
  }
  if (from.global_word_count() != 0) {
    set_global_word_count(from.global_word_count());
  }
}

void CheckRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckRequest::CopyFrom(const CheckRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.CheckRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckRequest::IsInitialized() const {
  return true;
}

void CheckRequest::Swap(CheckRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckRequest::UnsafeArenaSwap(CheckRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckRequest::InternalSwap(CheckRequest* other) {
  using std::swap;
  quotas_.Swap(&other->quotas_);
  deduplication_id_.Swap(&other->deduplication_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(attributes_, other->attributes_);
  swap(global_word_count_, other->global_word_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckRequest::GetMetadata() const {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckResponse_PreconditionResult::InitAsDefaultInstance() {
  ::istio::mixer::v1::_CheckResponse_PreconditionResult_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
  ::istio::mixer::v1::_CheckResponse_PreconditionResult_default_instance_._instance.get_mutable()->valid_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::istio::mixer::v1::_CheckResponse_PreconditionResult_default_instance_._instance.get_mutable()->referenced_attributes_ = const_cast< ::istio::mixer::v1::ReferencedAttributes*>(
      ::istio::mixer::v1::ReferencedAttributes::internal_default_instance());
  ::istio::mixer::v1::_CheckResponse_PreconditionResult_default_instance_._instance.get_mutable()->route_directive_ = const_cast< ::istio::mixer::v1::RouteDirective*>(
      ::istio::mixer::v1::RouteDirective::internal_default_instance());
}
void CheckResponse_PreconditionResult::unsafe_arena_set_allocated_status(
    ::google::rpc::Status* status) {
  if (GetArenaNoVirtual() == NULL) {
    delete status_;
  }
  status_ = status;
  if (status) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:istio.mixer.v1.CheckResponse.PreconditionResult.status)
}
void CheckResponse_PreconditionResult::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void CheckResponse_PreconditionResult::unsafe_arena_set_allocated_valid_duration(
    ::google::protobuf::Duration* valid_duration) {
  if (GetArenaNoVirtual() == NULL) {
    delete valid_duration_;
  }
  valid_duration_ = valid_duration;
  if (valid_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:istio.mixer.v1.CheckResponse.PreconditionResult.valid_duration)
}
void CheckResponse_PreconditionResult::clear_valid_duration() {
  if (GetArenaNoVirtual() == NULL && valid_duration_ != NULL) {
    delete valid_duration_;
  }
  valid_duration_ = NULL;
}
void CheckResponse_PreconditionResult::unsafe_arena_set_allocated_referenced_attributes(
    ::istio::mixer::v1::ReferencedAttributes* referenced_attributes) {
  if (GetArenaNoVirtual() == NULL) {
    delete referenced_attributes_;
  }
  referenced_attributes_ = referenced_attributes;
  if (referenced_attributes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:istio.mixer.v1.CheckResponse.PreconditionResult.referenced_attributes)
}
void CheckResponse_PreconditionResult::unsafe_arena_set_allocated_route_directive(
    ::istio::mixer::v1::RouteDirective* route_directive) {
  if (GetArenaNoVirtual() == NULL) {
    delete route_directive_;
  }
  route_directive_ = route_directive;
  if (route_directive) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:istio.mixer.v1.CheckResponse.PreconditionResult.route_directive)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckResponse_PreconditionResult::kStatusFieldNumber;
const int CheckResponse_PreconditionResult::kValidDurationFieldNumber;
const int CheckResponse_PreconditionResult::kValidUseCountFieldNumber;
const int CheckResponse_PreconditionResult::kReferencedAttributesFieldNumber;
const int CheckResponse_PreconditionResult::kRouteDirectiveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckResponse_PreconditionResult::CheckResponse_PreconditionResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckResponse_PreconditionResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.CheckResponse.PreconditionResult)
}
CheckResponse_PreconditionResult::CheckResponse_PreconditionResult(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckResponse_PreconditionResult.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.CheckResponse.PreconditionResult)
}
CheckResponse_PreconditionResult::CheckResponse_PreconditionResult(const CheckResponse_PreconditionResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_valid_duration()) {
    valid_duration_ = new ::google::protobuf::Duration(*from.valid_duration_);
  } else {
    valid_duration_ = NULL;
  }
  if (from.has_referenced_attributes()) {
    referenced_attributes_ = new ::istio::mixer::v1::ReferencedAttributes(*from.referenced_attributes_);
  } else {
    referenced_attributes_ = NULL;
  }
  if (from.has_route_directive()) {
    route_directive_ = new ::istio::mixer::v1::RouteDirective(*from.route_directive_);
  } else {
    route_directive_ = NULL;
  }
  valid_use_count_ = from.valid_use_count_;
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.CheckResponse.PreconditionResult)
}

void CheckResponse_PreconditionResult::SharedCtor() {
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&valid_use_count_) -
      reinterpret_cast<char*>(&status_)) + sizeof(valid_use_count_));
}

CheckResponse_PreconditionResult::~CheckResponse_PreconditionResult() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.CheckResponse.PreconditionResult)
  SharedDtor();
}

void CheckResponse_PreconditionResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete valid_duration_;
  if (this != internal_default_instance()) delete referenced_attributes_;
  if (this != internal_default_instance()) delete route_directive_;
}

void CheckResponse_PreconditionResult::ArenaDtor(void* object) {
  CheckResponse_PreconditionResult* _this = reinterpret_cast< CheckResponse_PreconditionResult* >(object);
  (void)_this;
}
void CheckResponse_PreconditionResult::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckResponse_PreconditionResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckResponse_PreconditionResult::descriptor() {
  ::protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckResponse_PreconditionResult& CheckResponse_PreconditionResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckResponse_PreconditionResult.base);
  return *internal_default_instance();
}


void CheckResponse_PreconditionResult::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.CheckResponse.PreconditionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && valid_duration_ != NULL) {
    delete valid_duration_;
  }
  valid_duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && referenced_attributes_ != NULL) {
    delete referenced_attributes_;
  }
  referenced_attributes_ = NULL;
  if (GetArenaNoVirtual() == NULL && route_directive_ != NULL) {
    delete route_directive_;
  }
  route_directive_ = NULL;
  valid_use_count_ = 0;
  _internal_metadata_.Clear();
}

bool CheckResponse_PreconditionResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.CheckResponse.PreconditionResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.rpc.Status status = 1 [(.gogoproto.nullable) = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration valid_duration = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_valid_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 valid_use_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &valid_use_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mixer.v1.ReferencedAttributes referenced_attributes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_referenced_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mixer.v1.RouteDirective route_directive = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_route_directive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.CheckResponse.PreconditionResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.CheckResponse.PreconditionResult)
  return false;
#undef DO_
}

void CheckResponse_PreconditionResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.CheckResponse.PreconditionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.Status status = 1 [(.gogoproto.nullable) = false];
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  // .google.protobuf.Duration valid_duration = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  if (this->has_valid_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_valid_duration(), output);
  }

  // int32 valid_use_count = 3;
  if (this->valid_use_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->valid_use_count(), output);
  }

  // .istio.mixer.v1.ReferencedAttributes referenced_attributes = 5;
  if (this->has_referenced_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_referenced_attributes(), output);
  }

  // .istio.mixer.v1.RouteDirective route_directive = 6;
  if (this->has_route_directive()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_route_directive(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.CheckResponse.PreconditionResult)
}

::google::protobuf::uint8* CheckResponse_PreconditionResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.CheckResponse.PreconditionResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.Status status = 1 [(.gogoproto.nullable) = false];
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  // .google.protobuf.Duration valid_duration = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  if (this->has_valid_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_valid_duration(), deterministic, target);
  }

  // int32 valid_use_count = 3;
  if (this->valid_use_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->valid_use_count(), target);
  }

  // .istio.mixer.v1.ReferencedAttributes referenced_attributes = 5;
  if (this->has_referenced_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_referenced_attributes(), deterministic, target);
  }

  // .istio.mixer.v1.RouteDirective route_directive = 6;
  if (this->has_route_directive()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_route_directive(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.CheckResponse.PreconditionResult)
  return target;
}

size_t CheckResponse_PreconditionResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.CheckResponse.PreconditionResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.rpc.Status status = 1 [(.gogoproto.nullable) = false];
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .google.protobuf.Duration valid_duration = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  if (this->has_valid_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *valid_duration_);
  }

  // .istio.mixer.v1.ReferencedAttributes referenced_attributes = 5;
  if (this->has_referenced_attributes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *referenced_attributes_);
  }

  // .istio.mixer.v1.RouteDirective route_directive = 6;
  if (this->has_route_directive()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *route_directive_);
  }

  // int32 valid_use_count = 3;
  if (this->valid_use_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->valid_use_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckResponse_PreconditionResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.CheckResponse.PreconditionResult)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckResponse_PreconditionResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckResponse_PreconditionResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.CheckResponse.PreconditionResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.CheckResponse.PreconditionResult)
    MergeFrom(*source);
  }
}

void CheckResponse_PreconditionResult::MergeFrom(const CheckResponse_PreconditionResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.CheckResponse.PreconditionResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
  if (from.has_valid_duration()) {
    mutable_valid_duration()->::google::protobuf::Duration::MergeFrom(from.valid_duration());
  }
  if (from.has_referenced_attributes()) {
    mutable_referenced_attributes()->::istio::mixer::v1::ReferencedAttributes::MergeFrom(from.referenced_attributes());
  }
  if (from.has_route_directive()) {
    mutable_route_directive()->::istio::mixer::v1::RouteDirective::MergeFrom(from.route_directive());
  }
  if (from.valid_use_count() != 0) {
    set_valid_use_count(from.valid_use_count());
  }
}

void CheckResponse_PreconditionResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.CheckResponse.PreconditionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckResponse_PreconditionResult::CopyFrom(const CheckResponse_PreconditionResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.CheckResponse.PreconditionResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResponse_PreconditionResult::IsInitialized() const {
  return true;
}

void CheckResponse_PreconditionResult::Swap(CheckResponse_PreconditionResult* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckResponse_PreconditionResult* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckResponse_PreconditionResult::UnsafeArenaSwap(CheckResponse_PreconditionResult* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckResponse_PreconditionResult::InternalSwap(CheckResponse_PreconditionResult* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(valid_duration_, other->valid_duration_);
  swap(referenced_attributes_, other->referenced_attributes_);
  swap(route_directive_, other->route_directive_);
  swap(valid_use_count_, other->valid_use_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckResponse_PreconditionResult::GetMetadata() const {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CheckResponse_QuotaResult::InitAsDefaultInstance() {
  ::istio::mixer::v1::_CheckResponse_QuotaResult_default_instance_._instance.get_mutable()->valid_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::istio::mixer::v1::_CheckResponse_QuotaResult_default_instance_._instance.get_mutable()->referenced_attributes_ = const_cast< ::istio::mixer::v1::ReferencedAttributes*>(
      ::istio::mixer::v1::ReferencedAttributes::internal_default_instance());
}
void CheckResponse_QuotaResult::unsafe_arena_set_allocated_valid_duration(
    ::google::protobuf::Duration* valid_duration) {
  if (GetArenaNoVirtual() == NULL) {
    delete valid_duration_;
  }
  valid_duration_ = valid_duration;
  if (valid_duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:istio.mixer.v1.CheckResponse.QuotaResult.valid_duration)
}
void CheckResponse_QuotaResult::clear_valid_duration() {
  if (GetArenaNoVirtual() == NULL && valid_duration_ != NULL) {
    delete valid_duration_;
  }
  valid_duration_ = NULL;
}
void CheckResponse_QuotaResult::unsafe_arena_set_allocated_referenced_attributes(
    ::istio::mixer::v1::ReferencedAttributes* referenced_attributes) {
  if (GetArenaNoVirtual() == NULL) {
    delete referenced_attributes_;
  }
  referenced_attributes_ = referenced_attributes;
  if (referenced_attributes) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:istio.mixer.v1.CheckResponse.QuotaResult.referenced_attributes)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckResponse_QuotaResult::kValidDurationFieldNumber;
const int CheckResponse_QuotaResult::kGrantedAmountFieldNumber;
const int CheckResponse_QuotaResult::kReferencedAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckResponse_QuotaResult::CheckResponse_QuotaResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckResponse_QuotaResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.CheckResponse.QuotaResult)
}
CheckResponse_QuotaResult::CheckResponse_QuotaResult(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckResponse_QuotaResult.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.CheckResponse.QuotaResult)
}
CheckResponse_QuotaResult::CheckResponse_QuotaResult(const CheckResponse_QuotaResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_valid_duration()) {
    valid_duration_ = new ::google::protobuf::Duration(*from.valid_duration_);
  } else {
    valid_duration_ = NULL;
  }
  if (from.has_referenced_attributes()) {
    referenced_attributes_ = new ::istio::mixer::v1::ReferencedAttributes(*from.referenced_attributes_);
  } else {
    referenced_attributes_ = NULL;
  }
  granted_amount_ = from.granted_amount_;
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.CheckResponse.QuotaResult)
}

void CheckResponse_QuotaResult::SharedCtor() {
  ::memset(&valid_duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&granted_amount_) -
      reinterpret_cast<char*>(&valid_duration_)) + sizeof(granted_amount_));
}

CheckResponse_QuotaResult::~CheckResponse_QuotaResult() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.CheckResponse.QuotaResult)
  SharedDtor();
}

void CheckResponse_QuotaResult::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete valid_duration_;
  if (this != internal_default_instance()) delete referenced_attributes_;
}

void CheckResponse_QuotaResult::ArenaDtor(void* object) {
  CheckResponse_QuotaResult* _this = reinterpret_cast< CheckResponse_QuotaResult* >(object);
  (void)_this;
}
void CheckResponse_QuotaResult::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckResponse_QuotaResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckResponse_QuotaResult::descriptor() {
  ::protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckResponse_QuotaResult& CheckResponse_QuotaResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckResponse_QuotaResult.base);
  return *internal_default_instance();
}


void CheckResponse_QuotaResult::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.CheckResponse.QuotaResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && valid_duration_ != NULL) {
    delete valid_duration_;
  }
  valid_duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && referenced_attributes_ != NULL) {
    delete referenced_attributes_;
  }
  referenced_attributes_ = NULL;
  granted_amount_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool CheckResponse_QuotaResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.CheckResponse.QuotaResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Duration valid_duration = 1 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_valid_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 granted_amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &granted_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mixer.v1.ReferencedAttributes referenced_attributes = 5 [(.gogoproto.nullable) = false];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_referenced_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.CheckResponse.QuotaResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.CheckResponse.QuotaResult)
  return false;
#undef DO_
}

void CheckResponse_QuotaResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.CheckResponse.QuotaResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration valid_duration = 1 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  if (this->has_valid_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_valid_duration(), output);
  }

  // int64 granted_amount = 2;
  if (this->granted_amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->granted_amount(), output);
  }

  // .istio.mixer.v1.ReferencedAttributes referenced_attributes = 5 [(.gogoproto.nullable) = false];
  if (this->has_referenced_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_referenced_attributes(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.CheckResponse.QuotaResult)
}

::google::protobuf::uint8* CheckResponse_QuotaResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.CheckResponse.QuotaResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration valid_duration = 1 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  if (this->has_valid_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_valid_duration(), deterministic, target);
  }

  // int64 granted_amount = 2;
  if (this->granted_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->granted_amount(), target);
  }

  // .istio.mixer.v1.ReferencedAttributes referenced_attributes = 5 [(.gogoproto.nullable) = false];
  if (this->has_referenced_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_referenced_attributes(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.CheckResponse.QuotaResult)
  return target;
}

size_t CheckResponse_QuotaResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.CheckResponse.QuotaResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Duration valid_duration = 1 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  if (this->has_valid_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *valid_duration_);
  }

  // .istio.mixer.v1.ReferencedAttributes referenced_attributes = 5 [(.gogoproto.nullable) = false];
  if (this->has_referenced_attributes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *referenced_attributes_);
  }

  // int64 granted_amount = 2;
  if (this->granted_amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->granted_amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckResponse_QuotaResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.CheckResponse.QuotaResult)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckResponse_QuotaResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckResponse_QuotaResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.CheckResponse.QuotaResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.CheckResponse.QuotaResult)
    MergeFrom(*source);
  }
}

void CheckResponse_QuotaResult::MergeFrom(const CheckResponse_QuotaResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.CheckResponse.QuotaResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_valid_duration()) {
    mutable_valid_duration()->::google::protobuf::Duration::MergeFrom(from.valid_duration());
  }
  if (from.has_referenced_attributes()) {
    mutable_referenced_attributes()->::istio::mixer::v1::ReferencedAttributes::MergeFrom(from.referenced_attributes());
  }
  if (from.granted_amount() != 0) {
    set_granted_amount(from.granted_amount());
  }
}

void CheckResponse_QuotaResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.CheckResponse.QuotaResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckResponse_QuotaResult::CopyFrom(const CheckResponse_QuotaResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.CheckResponse.QuotaResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResponse_QuotaResult::IsInitialized() const {
  return true;
}

void CheckResponse_QuotaResult::Swap(CheckResponse_QuotaResult* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckResponse_QuotaResult* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckResponse_QuotaResult::UnsafeArenaSwap(CheckResponse_QuotaResult* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckResponse_QuotaResult::InternalSwap(CheckResponse_QuotaResult* other) {
  using std::swap;
  swap(valid_duration_, other->valid_duration_);
  swap(referenced_attributes_, other->referenced_attributes_);
  swap(granted_amount_, other->granted_amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckResponse_QuotaResult::GetMetadata() const {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

CheckResponse_QuotasEntry_DoNotUse::CheckResponse_QuotasEntry_DoNotUse() {}
CheckResponse_QuotasEntry_DoNotUse::CheckResponse_QuotasEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CheckResponse_QuotasEntry_DoNotUse::MergeFrom(const CheckResponse_QuotasEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CheckResponse_QuotasEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[5];
}
void CheckResponse_QuotasEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void CheckResponse::InitAsDefaultInstance() {
  ::istio::mixer::v1::_CheckResponse_default_instance_._instance.get_mutable()->precondition_ = const_cast< ::istio::mixer::v1::CheckResponse_PreconditionResult*>(
      ::istio::mixer::v1::CheckResponse_PreconditionResult::internal_default_instance());
}
void CheckResponse::unsafe_arena_set_allocated_precondition(
    ::istio::mixer::v1::CheckResponse_PreconditionResult* precondition) {
  if (GetArenaNoVirtual() == NULL) {
    delete precondition_;
  }
  precondition_ = precondition;
  if (precondition) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:istio.mixer.v1.CheckResponse.precondition)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckResponse::kPreconditionFieldNumber;
const int CheckResponse::kQuotasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckResponse::CheckResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.CheckResponse)
}
CheckResponse::CheckResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  quotas_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.CheckResponse)
}
CheckResponse::CheckResponse(const CheckResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quotas_.MergeFrom(from.quotas_);
  if (from.has_precondition()) {
    precondition_ = new ::istio::mixer::v1::CheckResponse_PreconditionResult(*from.precondition_);
  } else {
    precondition_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.CheckResponse)
}

void CheckResponse::SharedCtor() {
  precondition_ = NULL;
}

CheckResponse::~CheckResponse() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.CheckResponse)
  SharedDtor();
}

void CheckResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (this != internal_default_instance()) delete precondition_;
}

void CheckResponse::ArenaDtor(void* object) {
  CheckResponse* _this = reinterpret_cast< CheckResponse* >(object);
  (void)_this;
}
void CheckResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CheckResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CheckResponse::descriptor() {
  ::protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CheckResponse& CheckResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_CheckResponse.base);
  return *internal_default_instance();
}


void CheckResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.CheckResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quotas_.Clear();
  if (GetArenaNoVirtual() == NULL && precondition_ != NULL) {
    delete precondition_;
  }
  precondition_ = NULL;
  _internal_metadata_.Clear();
}

bool CheckResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.CheckResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .istio.mixer.v1.CheckResponse.PreconditionResult precondition = 2 [(.gogoproto.nullable) = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_precondition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .istio.mixer.v1.CheckResponse.QuotaResult> quotas = 3 [(.gogoproto.nullable) = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          CheckResponse_QuotasEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CheckResponse_QuotasEntry_DoNotUse,
              ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult > > parser(&quotas_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.CheckResponse.QuotasEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.CheckResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.CheckResponse)
  return false;
#undef DO_
}

void CheckResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.CheckResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.mixer.v1.CheckResponse.PreconditionResult precondition = 2 [(.gogoproto.nullable) = false];
  if (this->has_precondition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_precondition(), output);
  }

  // map<string, .istio.mixer.v1.CheckResponse.QuotaResult> quotas = 3 [(.gogoproto.nullable) = false];
  if (!this->quotas().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.v1.CheckResponse.QuotasEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->quotas().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->quotas().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CheckResponse_QuotasEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(quotas_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<CheckResponse_QuotasEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it) {
        entry.reset(quotas_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.CheckResponse)
}

::google::protobuf::uint8* CheckResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.CheckResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .istio.mixer.v1.CheckResponse.PreconditionResult precondition = 2 [(.gogoproto.nullable) = false];
  if (this->has_precondition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_precondition(), deterministic, target);
  }

  // map<string, .istio.mixer.v1.CheckResponse.QuotaResult> quotas = 3 [(.gogoproto.nullable) = false];
  if (!this->quotas().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.v1.CheckResponse.QuotasEntry.key");
      }
    };

    if (deterministic &&
        this->quotas().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->quotas().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CheckResponse_QuotasEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(quotas_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<CheckResponse_QuotasEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it) {
        entry.reset(quotas_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.CheckResponse)
  return target;
}

size_t CheckResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.CheckResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .istio.mixer.v1.CheckResponse.QuotaResult> quotas = 3 [(.gogoproto.nullable) = false];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->quotas_size());
  {
    ::std::unique_ptr<CheckResponse_QuotasEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::CheckResponse_QuotaResult >::const_iterator
        it = this->quotas().begin();
        it != this->quotas().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(quotas_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // .istio.mixer.v1.CheckResponse.PreconditionResult precondition = 2 [(.gogoproto.nullable) = false];
  if (this->has_precondition()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *precondition_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.CheckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.CheckResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.CheckResponse)
    MergeFrom(*source);
  }
}

void CheckResponse::MergeFrom(const CheckResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.CheckResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quotas_.MergeFrom(from.quotas_);
  if (from.has_precondition()) {
    mutable_precondition()->::istio::mixer::v1::CheckResponse_PreconditionResult::MergeFrom(from.precondition());
  }
}

void CheckResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.CheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckResponse::CopyFrom(const CheckResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.CheckResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckResponse::IsInitialized() const {
  return true;
}

void CheckResponse::Swap(CheckResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CheckResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CheckResponse::UnsafeArenaSwap(CheckResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CheckResponse::InternalSwap(CheckResponse* other) {
  using std::swap;
  quotas_.Swap(&other->quotas_);
  swap(precondition_, other->precondition_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CheckResponse::GetMetadata() const {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReferencedAttributes_AttributeMatch::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReferencedAttributes_AttributeMatch::kNameFieldNumber;
const int ReferencedAttributes_AttributeMatch::kConditionFieldNumber;
const int ReferencedAttributes_AttributeMatch::kRegexFieldNumber;
const int ReferencedAttributes_AttributeMatch::kMapKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReferencedAttributes_AttributeMatch::ReferencedAttributes_AttributeMatch()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReferencedAttributes_AttributeMatch.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
}
ReferencedAttributes_AttributeMatch::ReferencedAttributes_AttributeMatch(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReferencedAttributes_AttributeMatch.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
}
ReferencedAttributes_AttributeMatch::ReferencedAttributes_AttributeMatch(const ReferencedAttributes_AttributeMatch& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.regex().size() > 0) {
    regex_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.regex(),
      GetArenaNoVirtual());
  }
  ::memcpy(&name_, &from.name_,
    static_cast<size_t>(reinterpret_cast<char*>(&map_key_) -
    reinterpret_cast<char*>(&name_)) + sizeof(map_key_));
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
}

void ReferencedAttributes_AttributeMatch::SharedCtor() {
  regex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&map_key_) -
      reinterpret_cast<char*>(&name_)) + sizeof(map_key_));
}

ReferencedAttributes_AttributeMatch::~ReferencedAttributes_AttributeMatch() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
  SharedDtor();
}

void ReferencedAttributes_AttributeMatch::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  regex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReferencedAttributes_AttributeMatch::ArenaDtor(void* object) {
  ReferencedAttributes_AttributeMatch* _this = reinterpret_cast< ReferencedAttributes_AttributeMatch* >(object);
  (void)_this;
}
void ReferencedAttributes_AttributeMatch::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReferencedAttributes_AttributeMatch::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReferencedAttributes_AttributeMatch::descriptor() {
  ::protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReferencedAttributes_AttributeMatch& ReferencedAttributes_AttributeMatch::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReferencedAttributes_AttributeMatch.base);
  return *internal_default_instance();
}


void ReferencedAttributes_AttributeMatch::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  regex_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&map_key_) -
      reinterpret_cast<char*>(&name_)) + sizeof(map_key_));
  _internal_metadata_.Clear();
}

bool ReferencedAttributes_AttributeMatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // sint32 name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &name_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mixer.v1.ReferencedAttributes.Condition condition = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_condition(static_cast< ::istio::mixer::v1::ReferencedAttributes_Condition >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string regex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->regex().data(), static_cast<int>(this->regex().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.ReferencedAttributes.AttributeMatch.regex"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 map_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &map_key_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
  return false;
#undef DO_
}

void ReferencedAttributes_AttributeMatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 name = 1;
  if (this->name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(1, this->name(), output);
  }

  // .istio.mixer.v1.ReferencedAttributes.Condition condition = 2;
  if (this->condition() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->condition(), output);
  }

  // string regex = 3;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.ReferencedAttributes.AttributeMatch.regex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->regex(), output);
  }

  // sint32 map_key = 4;
  if (this->map_key() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(4, this->map_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
}

::google::protobuf::uint8* ReferencedAttributes_AttributeMatch::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // sint32 name = 1;
  if (this->name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(1, this->name(), target);
  }

  // .istio.mixer.v1.ReferencedAttributes.Condition condition = 2;
  if (this->condition() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->condition(), target);
  }

  // string regex = 3;
  if (this->regex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->regex().data(), static_cast<int>(this->regex().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.ReferencedAttributes.AttributeMatch.regex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->regex(), target);
  }

  // sint32 map_key = 4;
  if (this->map_key() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(4, this->map_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
  return target;
}

size_t ReferencedAttributes_AttributeMatch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string regex = 3;
  if (this->regex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->regex());
  }

  // sint32 name = 1;
  if (this->name() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->name());
  }

  // .istio.mixer.v1.ReferencedAttributes.Condition condition = 2;
  if (this->condition() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->condition());
  }

  // sint32 map_key = 4;
  if (this->map_key() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->map_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReferencedAttributes_AttributeMatch::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
  GOOGLE_DCHECK_NE(&from, this);
  const ReferencedAttributes_AttributeMatch* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReferencedAttributes_AttributeMatch>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
    MergeFrom(*source);
  }
}

void ReferencedAttributes_AttributeMatch::MergeFrom(const ReferencedAttributes_AttributeMatch& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.regex().size() > 0) {
    set_regex(from.regex());
  }
  if (from.name() != 0) {
    set_name(from.name());
  }
  if (from.condition() != 0) {
    set_condition(from.condition());
  }
  if (from.map_key() != 0) {
    set_map_key(from.map_key());
  }
}

void ReferencedAttributes_AttributeMatch::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReferencedAttributes_AttributeMatch::CopyFrom(const ReferencedAttributes_AttributeMatch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.ReferencedAttributes.AttributeMatch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReferencedAttributes_AttributeMatch::IsInitialized() const {
  return true;
}

void ReferencedAttributes_AttributeMatch::Swap(ReferencedAttributes_AttributeMatch* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReferencedAttributes_AttributeMatch* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReferencedAttributes_AttributeMatch::UnsafeArenaSwap(ReferencedAttributes_AttributeMatch* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReferencedAttributes_AttributeMatch::InternalSwap(ReferencedAttributes_AttributeMatch* other) {
  using std::swap;
  regex_.Swap(&other->regex_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(name_, other->name_);
  swap(condition_, other->condition_);
  swap(map_key_, other->map_key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReferencedAttributes_AttributeMatch::GetMetadata() const {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReferencedAttributes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReferencedAttributes::kWordsFieldNumber;
const int ReferencedAttributes::kAttributeMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReferencedAttributes::ReferencedAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReferencedAttributes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.ReferencedAttributes)
}
ReferencedAttributes::ReferencedAttributes(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  words_(arena),
  attribute_matches_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReferencedAttributes.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.ReferencedAttributes)
}
ReferencedAttributes::ReferencedAttributes(const ReferencedAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      words_(from.words_),
      attribute_matches_(from.attribute_matches_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.ReferencedAttributes)
}

void ReferencedAttributes::SharedCtor() {
}

ReferencedAttributes::~ReferencedAttributes() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.ReferencedAttributes)
  SharedDtor();
}

void ReferencedAttributes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ReferencedAttributes::ArenaDtor(void* object) {
  ReferencedAttributes* _this = reinterpret_cast< ReferencedAttributes* >(object);
  (void)_this;
}
void ReferencedAttributes::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReferencedAttributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReferencedAttributes::descriptor() {
  ::protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReferencedAttributes& ReferencedAttributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReferencedAttributes.base);
  return *internal_default_instance();
}


void ReferencedAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.ReferencedAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  words_.Clear();
  attribute_matches_.Clear();
  _internal_metadata_.Clear();
}

bool ReferencedAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.ReferencedAttributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string words = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_words()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->words(this->words_size() - 1).data(),
            static_cast<int>(this->words(this->words_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.ReferencedAttributes.words"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.mixer.v1.ReferencedAttributes.AttributeMatch attribute_matches = 2 [(.gogoproto.nullable) = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attribute_matches()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.ReferencedAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.ReferencedAttributes)
  return false;
#undef DO_
}

void ReferencedAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.ReferencedAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string words = 1;
  for (int i = 0, n = this->words_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->words(i).data(), static_cast<int>(this->words(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.ReferencedAttributes.words");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->words(i), output);
  }

  // repeated .istio.mixer.v1.ReferencedAttributes.AttributeMatch attribute_matches = 2 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attribute_matches_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->attribute_matches(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.ReferencedAttributes)
}

::google::protobuf::uint8* ReferencedAttributes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.ReferencedAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string words = 1;
  for (int i = 0, n = this->words_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->words(i).data(), static_cast<int>(this->words(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.ReferencedAttributes.words");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->words(i), target);
  }

  // repeated .istio.mixer.v1.ReferencedAttributes.AttributeMatch attribute_matches = 2 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attribute_matches_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->attribute_matches(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.ReferencedAttributes)
  return target;
}

size_t ReferencedAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.ReferencedAttributes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string words = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->words_size());
  for (int i = 0, n = this->words_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->words(i));
  }

  // repeated .istio.mixer.v1.ReferencedAttributes.AttributeMatch attribute_matches = 2 [(.gogoproto.nullable) = false];
  {
    unsigned int count = static_cast<unsigned int>(this->attribute_matches_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attribute_matches(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReferencedAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.ReferencedAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const ReferencedAttributes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReferencedAttributes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.ReferencedAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.ReferencedAttributes)
    MergeFrom(*source);
  }
}

void ReferencedAttributes::MergeFrom(const ReferencedAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.ReferencedAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  words_.MergeFrom(from.words_);
  attribute_matches_.MergeFrom(from.attribute_matches_);
}

void ReferencedAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.ReferencedAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReferencedAttributes::CopyFrom(const ReferencedAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.ReferencedAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReferencedAttributes::IsInitialized() const {
  return true;
}

void ReferencedAttributes::Swap(ReferencedAttributes* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReferencedAttributes* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReferencedAttributes::UnsafeArenaSwap(ReferencedAttributes* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReferencedAttributes::InternalSwap(ReferencedAttributes* other) {
  using std::swap;
  words_.InternalSwap(CastToBase(&other->words_));
  CastToBase(&attribute_matches_)->InternalSwap(CastToBase(&other->attribute_matches_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReferencedAttributes::GetMetadata() const {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeaderOperation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeaderOperation::kNameFieldNumber;
const int HeaderOperation::kValueFieldNumber;
const int HeaderOperation::kOperationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeaderOperation::HeaderOperation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_HeaderOperation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.HeaderOperation)
}
HeaderOperation::HeaderOperation(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_HeaderOperation.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.HeaderOperation)
}
HeaderOperation::HeaderOperation(const HeaderOperation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name(),
      GetArenaNoVirtual());
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value(),
      GetArenaNoVirtual());
  }
  operation_ = from.operation_;
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.HeaderOperation)
}

void HeaderOperation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  operation_ = 0;
}

HeaderOperation::~HeaderOperation() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.HeaderOperation)
  SharedDtor();
}

void HeaderOperation::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void HeaderOperation::ArenaDtor(void* object) {
  HeaderOperation* _this = reinterpret_cast< HeaderOperation* >(object);
  (void)_this;
}
void HeaderOperation::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void HeaderOperation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HeaderOperation::descriptor() {
  ::protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeaderOperation& HeaderOperation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_HeaderOperation.base);
  return *internal_default_instance();
}


void HeaderOperation::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.HeaderOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  operation_ = 0;
  _internal_metadata_.Clear();
}

bool HeaderOperation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.HeaderOperation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.HeaderOperation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.HeaderOperation.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mixer.v1.HeaderOperation.Operation operation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_operation(static_cast< ::istio::mixer::v1::HeaderOperation_Operation >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.HeaderOperation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.HeaderOperation)
  return false;
#undef DO_
}

void HeaderOperation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.HeaderOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.HeaderOperation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.HeaderOperation.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // .istio.mixer.v1.HeaderOperation.Operation operation = 3;
  if (this->operation() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->operation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.HeaderOperation)
}

::google::protobuf::uint8* HeaderOperation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.HeaderOperation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.HeaderOperation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.HeaderOperation.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // .istio.mixer.v1.HeaderOperation.Operation operation = 3;
  if (this->operation() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->operation(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.HeaderOperation)
  return target;
}

size_t HeaderOperation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.HeaderOperation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // .istio.mixer.v1.HeaderOperation.Operation operation = 3;
  if (this->operation() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->operation());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeaderOperation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.HeaderOperation)
  GOOGLE_DCHECK_NE(&from, this);
  const HeaderOperation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeaderOperation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.HeaderOperation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.HeaderOperation)
    MergeFrom(*source);
  }
}

void HeaderOperation::MergeFrom(const HeaderOperation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.HeaderOperation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    set_name(from.name());
  }
  if (from.value().size() > 0) {
    set_value(from.value());
  }
  if (from.operation() != 0) {
    set_operation(from.operation());
  }
}

void HeaderOperation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.HeaderOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeaderOperation::CopyFrom(const HeaderOperation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.HeaderOperation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeaderOperation::IsInitialized() const {
  return true;
}

void HeaderOperation::Swap(HeaderOperation* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    HeaderOperation* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void HeaderOperation::UnsafeArenaSwap(HeaderOperation* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void HeaderOperation::InternalSwap(HeaderOperation* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(operation_, other->operation_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HeaderOperation::GetMetadata() const {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RouteDirective::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RouteDirective::kRequestHeaderOperationsFieldNumber;
const int RouteDirective::kResponseHeaderOperationsFieldNumber;
const int RouteDirective::kDirectResponseCodeFieldNumber;
const int RouteDirective::kDirectResponseBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RouteDirective::RouteDirective()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_RouteDirective.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.RouteDirective)
}
RouteDirective::RouteDirective(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  request_header_operations_(arena),
  response_header_operations_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_RouteDirective.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.RouteDirective)
}
RouteDirective::RouteDirective(const RouteDirective& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      request_header_operations_(from.request_header_operations_),
      response_header_operations_(from.response_header_operations_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  direct_response_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.direct_response_body().size() > 0) {
    direct_response_body_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.direct_response_body(),
      GetArenaNoVirtual());
  }
  direct_response_code_ = from.direct_response_code_;
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.RouteDirective)
}

void RouteDirective::SharedCtor() {
  direct_response_body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  direct_response_code_ = 0u;
}

RouteDirective::~RouteDirective() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.RouteDirective)
  SharedDtor();
}

void RouteDirective::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  direct_response_body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RouteDirective::ArenaDtor(void* object) {
  RouteDirective* _this = reinterpret_cast< RouteDirective* >(object);
  (void)_this;
}
void RouteDirective::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void RouteDirective::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RouteDirective::descriptor() {
  ::protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RouteDirective& RouteDirective::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_RouteDirective.base);
  return *internal_default_instance();
}


void RouteDirective::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.RouteDirective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  request_header_operations_.Clear();
  response_header_operations_.Clear();
  direct_response_body_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
  direct_response_code_ = 0u;
  _internal_metadata_.Clear();
}

bool RouteDirective::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.RouteDirective)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .istio.mixer.v1.HeaderOperation request_header_operations = 1 [(.gogoproto.nullable) = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_request_header_operations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .istio.mixer.v1.HeaderOperation response_header_operations = 2 [(.gogoproto.nullable) = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_response_header_operations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 direct_response_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &direct_response_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string direct_response_body = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_direct_response_body()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->direct_response_body().data(), static_cast<int>(this->direct_response_body().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.RouteDirective.direct_response_body"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.RouteDirective)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.RouteDirective)
  return false;
#undef DO_
}

void RouteDirective::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.RouteDirective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.HeaderOperation request_header_operations = 1 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->request_header_operations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->request_header_operations(static_cast<int>(i)),
      output);
  }

  // repeated .istio.mixer.v1.HeaderOperation response_header_operations = 2 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->response_header_operations_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->response_header_operations(static_cast<int>(i)),
      output);
  }

  // uint32 direct_response_code = 3;
  if (this->direct_response_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->direct_response_code(), output);
  }

  // string direct_response_body = 4;
  if (this->direct_response_body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->direct_response_body().data(), static_cast<int>(this->direct_response_body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.RouteDirective.direct_response_body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->direct_response_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.RouteDirective)
}

::google::protobuf::uint8* RouteDirective::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.RouteDirective)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.HeaderOperation request_header_operations = 1 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->request_header_operations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->request_header_operations(static_cast<int>(i)), deterministic, target);
  }

  // repeated .istio.mixer.v1.HeaderOperation response_header_operations = 2 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->response_header_operations_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->response_header_operations(static_cast<int>(i)), deterministic, target);
  }

  // uint32 direct_response_code = 3;
  if (this->direct_response_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->direct_response_code(), target);
  }

  // string direct_response_body = 4;
  if (this->direct_response_body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->direct_response_body().data(), static_cast<int>(this->direct_response_body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.RouteDirective.direct_response_body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->direct_response_body(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.RouteDirective)
  return target;
}

size_t RouteDirective::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.RouteDirective)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.mixer.v1.HeaderOperation request_header_operations = 1 [(.gogoproto.nullable) = false];
  {
    unsigned int count = static_cast<unsigned int>(this->request_header_operations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->request_header_operations(static_cast<int>(i)));
    }
  }

  // repeated .istio.mixer.v1.HeaderOperation response_header_operations = 2 [(.gogoproto.nullable) = false];
  {
    unsigned int count = static_cast<unsigned int>(this->response_header_operations_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->response_header_operations(static_cast<int>(i)));
    }
  }

  // string direct_response_body = 4;
  if (this->direct_response_body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->direct_response_body());
  }

  // uint32 direct_response_code = 3;
  if (this->direct_response_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->direct_response_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RouteDirective::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.RouteDirective)
  GOOGLE_DCHECK_NE(&from, this);
  const RouteDirective* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RouteDirective>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.RouteDirective)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.RouteDirective)
    MergeFrom(*source);
  }
}

void RouteDirective::MergeFrom(const RouteDirective& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.RouteDirective)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  request_header_operations_.MergeFrom(from.request_header_operations_);
  response_header_operations_.MergeFrom(from.response_header_operations_);
  if (from.direct_response_body().size() > 0) {
    set_direct_response_body(from.direct_response_body());
  }
  if (from.direct_response_code() != 0) {
    set_direct_response_code(from.direct_response_code());
  }
}

void RouteDirective::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.RouteDirective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouteDirective::CopyFrom(const RouteDirective& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.RouteDirective)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouteDirective::IsInitialized() const {
  return true;
}

void RouteDirective::Swap(RouteDirective* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    RouteDirective* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void RouteDirective::UnsafeArenaSwap(RouteDirective* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void RouteDirective::InternalSwap(RouteDirective* other) {
  using std::swap;
  CastToBase(&request_header_operations_)->InternalSwap(CastToBase(&other->request_header_operations_));
  CastToBase(&response_header_operations_)->InternalSwap(CastToBase(&other->response_header_operations_));
  direct_response_body_.Swap(&other->direct_response_body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(direct_response_code_, other->direct_response_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RouteDirective::GetMetadata() const {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportRequest::InitAsDefaultInstance() {
}
void ReportRequest::clear_attributes() {
  attributes_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReportRequest::kAttributesFieldNumber;
const int ReportRequest::kRepeatedAttributesSemanticsFieldNumber;
const int ReportRequest::kDefaultWordsFieldNumber;
const int ReportRequest::kGlobalWordCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportRequest::ReportRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReportRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.ReportRequest)
}
ReportRequest::ReportRequest(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  attributes_(arena),
  default_words_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReportRequest.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.ReportRequest)
}
ReportRequest::ReportRequest(const ReportRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      attributes_(from.attributes_),
      default_words_(from.default_words_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&global_word_count_, &from.global_word_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&repeated_attributes_semantics_) -
    reinterpret_cast<char*>(&global_word_count_)) + sizeof(repeated_attributes_semantics_));
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.ReportRequest)
}

void ReportRequest::SharedCtor() {
  ::memset(&global_word_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&repeated_attributes_semantics_) -
      reinterpret_cast<char*>(&global_word_count_)) + sizeof(repeated_attributes_semantics_));
}

ReportRequest::~ReportRequest() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.ReportRequest)
  SharedDtor();
}

void ReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ReportRequest::ArenaDtor(void* object) {
  ReportRequest* _this = reinterpret_cast< ReportRequest* >(object);
  (void)_this;
}
void ReportRequest::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportRequest::descriptor() {
  ::protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportRequest& ReportRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReportRequest.base);
  return *internal_default_instance();
}


void ReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.ReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  default_words_.Clear();
  ::memset(&global_word_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&repeated_attributes_semantics_) -
      reinterpret_cast<char*>(&global_word_count_)) + sizeof(repeated_attributes_semantics_));
  _internal_metadata_.Clear();
}

bool ReportRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.ReportRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .istio.mixer.v1.CompressedAttributes attributes = 1 [(.gogoproto.nullable) = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_attributes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string default_words = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_default_words()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->default_words(this->default_words_size() - 1).data(),
            static_cast<int>(this->default_words(this->default_words_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.ReportRequest.default_words"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 global_word_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &global_word_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mixer.v1.ReportRequest.RepeatedAttributesSemantics repeated_attributes_semantics = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_repeated_attributes_semantics(static_cast< ::istio::mixer::v1::ReportRequest_RepeatedAttributesSemantics >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.ReportRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.ReportRequest)
  return false;
#undef DO_
}

void ReportRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.ReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.CompressedAttributes attributes = 1 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->attributes(static_cast<int>(i)),
      output);
  }

  // repeated string default_words = 2;
  for (int i = 0, n = this->default_words_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_words(i).data(), static_cast<int>(this->default_words(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.ReportRequest.default_words");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->default_words(i), output);
  }

  // uint32 global_word_count = 3;
  if (this->global_word_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->global_word_count(), output);
  }

  // .istio.mixer.v1.ReportRequest.RepeatedAttributesSemantics repeated_attributes_semantics = 4;
  if (this->repeated_attributes_semantics() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->repeated_attributes_semantics(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.ReportRequest)
}

::google::protobuf::uint8* ReportRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.ReportRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .istio.mixer.v1.CompressedAttributes attributes = 1 [(.gogoproto.nullable) = false];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->attributes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->attributes(static_cast<int>(i)), deterministic, target);
  }

  // repeated string default_words = 2;
  for (int i = 0, n = this->default_words_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->default_words(i).data(), static_cast<int>(this->default_words(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.ReportRequest.default_words");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->default_words(i), target);
  }

  // uint32 global_word_count = 3;
  if (this->global_word_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->global_word_count(), target);
  }

  // .istio.mixer.v1.ReportRequest.RepeatedAttributesSemantics repeated_attributes_semantics = 4;
  if (this->repeated_attributes_semantics() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->repeated_attributes_semantics(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.ReportRequest)
  return target;
}

size_t ReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.ReportRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .istio.mixer.v1.CompressedAttributes attributes = 1 [(.gogoproto.nullable) = false];
  {
    unsigned int count = static_cast<unsigned int>(this->attributes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->attributes(static_cast<int>(i)));
    }
  }

  // repeated string default_words = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->default_words_size());
  for (int i = 0, n = this->default_words_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->default_words(i));
  }

  // uint32 global_word_count = 3;
  if (this->global_word_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->global_word_count());
  }

  // .istio.mixer.v1.ReportRequest.RepeatedAttributesSemantics repeated_attributes_semantics = 4;
  if (this->repeated_attributes_semantics() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->repeated_attributes_semantics());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.ReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.ReportRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.ReportRequest)
    MergeFrom(*source);
  }
}

void ReportRequest::MergeFrom(const ReportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.ReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
  default_words_.MergeFrom(from.default_words_);
  if (from.global_word_count() != 0) {
    set_global_word_count(from.global_word_count());
  }
  if (from.repeated_attributes_semantics() != 0) {
    set_repeated_attributes_semantics(from.repeated_attributes_semantics());
  }
}

void ReportRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.ReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportRequest::CopyFrom(const ReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.ReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportRequest::IsInitialized() const {
  return true;
}

void ReportRequest::Swap(ReportRequest* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReportRequest* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReportRequest::UnsafeArenaSwap(ReportRequest* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReportRequest::InternalSwap(ReportRequest* other) {
  using std::swap;
  CastToBase(&attributes_)->InternalSwap(CastToBase(&other->attributes_));
  default_words_.InternalSwap(CastToBase(&other->default_words_));
  swap(global_word_count_, other->global_word_count_);
  swap(repeated_attributes_semantics_, other->repeated_attributes_semantics_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportRequest::GetMetadata() const {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReportResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReportResponse::ReportResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReportResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.ReportResponse)
}
ReportResponse::ReportResponse(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReportResponse.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.ReportResponse)
}
ReportResponse::ReportResponse(const ReportResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.ReportResponse)
}

void ReportResponse::SharedCtor() {
}

ReportResponse::~ReportResponse() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.ReportResponse)
  SharedDtor();
}

void ReportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void ReportResponse::ArenaDtor(void* object) {
  ReportResponse* _this = reinterpret_cast< ReportResponse* >(object);
  (void)_this;
}
void ReportResponse::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void ReportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReportResponse::descriptor() {
  ::protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReportResponse& ReportResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fmixer_2eproto::scc_info_ReportResponse.base);
  return *internal_default_instance();
}


void ReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.ReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ReportResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.ReportResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.ReportResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.ReportResponse)
  return false;
#undef DO_
}

void ReportResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.ReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.ReportResponse)
}

::google::protobuf::uint8* ReportResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.ReportResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.ReportResponse)
  return target;
}

size_t ReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.ReportResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReportResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.ReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReportResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReportResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.ReportResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.ReportResponse)
    MergeFrom(*source);
  }
}

void ReportResponse::MergeFrom(const ReportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.ReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReportResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.ReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReportResponse::CopyFrom(const ReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.ReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReportResponse::IsInitialized() const {
  return true;
}

void ReportResponse::Swap(ReportResponse* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    ReportResponse* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void ReportResponse::UnsafeArenaSwap(ReportResponse* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void ReportResponse::InternalSwap(ReportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReportResponse::GetMetadata() const {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fmixer_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Mixer::~Mixer() {}

const ::google::protobuf::ServiceDescriptor* Mixer::descriptor() {
  protobuf_mixer_2fv1_2fmixer_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fv1_2fmixer_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* Mixer::GetDescriptor() {
  return descriptor();
}

void Mixer::Check(::google::protobuf::RpcController* controller,
                         const ::istio::mixer::v1::CheckRequest*,
                         ::istio::mixer::v1::CheckResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Check() not implemented.");
  done->Run();
}

void Mixer::Report(::google::protobuf::RpcController* controller,
                         const ::istio::mixer::v1::ReportRequest*,
                         ::istio::mixer::v1::ReportResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Report() not implemented.");
  done->Run();
}

void Mixer::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_mixer_2fv1_2fmixer_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      Check(controller,
             ::google::protobuf::down_cast<const ::istio::mixer::v1::CheckRequest*>(request),
             ::google::protobuf::down_cast< ::istio::mixer::v1::CheckResponse*>(response),
             done);
      break;
    case 1:
      Report(controller,
             ::google::protobuf::down_cast<const ::istio::mixer::v1::ReportRequest*>(request),
             ::google::protobuf::down_cast< ::istio::mixer::v1::ReportResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& Mixer::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::istio::mixer::v1::CheckRequest::default_instance();
    case 1:
      return ::istio::mixer::v1::ReportRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& Mixer::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::istio::mixer::v1::CheckResponse::default_instance();
    case 1:
      return ::istio::mixer::v1::ReportResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

Mixer_Stub::Mixer_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
Mixer_Stub::Mixer_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
Mixer_Stub::~Mixer_Stub() {
  if (owns_channel_) delete channel_;
}

void Mixer_Stub::Check(::google::protobuf::RpcController* controller,
                              const ::istio::mixer::v1::CheckRequest* request,
                              ::istio::mixer::v1::CheckResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void Mixer_Stub::Report(::google::protobuf::RpcController* controller,
                              const ::istio::mixer::v1::ReportRequest* request,
                              ::istio::mixer::v1::ReportResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace mixer
}  // namespace istio
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CheckRequest_QuotaParams* Arena::CreateMaybeMessage< ::istio::mixer::v1::CheckRequest_QuotaParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CheckRequest_QuotaParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CheckRequest_QuotasEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::v1::CheckRequest_QuotasEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CheckRequest_QuotasEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CheckRequest* Arena::CreateMaybeMessage< ::istio::mixer::v1::CheckRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CheckRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CheckResponse_PreconditionResult* Arena::CreateMaybeMessage< ::istio::mixer::v1::CheckResponse_PreconditionResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CheckResponse_PreconditionResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CheckResponse_QuotaResult* Arena::CreateMaybeMessage< ::istio::mixer::v1::CheckResponse_QuotaResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CheckResponse_QuotaResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CheckResponse_QuotasEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::v1::CheckResponse_QuotasEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CheckResponse_QuotasEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CheckResponse* Arena::CreateMaybeMessage< ::istio::mixer::v1::CheckResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CheckResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::ReferencedAttributes_AttributeMatch* Arena::CreateMaybeMessage< ::istio::mixer::v1::ReferencedAttributes_AttributeMatch >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::ReferencedAttributes_AttributeMatch >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::ReferencedAttributes* Arena::CreateMaybeMessage< ::istio::mixer::v1::ReferencedAttributes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::ReferencedAttributes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::HeaderOperation* Arena::CreateMaybeMessage< ::istio::mixer::v1::HeaderOperation >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::HeaderOperation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::RouteDirective* Arena::CreateMaybeMessage< ::istio::mixer::v1::RouteDirective >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::RouteDirective >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::ReportRequest* Arena::CreateMaybeMessage< ::istio::mixer::v1::ReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::ReportRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::ReportResponse* Arena::CreateMaybeMessage< ::istio::mixer::v1::ReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::ReportResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
