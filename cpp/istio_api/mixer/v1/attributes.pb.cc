// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/v1/attributes.proto

#include "mixer/v1/attributes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace protobuf_mixer_2fv1_2fattributes_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Attributes_StringMap_EntriesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CompressedAttributes_BoolsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CompressedAttributes_BytesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CompressedAttributes_DoublesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CompressedAttributes_Int64sEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CompressedAttributes_StringsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_StringMap_EntriesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Attributes_AttributesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Attributes_StringMap;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CompressedAttributes_DurationsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CompressedAttributes_StringMapsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CompressedAttributes_TimestampsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StringMap;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fv1_2fattributes_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Attributes_AttributeValue;
}  // namespace protobuf_mixer_2fv1_2fattributes_2eproto
namespace istio {
namespace mixer {
namespace v1 {
class Attributes_AttributesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Attributes_AttributesEntry_DoNotUse>
      _instance;
} _Attributes_AttributesEntry_DoNotUse_default_instance_;
class Attributes_AttributeValueDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Attributes_AttributeValue>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  ::google::protobuf::int64 int64_value_;
  double double_value_;
  bool bool_value_;
  ::google::protobuf::internal::ArenaStringPtr bytes_value_;
  const ::google::protobuf::Timestamp* timestamp_value_;
  const ::google::protobuf::Duration* duration_value_;
  const ::istio::mixer::v1::Attributes_StringMap* string_map_value_;
} _Attributes_AttributeValue_default_instance_;
class Attributes_StringMap_EntriesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Attributes_StringMap_EntriesEntry_DoNotUse>
      _instance;
} _Attributes_StringMap_EntriesEntry_DoNotUse_default_instance_;
class Attributes_StringMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Attributes_StringMap>
      _instance;
} _Attributes_StringMap_default_instance_;
class AttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Attributes>
      _instance;
} _Attributes_default_instance_;
class CompressedAttributes_StringsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompressedAttributes_StringsEntry_DoNotUse>
      _instance;
} _CompressedAttributes_StringsEntry_DoNotUse_default_instance_;
class CompressedAttributes_Int64sEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompressedAttributes_Int64sEntry_DoNotUse>
      _instance;
} _CompressedAttributes_Int64sEntry_DoNotUse_default_instance_;
class CompressedAttributes_DoublesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompressedAttributes_DoublesEntry_DoNotUse>
      _instance;
} _CompressedAttributes_DoublesEntry_DoNotUse_default_instance_;
class CompressedAttributes_BoolsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompressedAttributes_BoolsEntry_DoNotUse>
      _instance;
} _CompressedAttributes_BoolsEntry_DoNotUse_default_instance_;
class CompressedAttributes_TimestampsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompressedAttributes_TimestampsEntry_DoNotUse>
      _instance;
} _CompressedAttributes_TimestampsEntry_DoNotUse_default_instance_;
class CompressedAttributes_DurationsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompressedAttributes_DurationsEntry_DoNotUse>
      _instance;
} _CompressedAttributes_DurationsEntry_DoNotUse_default_instance_;
class CompressedAttributes_BytesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompressedAttributes_BytesEntry_DoNotUse>
      _instance;
} _CompressedAttributes_BytesEntry_DoNotUse_default_instance_;
class CompressedAttributes_StringMapsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompressedAttributes_StringMapsEntry_DoNotUse>
      _instance;
} _CompressedAttributes_StringMapsEntry_DoNotUse_default_instance_;
class CompressedAttributesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompressedAttributes>
      _instance;
} _CompressedAttributes_default_instance_;
class StringMap_EntriesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringMap_EntriesEntry_DoNotUse>
      _instance;
} _StringMap_EntriesEntry_DoNotUse_default_instance_;
class StringMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringMap>
      _instance;
} _StringMap_default_instance_;
}  // namespace v1
}  // namespace mixer
}  // namespace istio
namespace protobuf_mixer_2fv1_2fattributes_2eproto {
static void InitDefaultsAttributes_AttributesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_Attributes_AttributesEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::Attributes_AttributesEntry_DoNotUse();
  }
  ::istio::mixer::v1::Attributes_AttributesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Attributes_AttributesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAttributes_AttributesEntry_DoNotUse}, {
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_Attributes_AttributeValue.base,}};

static void InitDefaultsAttributes_AttributeValue() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_Attributes_AttributeValue_default_instance_;
    new (ptr) ::istio::mixer::v1::Attributes_AttributeValue();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::Attributes_AttributeValue::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Attributes_AttributeValue =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAttributes_AttributeValue}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_Attributes_StringMap.base,}};

static void InitDefaultsAttributes_StringMap_EntriesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_Attributes_StringMap_EntriesEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::Attributes_StringMap_EntriesEntry_DoNotUse();
  }
  ::istio::mixer::v1::Attributes_StringMap_EntriesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Attributes_StringMap_EntriesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAttributes_StringMap_EntriesEntry_DoNotUse}, {}};

static void InitDefaultsAttributes_StringMap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_Attributes_StringMap_default_instance_;
    new (ptr) ::istio::mixer::v1::Attributes_StringMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::Attributes_StringMap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Attributes_StringMap =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAttributes_StringMap}, {
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_Attributes_StringMap_EntriesEntry_DoNotUse.base,}};

static void InitDefaultsAttributes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_Attributes_default_instance_;
    new (ptr) ::istio::mixer::v1::Attributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::Attributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Attributes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAttributes}, {
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_Attributes_AttributesEntry_DoNotUse.base,}};

static void InitDefaultsCompressedAttributes_StringsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CompressedAttributes_StringsEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::CompressedAttributes_StringsEntry_DoNotUse();
  }
  ::istio::mixer::v1::CompressedAttributes_StringsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompressedAttributes_StringsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompressedAttributes_StringsEntry_DoNotUse}, {}};

static void InitDefaultsCompressedAttributes_Int64sEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CompressedAttributes_Int64sEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::CompressedAttributes_Int64sEntry_DoNotUse();
  }
  ::istio::mixer::v1::CompressedAttributes_Int64sEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompressedAttributes_Int64sEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompressedAttributes_Int64sEntry_DoNotUse}, {}};

static void InitDefaultsCompressedAttributes_DoublesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CompressedAttributes_DoublesEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::CompressedAttributes_DoublesEntry_DoNotUse();
  }
  ::istio::mixer::v1::CompressedAttributes_DoublesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompressedAttributes_DoublesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompressedAttributes_DoublesEntry_DoNotUse}, {}};

static void InitDefaultsCompressedAttributes_BoolsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CompressedAttributes_BoolsEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::CompressedAttributes_BoolsEntry_DoNotUse();
  }
  ::istio::mixer::v1::CompressedAttributes_BoolsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompressedAttributes_BoolsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompressedAttributes_BoolsEntry_DoNotUse}, {}};

static void InitDefaultsCompressedAttributes_TimestampsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CompressedAttributes_TimestampsEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::CompressedAttributes_TimestampsEntry_DoNotUse();
  }
  ::istio::mixer::v1::CompressedAttributes_TimestampsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CompressedAttributes_TimestampsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCompressedAttributes_TimestampsEntry_DoNotUse}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,}};

static void InitDefaultsCompressedAttributes_DurationsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CompressedAttributes_DurationsEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::CompressedAttributes_DurationsEntry_DoNotUse();
  }
  ::istio::mixer::v1::CompressedAttributes_DurationsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CompressedAttributes_DurationsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCompressedAttributes_DurationsEntry_DoNotUse}, {
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,}};

static void InitDefaultsCompressedAttributes_BytesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CompressedAttributes_BytesEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::CompressedAttributes_BytesEntry_DoNotUse();
  }
  ::istio::mixer::v1::CompressedAttributes_BytesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompressedAttributes_BytesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompressedAttributes_BytesEntry_DoNotUse}, {}};

static void InitDefaultsCompressedAttributes_StringMapsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CompressedAttributes_StringMapsEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::CompressedAttributes_StringMapsEntry_DoNotUse();
  }
  ::istio::mixer::v1::CompressedAttributes_StringMapsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CompressedAttributes_StringMapsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCompressedAttributes_StringMapsEntry_DoNotUse}, {
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_StringMap.base,}};

static void InitDefaultsCompressedAttributes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_CompressedAttributes_default_instance_;
    new (ptr) ::istio::mixer::v1::CompressedAttributes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::CompressedAttributes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<8> scc_info_CompressedAttributes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 8, InitDefaultsCompressedAttributes}, {
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_CompressedAttributes_StringsEntry_DoNotUse.base,
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_CompressedAttributes_Int64sEntry_DoNotUse.base,
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_CompressedAttributes_DoublesEntry_DoNotUse.base,
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_CompressedAttributes_BoolsEntry_DoNotUse.base,
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_CompressedAttributes_TimestampsEntry_DoNotUse.base,
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_CompressedAttributes_DurationsEntry_DoNotUse.base,
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_CompressedAttributes_BytesEntry_DoNotUse.base,
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_CompressedAttributes_StringMapsEntry_DoNotUse.base,}};

static void InitDefaultsStringMap_EntriesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_StringMap_EntriesEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::v1::StringMap_EntriesEntry_DoNotUse();
  }
  ::istio::mixer::v1::StringMap_EntriesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StringMap_EntriesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStringMap_EntriesEntry_DoNotUse}, {}};

static void InitDefaultsStringMap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::v1::_StringMap_default_instance_;
    new (ptr) ::istio::mixer::v1::StringMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::v1::StringMap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StringMap =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStringMap}, {
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_StringMap_EntriesEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Attributes_AttributesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Attributes_AttributeValue.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Attributes_StringMap_EntriesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Attributes_StringMap.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Attributes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompressedAttributes_StringsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompressedAttributes_Int64sEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompressedAttributes_DoublesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompressedAttributes_BoolsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompressedAttributes_TimestampsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompressedAttributes_DurationsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompressedAttributes_BytesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompressedAttributes_StringMapsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompressedAttributes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringMap_EntriesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringMap.base);
}

::google::protobuf::Metadata file_level_metadata[16];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes_AttributesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes_AttributesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes_AttributesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes_AttributesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes_AttributeValue, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes_AttributeValue, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::istio::mixer::v1::Attributes_AttributeValueDefaultTypeInternal, string_value_),
  offsetof(::istio::mixer::v1::Attributes_AttributeValueDefaultTypeInternal, int64_value_),
  offsetof(::istio::mixer::v1::Attributes_AttributeValueDefaultTypeInternal, double_value_),
  offsetof(::istio::mixer::v1::Attributes_AttributeValueDefaultTypeInternal, bool_value_),
  offsetof(::istio::mixer::v1::Attributes_AttributeValueDefaultTypeInternal, bytes_value_),
  offsetof(::istio::mixer::v1::Attributes_AttributeValueDefaultTypeInternal, timestamp_value_),
  offsetof(::istio::mixer::v1::Attributes_AttributeValueDefaultTypeInternal, duration_value_),
  offsetof(::istio::mixer::v1::Attributes_AttributeValueDefaultTypeInternal, string_map_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes_AttributeValue, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes_StringMap_EntriesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes_StringMap_EntriesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes_StringMap_EntriesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes_StringMap_EntriesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes_StringMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes_StringMap, entries_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::Attributes, attributes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_StringsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_StringsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_StringsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_StringsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_Int64sEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_Int64sEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_Int64sEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_Int64sEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_DoublesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_DoublesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_DoublesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_DoublesEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_BoolsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_BoolsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_BoolsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_BoolsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_TimestampsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_TimestampsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_TimestampsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_TimestampsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_DurationsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_DurationsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_DurationsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_DurationsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_BytesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_BytesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_BytesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_BytesEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_StringMapsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_StringMapsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_StringMapsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes_StringMapsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes, words_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes, strings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes, int64s_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes, doubles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes, bools_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes, timestamps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes, durations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::CompressedAttributes, string_maps_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::StringMap_EntriesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::StringMap_EntriesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::StringMap_EntriesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::StringMap_EntriesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::StringMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::v1::StringMap, entries_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::istio::mixer::v1::Attributes_AttributesEntry_DoNotUse)},
  { 9, -1, sizeof(::istio::mixer::v1::Attributes_AttributeValue)},
  { 23, 30, sizeof(::istio::mixer::v1::Attributes_StringMap_EntriesEntry_DoNotUse)},
  { 32, -1, sizeof(::istio::mixer::v1::Attributes_StringMap)},
  { 38, -1, sizeof(::istio::mixer::v1::Attributes)},
  { 44, 51, sizeof(::istio::mixer::v1::CompressedAttributes_StringsEntry_DoNotUse)},
  { 53, 60, sizeof(::istio::mixer::v1::CompressedAttributes_Int64sEntry_DoNotUse)},
  { 62, 69, sizeof(::istio::mixer::v1::CompressedAttributes_DoublesEntry_DoNotUse)},
  { 71, 78, sizeof(::istio::mixer::v1::CompressedAttributes_BoolsEntry_DoNotUse)},
  { 80, 87, sizeof(::istio::mixer::v1::CompressedAttributes_TimestampsEntry_DoNotUse)},
  { 89, 96, sizeof(::istio::mixer::v1::CompressedAttributes_DurationsEntry_DoNotUse)},
  { 98, 105, sizeof(::istio::mixer::v1::CompressedAttributes_BytesEntry_DoNotUse)},
  { 107, 114, sizeof(::istio::mixer::v1::CompressedAttributes_StringMapsEntry_DoNotUse)},
  { 116, -1, sizeof(::istio::mixer::v1::CompressedAttributes)},
  { 130, 137, sizeof(::istio::mixer::v1::StringMap_EntriesEntry_DoNotUse)},
  { 139, -1, sizeof(::istio::mixer::v1::StringMap)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_Attributes_AttributesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_Attributes_AttributeValue_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_Attributes_StringMap_EntriesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_Attributes_StringMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_Attributes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CompressedAttributes_StringsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CompressedAttributes_Int64sEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CompressedAttributes_DoublesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CompressedAttributes_BoolsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CompressedAttributes_TimestampsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CompressedAttributes_DurationsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CompressedAttributes_BytesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CompressedAttributes_StringMapsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_CompressedAttributes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_StringMap_EntriesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::v1::_StringMap_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "mixer/v1/attributes.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\031mixer/v1/attributes.proto\022\016istio.mixer"
      ".v1\032\024gogoproto/gogo.proto\032\036google/protob"
      "uf/duration.proto\032\037google/protobuf/times"
      "tamp.proto\"\351\004\n\nAttributes\022>\n\nattributes\030"
      "\001 \003(\0132*.istio.mixer.v1.Attributes.Attrib"
      "utesEntry\032\\\n\017AttributesEntry\022\013\n\003key\030\001 \001("
      "\t\0228\n\005value\030\002 \001(\0132).istio.mixer.v1.Attrib"
      "utes.AttributeValue:\0028\001\032\273\002\n\016AttributeVal"
      "ue\022\026\n\014string_value\030\002 \001(\tH\000\022\025\n\013int64_valu"
      "e\030\003 \001(\003H\000\022\026\n\014double_value\030\004 \001(\001H\000\022\024\n\nboo"
      "l_value\030\005 \001(\010H\000\022\025\n\013bytes_value\030\006 \001(\014H\000\0225"
      "\n\017timestamp_value\030\007 \001(\0132\032.google.protobu"
      "f.TimestampH\000\0223\n\016duration_value\030\010 \001(\0132\031."
      "google.protobuf.DurationH\000\022@\n\020string_map"
      "_value\030\t \001(\0132$.istio.mixer.v1.Attributes"
      ".StringMapH\000B\007\n\005value\032\177\n\tStringMap\022B\n\007en"
      "tries\030\001 \003(\01321.istio.mixer.v1.Attributes."
      "StringMap.EntriesEntry\032.\n\014EntriesEntry\022\013"
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\273\010\n\024Compr"
      "essedAttributes\022\r\n\005words\030\001 \003(\t\022B\n\007string"
      "s\030\002 \003(\01321.istio.mixer.v1.CompressedAttri"
      "butes.StringsEntry\022@\n\006int64s\030\003 \003(\01320.ist"
      "io.mixer.v1.CompressedAttributes.Int64sE"
      "ntry\022B\n\007doubles\030\004 \003(\01321.istio.mixer.v1.C"
      "ompressedAttributes.DoublesEntry\022>\n\005bool"
      "s\030\005 \003(\0132/.istio.mixer.v1.CompressedAttri"
      "butes.BoolsEntry\022R\n\ntimestamps\030\006 \003(\01324.i"
      "stio.mixer.v1.CompressedAttributes.Times"
      "tampsEntryB\010\310\336\037\000\220\337\037\001\022P\n\tdurations\030\007 \003(\0132"
      "3.istio.mixer.v1.CompressedAttributes.Du"
      "rationsEntryB\010\310\336\037\000\230\337\037\001\022>\n\005bytes\030\010 \003(\0132/."
      "istio.mixer.v1.CompressedAttributes.Byte"
      "sEntry\022O\n\013string_maps\030\t \003(\01324.istio.mixe"
      "r.v1.CompressedAttributes.StringMapsEntr"
      "yB\004\310\336\037\000\032.\n\014StringsEntry\022\013\n\003key\030\001 \001(\021\022\r\n\005"
      "value\030\002 \001(\021:\0028\001\032-\n\013Int64sEntry\022\013\n\003key\030\001 "
      "\001(\021\022\r\n\005value\030\002 \001(\003:\0028\001\032.\n\014DoublesEntry\022\013"
      "\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001(\001:\0028\001\032,\n\nBoolsE"
      "ntry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001(\010:\0028\001\032M\n\017"
      "TimestampsEntry\022\013\n\003key\030\001 \001(\021\022)\n\005value\030\002 "
      "\001(\0132\032.google.protobuf.Timestamp:\0028\001\032K\n\016D"
      "urationsEntry\022\013\n\003key\030\001 \001(\021\022(\n\005value\030\002 \001("
      "\0132\031.google.protobuf.Duration:\0028\001\032,\n\nByte"
      "sEntry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001(\014:\0028\001\032L"
      "\n\017StringMapsEntry\022\013\n\003key\030\001 \001(\021\022(\n\005value\030"
      "\002 \001(\0132\031.istio.mixer.v1.StringMap:\0028\001\"t\n\t"
      "StringMap\0227\n\007entries\030\001 \003(\0132&.istio.mixer"
      ".v1.StringMap.EntriesEntry\032.\n\014EntriesEnt"
      "ry\022\013\n\003key\030\001 \001(\021\022\r\n\005value\030\002 \001(\021:\0028\001B&Z\025is"
      "tio.io/api/mixer/v1\370\001\001\310\341\036\000\250\342\036\000\360\341\036\000b\006prot"
      "o3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2002);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mixer/v1/attributes.proto", &protobuf_RegisterTypes);
  ::protobuf_gogoproto_2fgogo_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mixer_2fv1_2fattributes_2eproto
namespace istio {
namespace mixer {
namespace v1 {

// ===================================================================

Attributes_AttributesEntry_DoNotUse::Attributes_AttributesEntry_DoNotUse() {}
Attributes_AttributesEntry_DoNotUse::Attributes_AttributesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Attributes_AttributesEntry_DoNotUse::MergeFrom(const Attributes_AttributesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Attributes_AttributesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[0];
}
void Attributes_AttributesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Attributes_AttributeValue::InitAsDefaultInstance() {
  ::istio::mixer::v1::_Attributes_AttributeValue_default_instance_.string_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::istio::mixer::v1::_Attributes_AttributeValue_default_instance_.int64_value_ = GOOGLE_LONGLONG(0);
  ::istio::mixer::v1::_Attributes_AttributeValue_default_instance_.double_value_ = 0;
  ::istio::mixer::v1::_Attributes_AttributeValue_default_instance_.bool_value_ = false;
  ::istio::mixer::v1::_Attributes_AttributeValue_default_instance_.bytes_value_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::istio::mixer::v1::_Attributes_AttributeValue_default_instance_.timestamp_value_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::istio::mixer::v1::_Attributes_AttributeValue_default_instance_.duration_value_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  ::istio::mixer::v1::_Attributes_AttributeValue_default_instance_.string_map_value_ = const_cast< ::istio::mixer::v1::Attributes_StringMap*>(
      ::istio::mixer::v1::Attributes_StringMap::internal_default_instance());
}
void Attributes_AttributeValue::set_allocated_timestamp_value(::google::protobuf::Timestamp* timestamp_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (timestamp_value) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(timestamp_value)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp_value, submessage_arena);
    }
    set_has_timestamp_value();
    value_.timestamp_value_ = timestamp_value;
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.Attributes.AttributeValue.timestamp_value)
}
void Attributes_AttributeValue::clear_timestamp_value() {
  if (has_timestamp_value()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_.timestamp_value_;
    }
    clear_has_value();
  }
}
void Attributes_AttributeValue::set_allocated_duration_value(::google::protobuf::Duration* duration_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (duration_value) {
    ::google::protobuf::Arena* submessage_arena =
      reinterpret_cast<::google::protobuf::MessageLite*>(duration_value)->GetArena();
    if (message_arena != submessage_arena) {
      duration_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, duration_value, submessage_arena);
    }
    set_has_duration_value();
    value_.duration_value_ = duration_value;
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.Attributes.AttributeValue.duration_value)
}
void Attributes_AttributeValue::clear_duration_value() {
  if (has_duration_value()) {
    if (GetArenaNoVirtual() == NULL) {
      delete value_.duration_value_;
    }
    clear_has_value();
  }
}
void Attributes_AttributeValue::set_allocated_string_map_value(::istio::mixer::v1::Attributes_StringMap* string_map_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (string_map_value) {
    ::google::protobuf::Arena* submessage_arena =
      ::google::protobuf::Arena::GetArena(string_map_value);
    if (message_arena != submessage_arena) {
      string_map_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, string_map_value, submessage_arena);
    }
    set_has_string_map_value();
    value_.string_map_value_ = string_map_value;
  }
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.v1.Attributes.AttributeValue.string_map_value)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Attributes_AttributeValue::kStringValueFieldNumber;
const int Attributes_AttributeValue::kInt64ValueFieldNumber;
const int Attributes_AttributeValue::kDoubleValueFieldNumber;
const int Attributes_AttributeValue::kBoolValueFieldNumber;
const int Attributes_AttributeValue::kBytesValueFieldNumber;
const int Attributes_AttributeValue::kTimestampValueFieldNumber;
const int Attributes_AttributeValue::kDurationValueFieldNumber;
const int Attributes_AttributeValue::kStringMapValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Attributes_AttributeValue::Attributes_AttributeValue()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_Attributes_AttributeValue.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.Attributes.AttributeValue)
}
Attributes_AttributeValue::Attributes_AttributeValue(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_Attributes_AttributeValue.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.Attributes.AttributeValue)
}
Attributes_AttributeValue::Attributes_AttributeValue(const Attributes_AttributeValue& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_value();
  switch (from.value_case()) {
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kBytesValue: {
      set_bytes_value(from.bytes_value());
      break;
    }
    case kTimestampValue: {
      mutable_timestamp_value()->::google::protobuf::Timestamp::MergeFrom(from.timestamp_value());
      break;
    }
    case kDurationValue: {
      mutable_duration_value()->::google::protobuf::Duration::MergeFrom(from.duration_value());
      break;
    }
    case kStringMapValue: {
      mutable_string_map_value()->::istio::mixer::v1::Attributes_StringMap::MergeFrom(from.string_map_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.Attributes.AttributeValue)
}

void Attributes_AttributeValue::SharedCtor() {
  clear_has_value();
}

Attributes_AttributeValue::~Attributes_AttributeValue() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.Attributes.AttributeValue)
  SharedDtor();
}

void Attributes_AttributeValue::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
  if (has_value()) {
    clear_value();
  }
}

void Attributes_AttributeValue::ArenaDtor(void* object) {
  Attributes_AttributeValue* _this = reinterpret_cast< Attributes_AttributeValue* >(object);
  (void)_this;
}
void Attributes_AttributeValue::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Attributes_AttributeValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Attributes_AttributeValue::descriptor() {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Attributes_AttributeValue& Attributes_AttributeValue::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_Attributes_AttributeValue.base);
  return *internal_default_instance();
}


void Attributes_AttributeValue::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:istio.mixer.v1.Attributes.AttributeValue)
  switch (value_case()) {
    case kStringValue: {
      value_.string_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kBytesValue: {
      value_.bytes_value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
          GetArenaNoVirtual());
      break;
    }
    case kTimestampValue: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_.timestamp_value_;
      }
      break;
    }
    case kDurationValue: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_.duration_value_;
      }
      break;
    }
    case kStringMapValue: {
      if (GetArenaNoVirtual() == NULL) {
        delete value_.string_map_value_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Attributes_AttributeValue::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.Attributes.AttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_value();
  _internal_metadata_.Clear();
}

bool Attributes_AttributeValue::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.Attributes.AttributeValue)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string string_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string_value().data(), static_cast<int>(this->string_value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.Attributes.AttributeValue.string_value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int64_value = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &value_.int64_value_)));
          set_has_int64_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double double_value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u /* 33 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &value_.double_value_)));
          set_has_double_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool_value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.bool_value_)));
          set_has_bool_value();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bytes_value = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp_value = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration duration_value = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_duration_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .istio.mixer.v1.Attributes.StringMap string_map_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string_map_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.Attributes.AttributeValue)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.Attributes.AttributeValue)
  return false;
#undef DO_
}

void Attributes_AttributeValue::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.Attributes.AttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_value = 2;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.Attributes.AttributeValue.string_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->string_value(), output);
  }

  // int64 int64_value = 3;
  if (has_int64_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->int64_value(), output);
  }

  // double double_value = 4;
  if (has_double_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->double_value(), output);
  }

  // bool bool_value = 5;
  if (has_bool_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->bool_value(), output);
  }

  // bytes bytes_value = 6;
  if (has_bytes_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->bytes_value(), output);
  }

  // .google.protobuf.Timestamp timestamp_value = 7;
  if (has_timestamp_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_timestamp_value(), output);
  }

  // .google.protobuf.Duration duration_value = 8;
  if (has_duration_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_duration_value(), output);
  }

  // .istio.mixer.v1.Attributes.StringMap string_map_value = 9;
  if (has_string_map_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_string_map_value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.Attributes.AttributeValue)
}

::google::protobuf::uint8* Attributes_AttributeValue::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.Attributes.AttributeValue)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string_value = 2;
  if (has_string_value()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string_value().data(), static_cast<int>(this->string_value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.Attributes.AttributeValue.string_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->string_value(), target);
  }

  // int64 int64_value = 3;
  if (has_int64_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->int64_value(), target);
  }

  // double double_value = 4;
  if (has_double_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->double_value(), target);
  }

  // bool bool_value = 5;
  if (has_bool_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->bool_value(), target);
  }

  // bytes bytes_value = 6;
  if (has_bytes_value()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->bytes_value(), target);
  }

  // .google.protobuf.Timestamp timestamp_value = 7;
  if (has_timestamp_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_timestamp_value(), deterministic, target);
  }

  // .google.protobuf.Duration duration_value = 8;
  if (has_duration_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_duration_value(), deterministic, target);
  }

  // .istio.mixer.v1.Attributes.StringMap string_map_value = 9;
  if (has_string_map_value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_string_map_value(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.Attributes.AttributeValue)
  return target;
}

size_t Attributes_AttributeValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.Attributes.AttributeValue)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (value_case()) {
    // string string_value = 2;
    case kStringValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->string_value());
      break;
    }
    // int64 int64_value = 3;
    case kInt64Value: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->int64_value());
      break;
    }
    // double double_value = 4;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // bool bool_value = 5;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // bytes bytes_value = 6;
    case kBytesValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_value());
      break;
    }
    // .google.protobuf.Timestamp timestamp_value = 7;
    case kTimestampValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.timestamp_value_);
      break;
    }
    // .google.protobuf.Duration duration_value = 8;
    case kDurationValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.duration_value_);
      break;
    }
    // .istio.mixer.v1.Attributes.StringMap string_map_value = 9;
    case kStringMapValue: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.string_map_value_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Attributes_AttributeValue::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.Attributes.AttributeValue)
  GOOGLE_DCHECK_NE(&from, this);
  const Attributes_AttributeValue* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Attributes_AttributeValue>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.Attributes.AttributeValue)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.Attributes.AttributeValue)
    MergeFrom(*source);
  }
}

void Attributes_AttributeValue::MergeFrom(const Attributes_AttributeValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.Attributes.AttributeValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.value_case()) {
    case kStringValue: {
      set_string_value(from.string_value());
      break;
    }
    case kInt64Value: {
      set_int64_value(from.int64_value());
      break;
    }
    case kDoubleValue: {
      set_double_value(from.double_value());
      break;
    }
    case kBoolValue: {
      set_bool_value(from.bool_value());
      break;
    }
    case kBytesValue: {
      set_bytes_value(from.bytes_value());
      break;
    }
    case kTimestampValue: {
      mutable_timestamp_value()->::google::protobuf::Timestamp::MergeFrom(from.timestamp_value());
      break;
    }
    case kDurationValue: {
      mutable_duration_value()->::google::protobuf::Duration::MergeFrom(from.duration_value());
      break;
    }
    case kStringMapValue: {
      mutable_string_map_value()->::istio::mixer::v1::Attributes_StringMap::MergeFrom(from.string_map_value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Attributes_AttributeValue::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.Attributes.AttributeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Attributes_AttributeValue::CopyFrom(const Attributes_AttributeValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.Attributes.AttributeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attributes_AttributeValue::IsInitialized() const {
  return true;
}

void Attributes_AttributeValue::Swap(Attributes_AttributeValue* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Attributes_AttributeValue* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Attributes_AttributeValue::UnsafeArenaSwap(Attributes_AttributeValue* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Attributes_AttributeValue::InternalSwap(Attributes_AttributeValue* other) {
  using std::swap;
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Attributes_AttributeValue::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Attributes_StringMap_EntriesEntry_DoNotUse::Attributes_StringMap_EntriesEntry_DoNotUse() {}
Attributes_StringMap_EntriesEntry_DoNotUse::Attributes_StringMap_EntriesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Attributes_StringMap_EntriesEntry_DoNotUse::MergeFrom(const Attributes_StringMap_EntriesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Attributes_StringMap_EntriesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[2];
}
void Attributes_StringMap_EntriesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Attributes_StringMap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Attributes_StringMap::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Attributes_StringMap::Attributes_StringMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_Attributes_StringMap.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.Attributes.StringMap)
}
Attributes_StringMap::Attributes_StringMap(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  entries_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_Attributes_StringMap.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.Attributes.StringMap)
}
Attributes_StringMap::Attributes_StringMap(const Attributes_StringMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entries_.MergeFrom(from.entries_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.Attributes.StringMap)
}

void Attributes_StringMap::SharedCtor() {
}

Attributes_StringMap::~Attributes_StringMap() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.Attributes.StringMap)
  SharedDtor();
}

void Attributes_StringMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Attributes_StringMap::ArenaDtor(void* object) {
  Attributes_StringMap* _this = reinterpret_cast< Attributes_StringMap* >(object);
  (void)_this;
}
void Attributes_StringMap::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Attributes_StringMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Attributes_StringMap::descriptor() {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Attributes_StringMap& Attributes_StringMap::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_Attributes_StringMap.base);
  return *internal_default_instance();
}


void Attributes_StringMap::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.Attributes.StringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear();
}

bool Attributes_StringMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.Attributes.StringMap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          Attributes_StringMap_EntriesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Attributes_StringMap_EntriesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&entries_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.Attributes.StringMap.EntriesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.Attributes.StringMap.EntriesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.Attributes.StringMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.Attributes.StringMap)
  return false;
#undef DO_
}

void Attributes_StringMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.Attributes.StringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> entries = 1;
  if (!this->entries().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.v1.Attributes.StringMap.EntriesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.v1.Attributes.StringMap.EntriesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->entries().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->entries().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Attributes_StringMap_EntriesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(entries_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Attributes_StringMap_EntriesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it) {
        entry.reset(entries_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.Attributes.StringMap)
}

::google::protobuf::uint8* Attributes_StringMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.Attributes.StringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> entries = 1;
  if (!this->entries().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.v1.Attributes.StringMap.EntriesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.v1.Attributes.StringMap.EntriesEntry.value");
      }
    };

    if (deterministic &&
        this->entries().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->entries().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Attributes_StringMap_EntriesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(entries_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Attributes_StringMap_EntriesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it) {
        entry.reset(entries_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.Attributes.StringMap)
  return target;
}

size_t Attributes_StringMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.Attributes.StringMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> entries = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->entries_size());
  {
    ::std::unique_ptr<Attributes_StringMap_EntriesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->entries().begin();
        it != this->entries().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(entries_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Attributes_StringMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.Attributes.StringMap)
  GOOGLE_DCHECK_NE(&from, this);
  const Attributes_StringMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Attributes_StringMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.Attributes.StringMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.Attributes.StringMap)
    MergeFrom(*source);
  }
}

void Attributes_StringMap::MergeFrom(const Attributes_StringMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.Attributes.StringMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void Attributes_StringMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.Attributes.StringMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Attributes_StringMap::CopyFrom(const Attributes_StringMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.Attributes.StringMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attributes_StringMap::IsInitialized() const {
  return true;
}

void Attributes_StringMap::Swap(Attributes_StringMap* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Attributes_StringMap* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Attributes_StringMap::UnsafeArenaSwap(Attributes_StringMap* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Attributes_StringMap::InternalSwap(Attributes_StringMap* other) {
  using std::swap;
  entries_.Swap(&other->entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Attributes_StringMap::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Attributes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Attributes::kAttributesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Attributes::Attributes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_Attributes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.Attributes)
}
Attributes::Attributes(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  attributes_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_Attributes.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.Attributes)
}
Attributes::Attributes(const Attributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  attributes_.MergeFrom(from.attributes_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.Attributes)
}

void Attributes::SharedCtor() {
}

Attributes::~Attributes() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.Attributes)
  SharedDtor();
}

void Attributes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void Attributes::ArenaDtor(void* object) {
  Attributes* _this = reinterpret_cast< Attributes* >(object);
  (void)_this;
}
void Attributes::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Attributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Attributes::descriptor() {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Attributes& Attributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_Attributes.base);
  return *internal_default_instance();
}


void Attributes::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.Attributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.Clear();
  _internal_metadata_.Clear();
}

bool Attributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.Attributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .istio.mixer.v1.Attributes.AttributeValue> attributes = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          Attributes_AttributesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Attributes_AttributesEntry_DoNotUse,
              ::std::string, ::istio::mixer::v1::Attributes_AttributeValue,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::Attributes_AttributeValue > > parser(&attributes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.Attributes.AttributesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.Attributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.Attributes)
  return false;
#undef DO_
}

void Attributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.Attributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .istio.mixer.v1.Attributes.AttributeValue> attributes = 1;
  if (!this->attributes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::Attributes_AttributeValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.v1.Attributes.AttributesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->attributes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attributes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::Attributes_AttributeValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::Attributes_AttributeValue >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Attributes_AttributesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attributes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Attributes_AttributesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::Attributes_AttributeValue >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it) {
        entry.reset(attributes_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.Attributes)
}

::google::protobuf::uint8* Attributes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.Attributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .istio.mixer.v1.Attributes.AttributeValue> attributes = 1;
  if (!this->attributes().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::Attributes_AttributeValue >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.v1.Attributes.AttributesEntry.key");
      }
    };

    if (deterministic &&
        this->attributes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->attributes().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::v1::Attributes_AttributeValue >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::Attributes_AttributeValue >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Attributes_AttributesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(attributes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Attributes_AttributesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::Attributes_AttributeValue >::const_iterator
          it = this->attributes().begin();
          it != this->attributes().end(); ++it) {
        entry.reset(attributes_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.Attributes)
  return target;
}

size_t Attributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.Attributes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .istio.mixer.v1.Attributes.AttributeValue> attributes = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->attributes_size());
  {
    ::std::unique_ptr<Attributes_AttributesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::istio::mixer::v1::Attributes_AttributeValue >::const_iterator
        it = this->attributes().begin();
        it != this->attributes().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(attributes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Attributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.Attributes)
  GOOGLE_DCHECK_NE(&from, this);
  const Attributes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Attributes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.Attributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.Attributes)
    MergeFrom(*source);
  }
}

void Attributes::MergeFrom(const Attributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.Attributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  attributes_.MergeFrom(from.attributes_);
}

void Attributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.Attributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Attributes::CopyFrom(const Attributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.Attributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attributes::IsInitialized() const {
  return true;
}

void Attributes::Swap(Attributes* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Attributes* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void Attributes::UnsafeArenaSwap(Attributes* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Attributes::InternalSwap(Attributes* other) {
  using std::swap;
  attributes_.Swap(&other->attributes_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Attributes::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

CompressedAttributes_StringsEntry_DoNotUse::CompressedAttributes_StringsEntry_DoNotUse() {}
CompressedAttributes_StringsEntry_DoNotUse::CompressedAttributes_StringsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CompressedAttributes_StringsEntry_DoNotUse::MergeFrom(const CompressedAttributes_StringsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CompressedAttributes_StringsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[5];
}
void CompressedAttributes_StringsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

CompressedAttributes_Int64sEntry_DoNotUse::CompressedAttributes_Int64sEntry_DoNotUse() {}
CompressedAttributes_Int64sEntry_DoNotUse::CompressedAttributes_Int64sEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CompressedAttributes_Int64sEntry_DoNotUse::MergeFrom(const CompressedAttributes_Int64sEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CompressedAttributes_Int64sEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[6];
}
void CompressedAttributes_Int64sEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

CompressedAttributes_DoublesEntry_DoNotUse::CompressedAttributes_DoublesEntry_DoNotUse() {}
CompressedAttributes_DoublesEntry_DoNotUse::CompressedAttributes_DoublesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CompressedAttributes_DoublesEntry_DoNotUse::MergeFrom(const CompressedAttributes_DoublesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CompressedAttributes_DoublesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[7];
}
void CompressedAttributes_DoublesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

CompressedAttributes_BoolsEntry_DoNotUse::CompressedAttributes_BoolsEntry_DoNotUse() {}
CompressedAttributes_BoolsEntry_DoNotUse::CompressedAttributes_BoolsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CompressedAttributes_BoolsEntry_DoNotUse::MergeFrom(const CompressedAttributes_BoolsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CompressedAttributes_BoolsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[8];
}
void CompressedAttributes_BoolsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

CompressedAttributes_TimestampsEntry_DoNotUse::CompressedAttributes_TimestampsEntry_DoNotUse() {}
CompressedAttributes_TimestampsEntry_DoNotUse::CompressedAttributes_TimestampsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CompressedAttributes_TimestampsEntry_DoNotUse::MergeFrom(const CompressedAttributes_TimestampsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CompressedAttributes_TimestampsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[9];
}
void CompressedAttributes_TimestampsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

CompressedAttributes_DurationsEntry_DoNotUse::CompressedAttributes_DurationsEntry_DoNotUse() {}
CompressedAttributes_DurationsEntry_DoNotUse::CompressedAttributes_DurationsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CompressedAttributes_DurationsEntry_DoNotUse::MergeFrom(const CompressedAttributes_DurationsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CompressedAttributes_DurationsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[10];
}
void CompressedAttributes_DurationsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

CompressedAttributes_BytesEntry_DoNotUse::CompressedAttributes_BytesEntry_DoNotUse() {}
CompressedAttributes_BytesEntry_DoNotUse::CompressedAttributes_BytesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CompressedAttributes_BytesEntry_DoNotUse::MergeFrom(const CompressedAttributes_BytesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CompressedAttributes_BytesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[11];
}
void CompressedAttributes_BytesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

CompressedAttributes_StringMapsEntry_DoNotUse::CompressedAttributes_StringMapsEntry_DoNotUse() {}
CompressedAttributes_StringMapsEntry_DoNotUse::CompressedAttributes_StringMapsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CompressedAttributes_StringMapsEntry_DoNotUse::MergeFrom(const CompressedAttributes_StringMapsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CompressedAttributes_StringMapsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[12];
}
void CompressedAttributes_StringMapsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void CompressedAttributes::InitAsDefaultInstance() {
}
void CompressedAttributes::clear_timestamps() {
  timestamps_.Clear();
}
void CompressedAttributes::clear_durations() {
  durations_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CompressedAttributes::kWordsFieldNumber;
const int CompressedAttributes::kStringsFieldNumber;
const int CompressedAttributes::kInt64SFieldNumber;
const int CompressedAttributes::kDoublesFieldNumber;
const int CompressedAttributes::kBoolsFieldNumber;
const int CompressedAttributes::kTimestampsFieldNumber;
const int CompressedAttributes::kDurationsFieldNumber;
const int CompressedAttributes::kBytesFieldNumber;
const int CompressedAttributes::kStringMapsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompressedAttributes::CompressedAttributes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_CompressedAttributes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.CompressedAttributes)
}
CompressedAttributes::CompressedAttributes(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  words_(arena),
  strings_(arena),
  int64s_(arena),
  doubles_(arena),
  bools_(arena),
  timestamps_(arena),
  durations_(arena),
  bytes_(arena),
  string_maps_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_CompressedAttributes.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.CompressedAttributes)
}
CompressedAttributes::CompressedAttributes(const CompressedAttributes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      words_(from.words_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  strings_.MergeFrom(from.strings_);
  int64s_.MergeFrom(from.int64s_);
  doubles_.MergeFrom(from.doubles_);
  bools_.MergeFrom(from.bools_);
  timestamps_.MergeFrom(from.timestamps_);
  durations_.MergeFrom(from.durations_);
  bytes_.MergeFrom(from.bytes_);
  string_maps_.MergeFrom(from.string_maps_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.CompressedAttributes)
}

void CompressedAttributes::SharedCtor() {
}

CompressedAttributes::~CompressedAttributes() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.CompressedAttributes)
  SharedDtor();
}

void CompressedAttributes::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void CompressedAttributes::ArenaDtor(void* object) {
  CompressedAttributes* _this = reinterpret_cast< CompressedAttributes* >(object);
  (void)_this;
}
void CompressedAttributes::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void CompressedAttributes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompressedAttributes::descriptor() {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompressedAttributes& CompressedAttributes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_CompressedAttributes.base);
  return *internal_default_instance();
}


void CompressedAttributes::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.CompressedAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  words_.Clear();
  strings_.Clear();
  int64s_.Clear();
  doubles_.Clear();
  bools_.Clear();
  timestamps_.Clear();
  durations_.Clear();
  bytes_.Clear();
  string_maps_.Clear();
  _internal_metadata_.Clear();
}

bool CompressedAttributes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.CompressedAttributes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string words = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_words()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->words(this->words_size() - 1).data(),
            static_cast<int>(this->words(this->words_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.v1.CompressedAttributes.words"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, sint32> strings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          CompressedAttributes_StringsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CompressedAttributes_StringsEntry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&strings_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, int64> int64s = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          CompressedAttributes_Int64sEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CompressedAttributes_Int64sEntry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 > > parser(&int64s_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, double> doubles = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          CompressedAttributes_DoublesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CompressedAttributes_DoublesEntry_DoNotUse,
              ::google::protobuf::int32, double,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, double > > parser(&doubles_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, bool> bools = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          CompressedAttributes_BoolsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CompressedAttributes_BoolsEntry_DoNotUse,
              ::google::protobuf::int32, bool,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_BOOL,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, bool > > parser(&bools_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, .google.protobuf.Timestamp> timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          CompressedAttributes_TimestampsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CompressedAttributes_TimestampsEntry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::Timestamp,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp > > parser(&timestamps_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, .google.protobuf.Duration> durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          CompressedAttributes_DurationsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CompressedAttributes_DurationsEntry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::Duration,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration > > parser(&durations_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, bytes> bytes = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          CompressedAttributes_BytesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CompressedAttributes_BytesEntry_DoNotUse,
              ::google::protobuf::int32, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::std::string > > parser(&bytes_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<sint32, .istio.mixer.v1.StringMap> string_maps = 9 [(.gogoproto.nullable) = false];
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          CompressedAttributes_StringMapsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CompressedAttributes_StringMapsEntry_DoNotUse,
              ::google::protobuf::int32, ::istio::mixer::v1::StringMap,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap > > parser(&string_maps_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.CompressedAttributes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.CompressedAttributes)
  return false;
#undef DO_
}

void CompressedAttributes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.CompressedAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string words = 1;
  for (int i = 0, n = this->words_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->words(i).data(), static_cast<int>(this->words(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.CompressedAttributes.words");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->words(i), output);
  }

  // map<sint32, sint32> strings = 2;
  if (!this->strings().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->strings().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->strings().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->strings().begin();
          it != this->strings().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_StringsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(strings_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_StringsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->strings().begin();
          it != this->strings().end(); ++it) {
        entry.reset(strings_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, int64> int64s = 3;
  if (!this->int64s().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->int64s().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->int64s().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
          it = this->int64s().begin();
          it != this->int64s().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_Int64sEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(int64s_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_Int64sEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
          it = this->int64s().begin();
          it != this->int64s().end(); ++it) {
        entry.reset(int64s_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, double> doubles = 4;
  if (!this->doubles().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->doubles().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->doubles().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->doubles().begin();
          it != this->doubles().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_DoublesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(doubles_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_DoublesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->doubles().begin();
          it != this->doubles().end(); ++it) {
        entry.reset(doubles_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, bool> bools = 5;
  if (!this->bools().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, bool >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->bools().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bools().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, bool >::const_iterator
          it = this->bools().begin();
          it != this->bools().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_BoolsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bools_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_BoolsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, bool >::const_iterator
          it = this->bools().begin();
          it != this->bools().end(); ++it) {
        entry.reset(bools_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, .google.protobuf.Timestamp> timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
  if (!this->timestamps().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->timestamps().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->timestamps().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_iterator
          it = this->timestamps().begin();
          it != this->timestamps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_TimestampsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(timestamps_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_TimestampsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_iterator
          it = this->timestamps().begin();
          it != this->timestamps().end(); ++it) {
        entry.reset(timestamps_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, .google.protobuf.Duration> durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  if (!this->durations().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->durations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->durations().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_iterator
          it = this->durations().begin();
          it != this->durations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_DurationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(durations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_DurationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_iterator
          it = this->durations().begin();
          it != this->durations().end(); ++it) {
        entry.reset(durations_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, bytes> bytes = 8;
  if (!this->bytes().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->bytes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bytes().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->bytes().begin();
          it != this->bytes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_BytesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bytes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_BytesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->bytes().begin();
          it != this->bytes().end(); ++it) {
        entry.reset(bytes_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, .istio.mixer.v1.StringMap> string_maps = 9 [(.gogoproto.nullable) = false];
  if (!this->string_maps().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->string_maps().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->string_maps().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_iterator
          it = this->string_maps().begin();
          it != this->string_maps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_StringMapsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(string_maps_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_StringMapsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_iterator
          it = this->string_maps().begin();
          it != this->string_maps().end(); ++it) {
        entry.reset(string_maps_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.CompressedAttributes)
}

::google::protobuf::uint8* CompressedAttributes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.CompressedAttributes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string words = 1;
  for (int i = 0, n = this->words_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->words(i).data(), static_cast<int>(this->words(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.v1.CompressedAttributes.words");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->words(i), target);
  }

  // map<sint32, sint32> strings = 2;
  if (!this->strings().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->strings().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->strings().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->strings().begin();
          it != this->strings().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_StringsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(strings_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_StringsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->strings().begin();
          it != this->strings().end(); ++it) {
        entry.reset(strings_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, int64> int64s = 3;
  if (!this->int64s().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->int64s().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->int64s().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
          it = this->int64s().begin();
          it != this->int64s().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_Int64sEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(int64s_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_Int64sEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
          it = this->int64s().begin();
          it != this->int64s().end(); ++it) {
        entry.reset(int64s_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, double> doubles = 4;
  if (!this->doubles().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->doubles().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->doubles().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, double >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->doubles().begin();
          it != this->doubles().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_DoublesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(doubles_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_DoublesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
          it = this->doubles().begin();
          it != this->doubles().end(); ++it) {
        entry.reset(doubles_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, bool> bools = 5;
  if (!this->bools().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, bool >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->bools().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bools().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, bool >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, bool >::const_iterator
          it = this->bools().begin();
          it != this->bools().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_BoolsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bools_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_BoolsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, bool >::const_iterator
          it = this->bools().begin();
          it != this->bools().end(); ++it) {
        entry.reset(bools_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, .google.protobuf.Timestamp> timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
  if (!this->timestamps().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->timestamps().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->timestamps().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_iterator
          it = this->timestamps().begin();
          it != this->timestamps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_TimestampsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(timestamps_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_TimestampsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_iterator
          it = this->timestamps().begin();
          it != this->timestamps().end(); ++it) {
        entry.reset(timestamps_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, .google.protobuf.Duration> durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  if (!this->durations().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->durations().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->durations().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_iterator
          it = this->durations().begin();
          it != this->durations().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_DurationsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(durations_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_DurationsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_iterator
          it = this->durations().begin();
          it != this->durations().end(); ++it) {
        entry.reset(durations_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, bytes> bytes = 8;
  if (!this->bytes().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->bytes().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->bytes().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->bytes().begin();
          it != this->bytes().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_BytesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(bytes_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_BytesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->bytes().begin();
          it != this->bytes().end(); ++it) {
        entry.reset(bytes_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  // map<sint32, .istio.mixer.v1.StringMap> string_maps = 9 [(.gogoproto.nullable) = false];
  if (!this->string_maps().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->string_maps().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->string_maps().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_iterator
          it = this->string_maps().begin();
          it != this->string_maps().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CompressedAttributes_StringMapsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(string_maps_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<CompressedAttributes_StringMapsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_iterator
          it = this->string_maps().begin();
          it != this->string_maps().end(); ++it) {
        entry.reset(string_maps_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.CompressedAttributes)
  return target;
}

size_t CompressedAttributes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.CompressedAttributes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string words = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->words_size());
  for (int i = 0, n = this->words_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->words(i));
  }

  // map<sint32, sint32> strings = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->strings_size());
  {
    ::std::unique_ptr<CompressedAttributes_StringsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->strings().begin();
        it != this->strings().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(strings_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sint32, int64> int64s = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->int64s_size());
  {
    ::std::unique_ptr<CompressedAttributes_Int64sEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int64 >::const_iterator
        it = this->int64s().begin();
        it != this->int64s().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(int64s_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sint32, double> doubles = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->doubles_size());
  {
    ::std::unique_ptr<CompressedAttributes_DoublesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, double >::const_iterator
        it = this->doubles().begin();
        it != this->doubles().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(doubles_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sint32, bool> bools = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bools_size());
  {
    ::std::unique_ptr<CompressedAttributes_BoolsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, bool >::const_iterator
        it = this->bools().begin();
        it != this->bools().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(bools_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sint32, .google.protobuf.Timestamp> timestamps = 6 [(.gogoproto.nullable) = false, (.gogoproto.stdtime) = true];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->timestamps_size());
  {
    ::std::unique_ptr<CompressedAttributes_TimestampsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Timestamp >::const_iterator
        it = this->timestamps().begin();
        it != this->timestamps().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(timestamps_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sint32, .google.protobuf.Duration> durations = 7 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->durations_size());
  {
    ::std::unique_ptr<CompressedAttributes_DurationsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::Duration >::const_iterator
        it = this->durations().begin();
        it != this->durations().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(durations_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sint32, bytes> bytes = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->bytes_size());
  {
    ::std::unique_ptr<CompressedAttributes_BytesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->bytes().begin();
        it != this->bytes().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(bytes_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  // map<sint32, .istio.mixer.v1.StringMap> string_maps = 9 [(.gogoproto.nullable) = false];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->string_maps_size());
  {
    ::std::unique_ptr<CompressedAttributes_StringMapsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::istio::mixer::v1::StringMap >::const_iterator
        it = this->string_maps().begin();
        it != this->string_maps().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(string_maps_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompressedAttributes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.CompressedAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  const CompressedAttributes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompressedAttributes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.CompressedAttributes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.CompressedAttributes)
    MergeFrom(*source);
  }
}

void CompressedAttributes::MergeFrom(const CompressedAttributes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.CompressedAttributes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  words_.MergeFrom(from.words_);
  strings_.MergeFrom(from.strings_);
  int64s_.MergeFrom(from.int64s_);
  doubles_.MergeFrom(from.doubles_);
  bools_.MergeFrom(from.bools_);
  timestamps_.MergeFrom(from.timestamps_);
  durations_.MergeFrom(from.durations_);
  bytes_.MergeFrom(from.bytes_);
  string_maps_.MergeFrom(from.string_maps_);
}

void CompressedAttributes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.CompressedAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompressedAttributes::CopyFrom(const CompressedAttributes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.CompressedAttributes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompressedAttributes::IsInitialized() const {
  return true;
}

void CompressedAttributes::Swap(CompressedAttributes* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    CompressedAttributes* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void CompressedAttributes::UnsafeArenaSwap(CompressedAttributes* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void CompressedAttributes::InternalSwap(CompressedAttributes* other) {
  using std::swap;
  words_.InternalSwap(CastToBase(&other->words_));
  strings_.Swap(&other->strings_);
  int64s_.Swap(&other->int64s_);
  doubles_.Swap(&other->doubles_);
  bools_.Swap(&other->bools_);
  timestamps_.Swap(&other->timestamps_);
  durations_.Swap(&other->durations_);
  bytes_.Swap(&other->bytes_);
  string_maps_.Swap(&other->string_maps_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompressedAttributes::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

StringMap_EntriesEntry_DoNotUse::StringMap_EntriesEntry_DoNotUse() {}
StringMap_EntriesEntry_DoNotUse::StringMap_EntriesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void StringMap_EntriesEntry_DoNotUse::MergeFrom(const StringMap_EntriesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata StringMap_EntriesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[14];
}
void StringMap_EntriesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void StringMap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringMap::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringMap::StringMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_StringMap.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.v1.StringMap)
}
StringMap::StringMap(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena),
  entries_(arena) {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_StringMap.base);
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:istio.mixer.v1.StringMap)
}
StringMap::StringMap(const StringMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entries_.MergeFrom(from.entries_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.v1.StringMap)
}

void StringMap::SharedCtor() {
}

StringMap::~StringMap() {
  // @@protoc_insertion_point(destructor:istio.mixer.v1.StringMap)
  SharedDtor();
}

void StringMap::SharedDtor() {
  GOOGLE_DCHECK(GetArenaNoVirtual() == NULL);
}

void StringMap::ArenaDtor(void* object) {
  StringMap* _this = reinterpret_cast< StringMap* >(object);
  (void)_this;
}
void StringMap::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void StringMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StringMap::descriptor() {
  ::protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringMap& StringMap::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fv1_2fattributes_2eproto::scc_info_StringMap.base);
  return *internal_default_instance();
}


void StringMap::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.v1.StringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear();
}

bool StringMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.v1.StringMap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<sint32, sint32> entries = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          StringMap_EntriesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              StringMap_EntriesEntry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_SINT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&entries_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.v1.StringMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.v1.StringMap)
  return false;
#undef DO_
}

void StringMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.v1.StringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<sint32, sint32> entries = 1;
  if (!this->entries().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->entries().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->entries().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<StringMap_EntriesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(entries_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<StringMap_EntriesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it) {
        entry.reset(entries_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.v1.StringMap)
}

::google::protobuf::uint8* StringMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.v1.StringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<sint32, sint32> entries = 1;
  if (!this->entries().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->entries().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->entries().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<StringMap_EntriesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(entries_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    } else {
      ::std::unique_ptr<StringMap_EntriesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->entries().begin();
          it != this->entries().end(); ++it) {
        entry.reset(entries_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        if (entry->GetArena() != NULL) {
          entry.release();
        }
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.v1.StringMap)
  return target;
}

size_t StringMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.v1.StringMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<sint32, sint32> entries = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->entries_size());
  {
    ::std::unique_ptr<StringMap_EntriesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->entries().begin();
        it != this->entries().end(); ++it) {
      if (entry.get() != NULL && entry->GetArena() != NULL) {
        entry.release();
      }
      entry.reset(entries_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
    if (entry.get() != NULL && entry->GetArena() != NULL) {
      entry.release();
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.v1.StringMap)
  GOOGLE_DCHECK_NE(&from, this);
  const StringMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.v1.StringMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.v1.StringMap)
    MergeFrom(*source);
  }
}

void StringMap::MergeFrom(const StringMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.v1.StringMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void StringMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.v1.StringMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringMap::CopyFrom(const StringMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.v1.StringMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringMap::IsInitialized() const {
  return true;
}

void StringMap::Swap(StringMap* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    StringMap* temp = New(GetArenaNoVirtual());
    temp->MergeFrom(*other);
    other->CopyFrom(*this);
    InternalSwap(temp);
    if (GetArenaNoVirtual() == NULL) {
      delete temp;
    }
  }
}
void StringMap::UnsafeArenaSwap(StringMap* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void StringMap::InternalSwap(StringMap* other) {
  using std::swap;
  entries_.Swap(&other->entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StringMap::GetMetadata() const {
  protobuf_mixer_2fv1_2fattributes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fv1_2fattributes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace mixer
}  // namespace istio
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::Attributes_AttributesEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::v1::Attributes_AttributesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::Attributes_AttributesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::Attributes_AttributeValue* Arena::CreateMaybeMessage< ::istio::mixer::v1::Attributes_AttributeValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::Attributes_AttributeValue >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::Attributes_StringMap_EntriesEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::v1::Attributes_StringMap_EntriesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::Attributes_StringMap_EntriesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::Attributes_StringMap* Arena::CreateMaybeMessage< ::istio::mixer::v1::Attributes_StringMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::Attributes_StringMap >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::Attributes* Arena::CreateMaybeMessage< ::istio::mixer::v1::Attributes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::Attributes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CompressedAttributes_StringsEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::v1::CompressedAttributes_StringsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CompressedAttributes_StringsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CompressedAttributes_Int64sEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::v1::CompressedAttributes_Int64sEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CompressedAttributes_Int64sEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CompressedAttributes_DoublesEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::v1::CompressedAttributes_DoublesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CompressedAttributes_DoublesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CompressedAttributes_BoolsEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::v1::CompressedAttributes_BoolsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CompressedAttributes_BoolsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CompressedAttributes_TimestampsEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::v1::CompressedAttributes_TimestampsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CompressedAttributes_TimestampsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CompressedAttributes_DurationsEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::v1::CompressedAttributes_DurationsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CompressedAttributes_DurationsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CompressedAttributes_BytesEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::v1::CompressedAttributes_BytesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CompressedAttributes_BytesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CompressedAttributes_StringMapsEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::v1::CompressedAttributes_StringMapsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CompressedAttributes_StringMapsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::CompressedAttributes* Arena::CreateMaybeMessage< ::istio::mixer::v1::CompressedAttributes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::CompressedAttributes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::StringMap_EntriesEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::v1::StringMap_EntriesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::StringMap_EntriesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::v1::StringMap* Arena::CreateMaybeMessage< ::istio::mixer::v1::StringMap >(Arena* arena) {
  return Arena::CreateMessageInternal< ::istio::mixer::v1::StringMap >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
