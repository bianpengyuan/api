// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/adapter/model/v1beta1/infrastructure_backend.proto

#ifndef PROTOBUF_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto__INCLUDED
#define PROTOBUF_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include "google/rpc/status.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[8];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsCreateSessionRequest_InferredTypesEntry_DoNotUseImpl();
void InitDefaultsCreateSessionRequest_InferredTypesEntry_DoNotUse();
void InitDefaultsCreateSessionRequestImpl();
void InitDefaultsCreateSessionRequest();
void InitDefaultsCreateSessionResponseImpl();
void InitDefaultsCreateSessionResponse();
void InitDefaultsValidateRequest_InferredTypesEntry_DoNotUseImpl();
void InitDefaultsValidateRequest_InferredTypesEntry_DoNotUse();
void InitDefaultsValidateRequestImpl();
void InitDefaultsValidateRequest();
void InitDefaultsValidateResponseImpl();
void InitDefaultsValidateResponse();
void InitDefaultsCloseSessionRequestImpl();
void InitDefaultsCloseSessionRequest();
void InitDefaultsCloseSessionResponseImpl();
void InitDefaultsCloseSessionResponse();
inline void InitDefaults() {
  InitDefaultsCreateSessionRequest_InferredTypesEntry_DoNotUse();
  InitDefaultsCreateSessionRequest();
  InitDefaultsCreateSessionResponse();
  InitDefaultsValidateRequest_InferredTypesEntry_DoNotUse();
  InitDefaultsValidateRequest();
  InitDefaultsValidateResponse();
  InitDefaultsCloseSessionRequest();
  InitDefaultsCloseSessionResponse();
}
}  // namespace protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto
namespace istio {
namespace mixer {
namespace adapter {
namespace model {
namespace v1beta1 {
class CloseSessionRequest;
class CloseSessionRequestDefaultTypeInternal;
extern CloseSessionRequestDefaultTypeInternal _CloseSessionRequest_default_instance_;
class CloseSessionResponse;
class CloseSessionResponseDefaultTypeInternal;
extern CloseSessionResponseDefaultTypeInternal _CloseSessionResponse_default_instance_;
class CreateSessionRequest;
class CreateSessionRequestDefaultTypeInternal;
extern CreateSessionRequestDefaultTypeInternal _CreateSessionRequest_default_instance_;
class CreateSessionRequest_InferredTypesEntry_DoNotUse;
class CreateSessionRequest_InferredTypesEntry_DoNotUseDefaultTypeInternal;
extern CreateSessionRequest_InferredTypesEntry_DoNotUseDefaultTypeInternal _CreateSessionRequest_InferredTypesEntry_DoNotUse_default_instance_;
class CreateSessionResponse;
class CreateSessionResponseDefaultTypeInternal;
extern CreateSessionResponseDefaultTypeInternal _CreateSessionResponse_default_instance_;
class ValidateRequest;
class ValidateRequestDefaultTypeInternal;
extern ValidateRequestDefaultTypeInternal _ValidateRequest_default_instance_;
class ValidateRequest_InferredTypesEntry_DoNotUse;
class ValidateRequest_InferredTypesEntry_DoNotUseDefaultTypeInternal;
extern ValidateRequest_InferredTypesEntry_DoNotUseDefaultTypeInternal _ValidateRequest_InferredTypesEntry_DoNotUse_default_instance_;
class ValidateResponse;
class ValidateResponseDefaultTypeInternal;
extern ValidateResponseDefaultTypeInternal _ValidateResponse_default_instance_;
}  // namespace v1beta1
}  // namespace model
}  // namespace adapter
}  // namespace mixer
}  // namespace istio
namespace istio {
namespace mixer {
namespace adapter {
namespace model {
namespace v1beta1 {

// ===================================================================

class CreateSessionRequest_InferredTypesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<CreateSessionRequest_InferredTypesEntry_DoNotUse, 
    ::std::string, ::google::protobuf::Any,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<CreateSessionRequest_InferredTypesEntry_DoNotUse, 
    ::std::string, ::google::protobuf::Any,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  CreateSessionRequest_InferredTypesEntry_DoNotUse();
  CreateSessionRequest_InferredTypesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const CreateSessionRequest_InferredTypesEntry_DoNotUse& other);
  static const CreateSessionRequest_InferredTypesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const CreateSessionRequest_InferredTypesEntry_DoNotUse*>(&_CreateSessionRequest_InferredTypesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class CreateSessionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.adapter.model.v1beta1.CreateSessionRequest) */ {
 public:
  CreateSessionRequest();
  virtual ~CreateSessionRequest();

  CreateSessionRequest(const CreateSessionRequest& from);

  inline CreateSessionRequest& operator=(const CreateSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateSessionRequest(CreateSessionRequest&& from) noexcept
    : CreateSessionRequest() {
    *this = ::std::move(from);
  }

  inline CreateSessionRequest& operator=(CreateSessionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateSessionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateSessionRequest* internal_default_instance() {
    return reinterpret_cast<const CreateSessionRequest*>(
               &_CreateSessionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CreateSessionRequest* other);
  friend void swap(CreateSessionRequest& a, CreateSessionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateSessionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateSessionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateSessionRequest& from);
  void MergeFrom(const CreateSessionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateSessionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.protobuf.Any> inferred_types = 2;
  int inferred_types_size() const;
  void clear_inferred_types();
  static const int kInferredTypesFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >&
      inferred_types() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >*
      mutable_inferred_types();

  // .google.protobuf.Any adapter_config = 1;
  bool has_adapter_config() const;
  void clear_adapter_config();
  static const int kAdapterConfigFieldNumber = 1;
  const ::google::protobuf::Any& adapter_config() const;
  ::google::protobuf::Any* release_adapter_config();
  ::google::protobuf::Any* mutable_adapter_config();
  void set_allocated_adapter_config(::google::protobuf::Any* adapter_config);

  // @@protoc_insertion_point(class_scope:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      CreateSessionRequest_InferredTypesEntry_DoNotUse,
      ::std::string, ::google::protobuf::Any,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > inferred_types_;
  ::google::protobuf::Any* adapter_config_;
  mutable int _cached_size_;
  friend struct ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::TableStruct;
  friend void ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::InitDefaultsCreateSessionRequestImpl();
};
// -------------------------------------------------------------------

class CreateSessionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.adapter.model.v1beta1.CreateSessionResponse) */ {
 public:
  CreateSessionResponse();
  virtual ~CreateSessionResponse();

  CreateSessionResponse(const CreateSessionResponse& from);

  inline CreateSessionResponse& operator=(const CreateSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateSessionResponse(CreateSessionResponse&& from) noexcept
    : CreateSessionResponse() {
    *this = ::std::move(from);
  }

  inline CreateSessionResponse& operator=(CreateSessionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateSessionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateSessionResponse* internal_default_instance() {
    return reinterpret_cast<const CreateSessionResponse*>(
               &_CreateSessionResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CreateSessionResponse* other);
  friend void swap(CreateSessionResponse& a, CreateSessionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateSessionResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateSessionResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateSessionResponse& from);
  void MergeFrom(const CreateSessionResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string session_id = 1;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  const ::std::string& session_id() const;
  void set_session_id(const ::std::string& value);
  #if LANG_CXX11
  void set_session_id(::std::string&& value);
  #endif
  void set_session_id(const char* value);
  void set_session_id(const char* value, size_t size);
  ::std::string* mutable_session_id();
  ::std::string* release_session_id();
  void set_allocated_session_id(::std::string* session_id);

  // .google.rpc.Status status = 2;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 2;
  const ::google::rpc::Status& status() const;
  ::google::rpc::Status* release_status();
  ::google::rpc::Status* mutable_status();
  void set_allocated_status(::google::rpc::Status* status);

  // @@protoc_insertion_point(class_scope:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr session_id_;
  ::google::rpc::Status* status_;
  mutable int _cached_size_;
  friend struct ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::TableStruct;
  friend void ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::InitDefaultsCreateSessionResponseImpl();
};
// -------------------------------------------------------------------

class ValidateRequest_InferredTypesEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<ValidateRequest_InferredTypesEntry_DoNotUse, 
    ::std::string, ::google::protobuf::Any,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<ValidateRequest_InferredTypesEntry_DoNotUse, 
    ::std::string, ::google::protobuf::Any,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
    0 > SuperType;
  ValidateRequest_InferredTypesEntry_DoNotUse();
  ValidateRequest_InferredTypesEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const ValidateRequest_InferredTypesEntry_DoNotUse& other);
  static const ValidateRequest_InferredTypesEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const ValidateRequest_InferredTypesEntry_DoNotUse*>(&_ValidateRequest_InferredTypesEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class ValidateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.adapter.model.v1beta1.ValidateRequest) */ {
 public:
  ValidateRequest();
  virtual ~ValidateRequest();

  ValidateRequest(const ValidateRequest& from);

  inline ValidateRequest& operator=(const ValidateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ValidateRequest(ValidateRequest&& from) noexcept
    : ValidateRequest() {
    *this = ::std::move(from);
  }

  inline ValidateRequest& operator=(ValidateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ValidateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValidateRequest* internal_default_instance() {
    return reinterpret_cast<const ValidateRequest*>(
               &_ValidateRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(ValidateRequest* other);
  friend void swap(ValidateRequest& a, ValidateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ValidateRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ValidateRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ValidateRequest& from);
  void MergeFrom(const ValidateRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ValidateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .google.protobuf.Any> inferred_types = 2;
  int inferred_types_size() const;
  void clear_inferred_types();
  static const int kInferredTypesFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >&
      inferred_types() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >*
      mutable_inferred_types();

  // .google.protobuf.Any adapter_config = 1;
  bool has_adapter_config() const;
  void clear_adapter_config();
  static const int kAdapterConfigFieldNumber = 1;
  const ::google::protobuf::Any& adapter_config() const;
  ::google::protobuf::Any* release_adapter_config();
  ::google::protobuf::Any* mutable_adapter_config();
  void set_allocated_adapter_config(::google::protobuf::Any* adapter_config);

  // @@protoc_insertion_point(class_scope:istio.mixer.adapter.model.v1beta1.ValidateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      ValidateRequest_InferredTypesEntry_DoNotUse,
      ::std::string, ::google::protobuf::Any,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > inferred_types_;
  ::google::protobuf::Any* adapter_config_;
  mutable int _cached_size_;
  friend struct ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::TableStruct;
  friend void ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::InitDefaultsValidateRequestImpl();
};
// -------------------------------------------------------------------

class ValidateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.adapter.model.v1beta1.ValidateResponse) */ {
 public:
  ValidateResponse();
  virtual ~ValidateResponse();

  ValidateResponse(const ValidateResponse& from);

  inline ValidateResponse& operator=(const ValidateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ValidateResponse(ValidateResponse&& from) noexcept
    : ValidateResponse() {
    *this = ::std::move(from);
  }

  inline ValidateResponse& operator=(ValidateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ValidateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ValidateResponse* internal_default_instance() {
    return reinterpret_cast<const ValidateResponse*>(
               &_ValidateResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(ValidateResponse* other);
  friend void swap(ValidateResponse& a, ValidateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ValidateResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ValidateResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ValidateResponse& from);
  void MergeFrom(const ValidateResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ValidateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.rpc.Status status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  const ::google::rpc::Status& status() const;
  ::google::rpc::Status* release_status();
  ::google::rpc::Status* mutable_status();
  void set_allocated_status(::google::rpc::Status* status);

  // @@protoc_insertion_point(class_scope:istio.mixer.adapter.model.v1beta1.ValidateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::rpc::Status* status_;
  mutable int _cached_size_;
  friend struct ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::TableStruct;
  friend void ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::InitDefaultsValidateResponseImpl();
};
// -------------------------------------------------------------------

class CloseSessionRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.adapter.model.v1beta1.CloseSessionRequest) */ {
 public:
  CloseSessionRequest();
  virtual ~CloseSessionRequest();

  CloseSessionRequest(const CloseSessionRequest& from);

  inline CloseSessionRequest& operator=(const CloseSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CloseSessionRequest(CloseSessionRequest&& from) noexcept
    : CloseSessionRequest() {
    *this = ::std::move(from);
  }

  inline CloseSessionRequest& operator=(CloseSessionRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseSessionRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CloseSessionRequest* internal_default_instance() {
    return reinterpret_cast<const CloseSessionRequest*>(
               &_CloseSessionRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CloseSessionRequest* other);
  friend void swap(CloseSessionRequest& a, CloseSessionRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CloseSessionRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CloseSessionRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloseSessionRequest& from);
  void MergeFrom(const CloseSessionRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloseSessionRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string session_id = 1;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 1;
  const ::std::string& session_id() const;
  void set_session_id(const ::std::string& value);
  #if LANG_CXX11
  void set_session_id(::std::string&& value);
  #endif
  void set_session_id(const char* value);
  void set_session_id(const char* value, size_t size);
  ::std::string* mutable_session_id();
  ::std::string* release_session_id();
  void set_allocated_session_id(::std::string* session_id);

  // @@protoc_insertion_point(class_scope:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr session_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::TableStruct;
  friend void ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::InitDefaultsCloseSessionRequestImpl();
};
// -------------------------------------------------------------------

class CloseSessionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:istio.mixer.adapter.model.v1beta1.CloseSessionResponse) */ {
 public:
  CloseSessionResponse();
  virtual ~CloseSessionResponse();

  CloseSessionResponse(const CloseSessionResponse& from);

  inline CloseSessionResponse& operator=(const CloseSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CloseSessionResponse(CloseSessionResponse&& from) noexcept
    : CloseSessionResponse() {
    *this = ::std::move(from);
  }

  inline CloseSessionResponse& operator=(CloseSessionResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CloseSessionResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CloseSessionResponse* internal_default_instance() {
    return reinterpret_cast<const CloseSessionResponse*>(
               &_CloseSessionResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CloseSessionResponse* other);
  friend void swap(CloseSessionResponse& a, CloseSessionResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CloseSessionResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CloseSessionResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CloseSessionResponse& from);
  void MergeFrom(const CloseSessionResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CloseSessionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .google.rpc.Status status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  const ::google::rpc::Status& status() const;
  ::google::rpc::Status* release_status();
  ::google::rpc::Status* mutable_status();
  void set_allocated_status(::google::rpc::Status* status);

  // @@protoc_insertion_point(class_scope:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::rpc::Status* status_;
  mutable int _cached_size_;
  friend struct ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::TableStruct;
  friend void ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::InitDefaultsCloseSessionResponseImpl();
};
// ===================================================================

class InfrastructureBackend_Stub;

class InfrastructureBackend : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline InfrastructureBackend() {};
 public:
  virtual ~InfrastructureBackend();

  typedef InfrastructureBackend_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void Validate(::google::protobuf::RpcController* controller,
                       const ::istio::mixer::adapter::model::v1beta1::ValidateRequest* request,
                       ::istio::mixer::adapter::model::v1beta1::ValidateResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void CreateSession(::google::protobuf::RpcController* controller,
                       const ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest* request,
                       ::istio::mixer::adapter::model::v1beta1::CreateSessionResponse* response,
                       ::google::protobuf::Closure* done);
  virtual void CloseSession(::google::protobuf::RpcController* controller,
                       const ::istio::mixer::adapter::model::v1beta1::CloseSessionRequest* request,
                       ::istio::mixer::adapter::model::v1beta1::CloseSessionResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(InfrastructureBackend);
};

class InfrastructureBackend_Stub : public InfrastructureBackend {
 public:
  InfrastructureBackend_Stub(::google::protobuf::RpcChannel* channel);
  InfrastructureBackend_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~InfrastructureBackend_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements InfrastructureBackend ------------------------------------------

  void Validate(::google::protobuf::RpcController* controller,
                       const ::istio::mixer::adapter::model::v1beta1::ValidateRequest* request,
                       ::istio::mixer::adapter::model::v1beta1::ValidateResponse* response,
                       ::google::protobuf::Closure* done);
  void CreateSession(::google::protobuf::RpcController* controller,
                       const ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest* request,
                       ::istio::mixer::adapter::model::v1beta1::CreateSessionResponse* response,
                       ::google::protobuf::Closure* done);
  void CloseSession(::google::protobuf::RpcController* controller,
                       const ::istio::mixer::adapter::model::v1beta1::CloseSessionRequest* request,
                       ::istio::mixer::adapter::model::v1beta1::CloseSessionResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(InfrastructureBackend_Stub);
};


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// CreateSessionRequest

// .google.protobuf.Any adapter_config = 1;
inline bool CreateSessionRequest::has_adapter_config() const {
  return this != internal_default_instance() && adapter_config_ != NULL;
}
inline const ::google::protobuf::Any& CreateSessionRequest::adapter_config() const {
  const ::google::protobuf::Any* p = adapter_config_;
  // @@protoc_insertion_point(field_get:istio.mixer.adapter.model.v1beta1.CreateSessionRequest.adapter_config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* CreateSessionRequest::release_adapter_config() {
  // @@protoc_insertion_point(field_release:istio.mixer.adapter.model.v1beta1.CreateSessionRequest.adapter_config)
  
  ::google::protobuf::Any* temp = adapter_config_;
  adapter_config_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* CreateSessionRequest::mutable_adapter_config() {
  
  if (adapter_config_ == NULL) {
    adapter_config_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.adapter.model.v1beta1.CreateSessionRequest.adapter_config)
  return adapter_config_;
}
inline void CreateSessionRequest::set_allocated_adapter_config(::google::protobuf::Any* adapter_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(adapter_config_);
  }
  if (adapter_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      adapter_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, adapter_config, submessage_arena);
    }
    
  } else {
    
  }
  adapter_config_ = adapter_config;
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.adapter.model.v1beta1.CreateSessionRequest.adapter_config)
}

// map<string, .google.protobuf.Any> inferred_types = 2;
inline int CreateSessionRequest::inferred_types_size() const {
  return inferred_types_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >&
CreateSessionRequest::inferred_types() const {
  // @@protoc_insertion_point(field_map:istio.mixer.adapter.model.v1beta1.CreateSessionRequest.inferred_types)
  return inferred_types_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >*
CreateSessionRequest::mutable_inferred_types() {
  // @@protoc_insertion_point(field_mutable_map:istio.mixer.adapter.model.v1beta1.CreateSessionRequest.inferred_types)
  return inferred_types_.MutableMap();
}

// -------------------------------------------------------------------

// CreateSessionResponse

// string session_id = 1;
inline void CreateSessionResponse::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateSessionResponse::session_id() const {
  // @@protoc_insertion_point(field_get:istio.mixer.adapter.model.v1beta1.CreateSessionResponse.session_id)
  return session_id_.GetNoArena();
}
inline void CreateSessionResponse::set_session_id(const ::std::string& value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mixer.adapter.model.v1beta1.CreateSessionResponse.session_id)
}
#if LANG_CXX11
inline void CreateSessionResponse::set_session_id(::std::string&& value) {
  
  session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mixer.adapter.model.v1beta1.CreateSessionResponse.session_id)
}
#endif
inline void CreateSessionResponse::set_session_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mixer.adapter.model.v1beta1.CreateSessionResponse.session_id)
}
inline void CreateSessionResponse::set_session_id(const char* value, size_t size) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.adapter.model.v1beta1.CreateSessionResponse.session_id)
}
inline ::std::string* CreateSessionResponse::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:istio.mixer.adapter.model.v1beta1.CreateSessionResponse.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateSessionResponse::release_session_id() {
  // @@protoc_insertion_point(field_release:istio.mixer.adapter.model.v1beta1.CreateSessionResponse.session_id)
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateSessionResponse::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.adapter.model.v1beta1.CreateSessionResponse.session_id)
}

// .google.rpc.Status status = 2;
inline bool CreateSessionResponse::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::rpc::Status& CreateSessionResponse::status() const {
  const ::google::rpc::Status* p = status_;
  // @@protoc_insertion_point(field_get:istio.mixer.adapter.model.v1beta1.CreateSessionResponse.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::rpc::Status*>(
      &::google::rpc::_Status_default_instance_);
}
inline ::google::rpc::Status* CreateSessionResponse::release_status() {
  // @@protoc_insertion_point(field_release:istio.mixer.adapter.model.v1beta1.CreateSessionResponse.status)
  
  ::google::rpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::rpc::Status* CreateSessionResponse::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::google::rpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.adapter.model.v1beta1.CreateSessionResponse.status)
  return status_;
}
inline void CreateSessionResponse::set_allocated_status(::google::rpc::Status* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.adapter.model.v1beta1.CreateSessionResponse.status)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ValidateRequest

// .google.protobuf.Any adapter_config = 1;
inline bool ValidateRequest::has_adapter_config() const {
  return this != internal_default_instance() && adapter_config_ != NULL;
}
inline const ::google::protobuf::Any& ValidateRequest::adapter_config() const {
  const ::google::protobuf::Any* p = adapter_config_;
  // @@protoc_insertion_point(field_get:istio.mixer.adapter.model.v1beta1.ValidateRequest.adapter_config)
  return p != NULL ? *p : *reinterpret_cast<const ::google::protobuf::Any*>(
      &::google::protobuf::_Any_default_instance_);
}
inline ::google::protobuf::Any* ValidateRequest::release_adapter_config() {
  // @@protoc_insertion_point(field_release:istio.mixer.adapter.model.v1beta1.ValidateRequest.adapter_config)
  
  ::google::protobuf::Any* temp = adapter_config_;
  adapter_config_ = NULL;
  return temp;
}
inline ::google::protobuf::Any* ValidateRequest::mutable_adapter_config() {
  
  if (adapter_config_ == NULL) {
    adapter_config_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.adapter.model.v1beta1.ValidateRequest.adapter_config)
  return adapter_config_;
}
inline void ValidateRequest::set_allocated_adapter_config(::google::protobuf::Any* adapter_config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(adapter_config_);
  }
  if (adapter_config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      adapter_config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, adapter_config, submessage_arena);
    }
    
  } else {
    
  }
  adapter_config_ = adapter_config;
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.adapter.model.v1beta1.ValidateRequest.adapter_config)
}

// map<string, .google.protobuf.Any> inferred_types = 2;
inline int ValidateRequest::inferred_types_size() const {
  return inferred_types_.size();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >&
ValidateRequest::inferred_types() const {
  // @@protoc_insertion_point(field_map:istio.mixer.adapter.model.v1beta1.ValidateRequest.inferred_types)
  return inferred_types_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >*
ValidateRequest::mutable_inferred_types() {
  // @@protoc_insertion_point(field_mutable_map:istio.mixer.adapter.model.v1beta1.ValidateRequest.inferred_types)
  return inferred_types_.MutableMap();
}

// -------------------------------------------------------------------

// ValidateResponse

// .google.rpc.Status status = 1;
inline bool ValidateResponse::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::rpc::Status& ValidateResponse::status() const {
  const ::google::rpc::Status* p = status_;
  // @@protoc_insertion_point(field_get:istio.mixer.adapter.model.v1beta1.ValidateResponse.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::rpc::Status*>(
      &::google::rpc::_Status_default_instance_);
}
inline ::google::rpc::Status* ValidateResponse::release_status() {
  // @@protoc_insertion_point(field_release:istio.mixer.adapter.model.v1beta1.ValidateResponse.status)
  
  ::google::rpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::rpc::Status* ValidateResponse::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::google::rpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.adapter.model.v1beta1.ValidateResponse.status)
  return status_;
}
inline void ValidateResponse::set_allocated_status(::google::rpc::Status* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.adapter.model.v1beta1.ValidateResponse.status)
}

// -------------------------------------------------------------------

// CloseSessionRequest

// string session_id = 1;
inline void CloseSessionRequest::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CloseSessionRequest::session_id() const {
  // @@protoc_insertion_point(field_get:istio.mixer.adapter.model.v1beta1.CloseSessionRequest.session_id)
  return session_id_.GetNoArena();
}
inline void CloseSessionRequest::set_session_id(const ::std::string& value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:istio.mixer.adapter.model.v1beta1.CloseSessionRequest.session_id)
}
#if LANG_CXX11
inline void CloseSessionRequest::set_session_id(::std::string&& value) {
  
  session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:istio.mixer.adapter.model.v1beta1.CloseSessionRequest.session_id)
}
#endif
inline void CloseSessionRequest::set_session_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:istio.mixer.adapter.model.v1beta1.CloseSessionRequest.session_id)
}
inline void CloseSessionRequest::set_session_id(const char* value, size_t size) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:istio.mixer.adapter.model.v1beta1.CloseSessionRequest.session_id)
}
inline ::std::string* CloseSessionRequest::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:istio.mixer.adapter.model.v1beta1.CloseSessionRequest.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CloseSessionRequest::release_session_id() {
  // @@protoc_insertion_point(field_release:istio.mixer.adapter.model.v1beta1.CloseSessionRequest.session_id)
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CloseSessionRequest::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.adapter.model.v1beta1.CloseSessionRequest.session_id)
}

// -------------------------------------------------------------------

// CloseSessionResponse

// .google.rpc.Status status = 1;
inline bool CloseSessionResponse::has_status() const {
  return this != internal_default_instance() && status_ != NULL;
}
inline const ::google::rpc::Status& CloseSessionResponse::status() const {
  const ::google::rpc::Status* p = status_;
  // @@protoc_insertion_point(field_get:istio.mixer.adapter.model.v1beta1.CloseSessionResponse.status)
  return p != NULL ? *p : *reinterpret_cast<const ::google::rpc::Status*>(
      &::google::rpc::_Status_default_instance_);
}
inline ::google::rpc::Status* CloseSessionResponse::release_status() {
  // @@protoc_insertion_point(field_release:istio.mixer.adapter.model.v1beta1.CloseSessionResponse.status)
  
  ::google::rpc::Status* temp = status_;
  status_ = NULL;
  return temp;
}
inline ::google::rpc::Status* CloseSessionResponse::mutable_status() {
  
  if (status_ == NULL) {
    status_ = new ::google::rpc::Status;
  }
  // @@protoc_insertion_point(field_mutable:istio.mixer.adapter.model.v1beta1.CloseSessionResponse.status)
  return status_;
}
inline void CloseSessionResponse::set_allocated_status(::google::rpc::Status* status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(status_);
  }
  if (status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, status, submessage_arena);
    }
    
  } else {
    
  }
  status_ = status;
  // @@protoc_insertion_point(field_set_allocated:istio.mixer.adapter.model.v1beta1.CloseSessionResponse.status)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace model
}  // namespace adapter
}  // namespace mixer
}  // namespace istio

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto__INCLUDED
