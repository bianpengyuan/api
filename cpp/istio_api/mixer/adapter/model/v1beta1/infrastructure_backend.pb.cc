// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/adapter/model/v1beta1/infrastructure_backend.proto

#include "mixer/adapter/model/v1beta1/infrastructure_backend.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_google_2fprotobuf_2fany_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fany_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Any;
}  // namespace protobuf_google_2fprotobuf_2fany_2eproto
namespace protobuf_google_2frpc_2fstatus_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2frpc_2fstatus_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Status;
}  // namespace protobuf_google_2frpc_2fstatus_2eproto
namespace protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CreateSessionRequest_InferredTypesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ValidateRequest_InferredTypesEntry_DoNotUse;
}  // namespace protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto
namespace istio {
namespace mixer {
namespace adapter {
namespace model {
namespace v1beta1 {
class CreateSessionRequest_InferredTypesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateSessionRequest_InferredTypesEntry_DoNotUse>
      _instance;
} _CreateSessionRequest_InferredTypesEntry_DoNotUse_default_instance_;
class CreateSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateSessionRequest>
      _instance;
} _CreateSessionRequest_default_instance_;
class CreateSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreateSessionResponse>
      _instance;
} _CreateSessionResponse_default_instance_;
class ValidateRequest_InferredTypesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateRequest_InferredTypesEntry_DoNotUse>
      _instance;
} _ValidateRequest_InferredTypesEntry_DoNotUse_default_instance_;
class ValidateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateRequest>
      _instance;
} _ValidateRequest_default_instance_;
class ValidateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ValidateResponse>
      _instance;
} _ValidateResponse_default_instance_;
class CloseSessionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseSessionRequest>
      _instance;
} _CloseSessionRequest_default_instance_;
class CloseSessionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CloseSessionResponse>
      _instance;
} _CloseSessionResponse_default_instance_;
}  // namespace v1beta1
}  // namespace model
}  // namespace adapter
}  // namespace mixer
}  // namespace istio
namespace protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto {
static void InitDefaultsCreateSessionRequest_InferredTypesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_CreateSessionRequest_InferredTypesEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest_InferredTypesEntry_DoNotUse();
  }
  ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest_InferredTypesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateSessionRequest_InferredTypesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateSessionRequest_InferredTypesEntry_DoNotUse}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsCreateSessionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_CreateSessionRequest_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CreateSessionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCreateSessionRequest}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,
      &protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_CreateSessionRequest_InferredTypesEntry_DoNotUse.base,}};

static void InitDefaultsCreateSessionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_CreateSessionResponse_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::CreateSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::adapter::model::v1beta1::CreateSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CreateSessionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCreateSessionResponse}, {
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,}};

static void InitDefaultsValidateRequest_InferredTypesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_ValidateRequest_InferredTypesEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::ValidateRequest_InferredTypesEntry_DoNotUse();
  }
  ::istio::mixer::adapter::model::v1beta1::ValidateRequest_InferredTypesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ValidateRequest_InferredTypesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValidateRequest_InferredTypesEntry_DoNotUse}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,}};

static void InitDefaultsValidateRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_ValidateRequest_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::ValidateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::adapter::model::v1beta1::ValidateRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ValidateRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsValidateRequest}, {
      &protobuf_google_2fprotobuf_2fany_2eproto::scc_info_Any.base,
      &protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_ValidateRequest_InferredTypesEntry_DoNotUse.base,}};

static void InitDefaultsValidateResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_ValidateResponse_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::ValidateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::adapter::model::v1beta1::ValidateResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ValidateResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsValidateResponse}, {
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,}};

static void InitDefaultsCloseSessionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_CloseSessionRequest_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::CloseSessionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::adapter::model::v1beta1::CloseSessionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CloseSessionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCloseSessionRequest}, {}};

static void InitDefaultsCloseSessionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_CloseSessionResponse_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::CloseSessionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::adapter::model::v1beta1::CloseSessionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CloseSessionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCloseSessionResponse}, {
      &protobuf_google_2frpc_2fstatus_2eproto::scc_info_Status.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_CreateSessionRequest_InferredTypesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateSessionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreateSessionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateRequest_InferredTypesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ValidateResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CloseSessionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CloseSessionResponse.base);
}

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CreateSessionRequest_InferredTypesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CreateSessionRequest_InferredTypesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CreateSessionRequest_InferredTypesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CreateSessionRequest_InferredTypesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CreateSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CreateSessionRequest, adapter_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CreateSessionRequest, inferred_types_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CreateSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CreateSessionResponse, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CreateSessionResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::ValidateRequest_InferredTypesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::ValidateRequest_InferredTypesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::ValidateRequest_InferredTypesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::ValidateRequest_InferredTypesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::ValidateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::ValidateRequest, adapter_config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::ValidateRequest, inferred_types_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::ValidateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::ValidateResponse, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CloseSessionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CloseSessionRequest, session_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CloseSessionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::CloseSessionResponse, status_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::istio::mixer::adapter::model::v1beta1::CreateSessionRequest_InferredTypesEntry_DoNotUse)},
  { 9, -1, sizeof(::istio::mixer::adapter::model::v1beta1::CreateSessionRequest)},
  { 16, -1, sizeof(::istio::mixer::adapter::model::v1beta1::CreateSessionResponse)},
  { 23, 30, sizeof(::istio::mixer::adapter::model::v1beta1::ValidateRequest_InferredTypesEntry_DoNotUse)},
  { 32, -1, sizeof(::istio::mixer::adapter::model::v1beta1::ValidateRequest)},
  { 39, -1, sizeof(::istio::mixer::adapter::model::v1beta1::ValidateResponse)},
  { 45, -1, sizeof(::istio::mixer::adapter::model::v1beta1::CloseSessionRequest)},
  { 51, -1, sizeof(::istio::mixer::adapter::model::v1beta1::CloseSessionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_CreateSessionRequest_InferredTypesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_CreateSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_CreateSessionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_ValidateRequest_InferredTypesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_ValidateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_ValidateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_CloseSessionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_CloseSessionResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "mixer/adapter/model/v1beta1/infrastructure_backend.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n8mixer/adapter/model/v1beta1/infrastruc"
      "ture_backend.proto\022!istio.mixer.adapter."
      "model.v1beta1\032\031google/protobuf/any.proto"
      "\032\027google/rpc/status.proto\"\364\001\n\024CreateSess"
      "ionRequest\022,\n\016adapter_config\030\001 \001(\0132\024.goo"
      "gle.protobuf.Any\022b\n\016inferred_types\030\002 \003(\013"
      "2J.istio.mixer.adapter.model.v1beta1.Cre"
      "ateSessionRequest.InferredTypesEntry\032J\n\022"
      "InferredTypesEntry\022\013\n\003key\030\001 \001(\t\022#\n\005value"
      "\030\002 \001(\0132\024.google.protobuf.Any:\0028\001\"O\n\025Crea"
      "teSessionResponse\022\022\n\nsession_id\030\001 \001(\t\022\"\n"
      "\006status\030\002 \001(\0132\022.google.rpc.Status\"\352\001\n\017Va"
      "lidateRequest\022,\n\016adapter_config\030\001 \001(\0132\024."
      "google.protobuf.Any\022]\n\016inferred_types\030\002 "
      "\003(\0132E.istio.mixer.adapter.model.v1beta1."
      "ValidateRequest.InferredTypesEntry\032J\n\022In"
      "ferredTypesEntry\022\013\n\003key\030\001 \001(\t\022#\n\005value\030\002"
      " \001(\0132\024.google.protobuf.Any:\0028\001\"6\n\020Valida"
      "teResponse\022\"\n\006status\030\001 \001(\0132\022.google.rpc."
      "Status\")\n\023CloseSessionRequest\022\022\n\nsession"
      "_id\030\001 \001(\t\":\n\024CloseSessionResponse\022\"\n\006sta"
      "tus\030\001 \001(\0132\022.google.rpc.Status2\222\003\n\025Infras"
      "tructureBackend\022s\n\010Validate\0222.istio.mixe"
      "r.adapter.model.v1beta1.ValidateRequest\032"
      "3.istio.mixer.adapter.model.v1beta1.Vali"
      "dateResponse\022\202\001\n\rCreateSession\0227.istio.m"
      "ixer.adapter.model.v1beta1.CreateSession"
      "Request\0328.istio.mixer.adapter.model.v1be"
      "ta1.CreateSessionResponse\022\177\n\014CloseSessio"
      "n\0226.istio.mixer.adapter.model.v1beta1.Cl"
      "oseSessionRequest\0327.istio.mixer.adapter."
      "model.v1beta1.CloseSessionResponseB-Z(is"
      "tio.io/api/mixer/adapter/model/v1beta1\200\001"
      "\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1329);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mixer/adapter/model/v1beta1/infrastructure_backend.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fany_2eproto::AddDescriptors();
  ::protobuf_google_2frpc_2fstatus_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto
namespace istio {
namespace mixer {
namespace adapter {
namespace model {
namespace v1beta1 {

// ===================================================================

CreateSessionRequest_InferredTypesEntry_DoNotUse::CreateSessionRequest_InferredTypesEntry_DoNotUse() {}
CreateSessionRequest_InferredTypesEntry_DoNotUse::CreateSessionRequest_InferredTypesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void CreateSessionRequest_InferredTypesEntry_DoNotUse::MergeFrom(const CreateSessionRequest_InferredTypesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata CreateSessionRequest_InferredTypesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[0];
}
void CreateSessionRequest_InferredTypesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void CreateSessionRequest::InitAsDefaultInstance() {
  ::istio::mixer::adapter::model::v1beta1::_CreateSessionRequest_default_instance_._instance.get_mutable()->adapter_config_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void CreateSessionRequest::clear_adapter_config() {
  if (GetArenaNoVirtual() == NULL && adapter_config_ != NULL) {
    delete adapter_config_;
  }
  adapter_config_ = NULL;
}
void CreateSessionRequest::clear_inferred_types() {
  inferred_types_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateSessionRequest::kAdapterConfigFieldNumber;
const int CreateSessionRequest::kInferredTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateSessionRequest::CreateSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_CreateSessionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
}
CreateSessionRequest::CreateSessionRequest(const CreateSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  inferred_types_.MergeFrom(from.inferred_types_);
  if (from.has_adapter_config()) {
    adapter_config_ = new ::google::protobuf::Any(*from.adapter_config_);
  } else {
    adapter_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
}

void CreateSessionRequest::SharedCtor() {
  adapter_config_ = NULL;
}

CreateSessionRequest::~CreateSessionRequest() {
  // @@protoc_insertion_point(destructor:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
  SharedDtor();
}

void CreateSessionRequest::SharedDtor() {
  if (this != internal_default_instance()) delete adapter_config_;
}

void CreateSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateSessionRequest::descriptor() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateSessionRequest& CreateSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_CreateSessionRequest.base);
  return *internal_default_instance();
}


void CreateSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inferred_types_.Clear();
  if (GetArenaNoVirtual() == NULL && adapter_config_ != NULL) {
    delete adapter_config_;
  }
  adapter_config_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any adapter_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adapter_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.protobuf.Any> inferred_types = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          CreateSessionRequest_InferredTypesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              CreateSessionRequest_InferredTypesEntry_DoNotUse,
              ::std::string, ::google::protobuf::Any,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::Any > > parser(&inferred_types_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.adapter.model.v1beta1.CreateSessionRequest.InferredTypesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
  return false;
#undef DO_
}

void CreateSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any adapter_config = 1;
  if (this->has_adapter_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_adapter_config(), output);
  }

  // map<string, .google.protobuf.Any> inferred_types = 2;
  if (!this->inferred_types().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.adapter.model.v1beta1.CreateSessionRequest.InferredTypesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->inferred_types().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->inferred_types().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->inferred_types().begin();
          it != this->inferred_types().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CreateSessionRequest_InferredTypesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(inferred_types_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<CreateSessionRequest_InferredTypesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->inferred_types().begin();
          it != this->inferred_types().end(); ++it) {
        entry.reset(inferred_types_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
}

::google::protobuf::uint8* CreateSessionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any adapter_config = 1;
  if (this->has_adapter_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_adapter_config(), deterministic, target);
  }

  // map<string, .google.protobuf.Any> inferred_types = 2;
  if (!this->inferred_types().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.adapter.model.v1beta1.CreateSessionRequest.InferredTypesEntry.key");
      }
    };

    if (deterministic &&
        this->inferred_types().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->inferred_types().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->inferred_types().begin();
          it != this->inferred_types().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<CreateSessionRequest_InferredTypesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(inferred_types_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<CreateSessionRequest_InferredTypesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->inferred_types().begin();
          it != this->inferred_types().end(); ++it) {
        entry.reset(inferred_types_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
  return target;
}

size_t CreateSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .google.protobuf.Any> inferred_types = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->inferred_types_size());
  {
    ::std::unique_ptr<CreateSessionRequest_InferredTypesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
        it = this->inferred_types().begin();
        it != this->inferred_types().end(); ++it) {
      entry.reset(inferred_types_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .google.protobuf.Any adapter_config = 1;
  if (this->has_adapter_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adapter_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSessionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateSessionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
    MergeFrom(*source);
  }
}

void CreateSessionRequest::MergeFrom(const CreateSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inferred_types_.MergeFrom(from.inferred_types_);
  if (from.has_adapter_config()) {
    mutable_adapter_config()->::google::protobuf::Any::MergeFrom(from.adapter_config());
  }
}

void CreateSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSessionRequest::CopyFrom(const CreateSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.adapter.model.v1beta1.CreateSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSessionRequest::IsInitialized() const {
  return true;
}

void CreateSessionRequest::Swap(CreateSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateSessionRequest::InternalSwap(CreateSessionRequest* other) {
  using std::swap;
  inferred_types_.Swap(&other->inferred_types_);
  swap(adapter_config_, other->adapter_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateSessionRequest::GetMetadata() const {
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreateSessionResponse::InitAsDefaultInstance() {
  ::istio::mixer::adapter::model::v1beta1::_CreateSessionResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void CreateSessionResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateSessionResponse::kSessionIdFieldNumber;
const int CreateSessionResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateSessionResponse::CreateSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_CreateSessionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
}
CreateSessionResponse::CreateSessionResponse(const CreateSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
}

void CreateSessionResponse::SharedCtor() {
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_ = NULL;
}

CreateSessionResponse::~CreateSessionResponse() {
  // @@protoc_insertion_point(destructor:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
  SharedDtor();
}

void CreateSessionResponse::SharedDtor() {
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete status_;
}

void CreateSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreateSessionResponse::descriptor() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateSessionResponse& CreateSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_CreateSessionResponse.base);
  return *internal_default_instance();
}


void CreateSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool CreateSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.adapter.model.v1beta1.CreateSessionResponse.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.rpc.Status status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
  return false;
#undef DO_
}

void CreateSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.adapter.model.v1beta1.CreateSessionResponse.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_id(), output);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
}

::google::protobuf::uint8* CreateSessionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.adapter.model.v1beta1.CreateSessionResponse.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session_id(), target);
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
  return target;
}

size_t CreateSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string session_id = 1;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  // .google.rpc.Status status = 2;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateSessionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateSessionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
    MergeFrom(*source);
  }
}

void CreateSessionResponse::MergeFrom(const CreateSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
}

void CreateSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateSessionResponse::CopyFrom(const CreateSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.adapter.model.v1beta1.CreateSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSessionResponse::IsInitialized() const {
  return true;
}

void CreateSessionResponse::Swap(CreateSessionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateSessionResponse::InternalSwap(CreateSessionResponse* other) {
  using std::swap;
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreateSessionResponse::GetMetadata() const {
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ValidateRequest_InferredTypesEntry_DoNotUse::ValidateRequest_InferredTypesEntry_DoNotUse() {}
ValidateRequest_InferredTypesEntry_DoNotUse::ValidateRequest_InferredTypesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ValidateRequest_InferredTypesEntry_DoNotUse::MergeFrom(const ValidateRequest_InferredTypesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ValidateRequest_InferredTypesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[3];
}
void ValidateRequest_InferredTypesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ValidateRequest::InitAsDefaultInstance() {
  ::istio::mixer::adapter::model::v1beta1::_ValidateRequest_default_instance_._instance.get_mutable()->adapter_config_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}
void ValidateRequest::clear_adapter_config() {
  if (GetArenaNoVirtual() == NULL && adapter_config_ != NULL) {
    delete adapter_config_;
  }
  adapter_config_ = NULL;
}
void ValidateRequest::clear_inferred_types() {
  inferred_types_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateRequest::kAdapterConfigFieldNumber;
const int ValidateRequest::kInferredTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateRequest::ValidateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_ValidateRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.adapter.model.v1beta1.ValidateRequest)
}
ValidateRequest::ValidateRequest(const ValidateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  inferred_types_.MergeFrom(from.inferred_types_);
  if (from.has_adapter_config()) {
    adapter_config_ = new ::google::protobuf::Any(*from.adapter_config_);
  } else {
    adapter_config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:istio.mixer.adapter.model.v1beta1.ValidateRequest)
}

void ValidateRequest::SharedCtor() {
  adapter_config_ = NULL;
}

ValidateRequest::~ValidateRequest() {
  // @@protoc_insertion_point(destructor:istio.mixer.adapter.model.v1beta1.ValidateRequest)
  SharedDtor();
}

void ValidateRequest::SharedDtor() {
  if (this != internal_default_instance()) delete adapter_config_;
}

void ValidateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValidateRequest::descriptor() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValidateRequest& ValidateRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_ValidateRequest.base);
  return *internal_default_instance();
}


void ValidateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.adapter.model.v1beta1.ValidateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inferred_types_.Clear();
  if (GetArenaNoVirtual() == NULL && adapter_config_ != NULL) {
    delete adapter_config_;
  }
  adapter_config_ = NULL;
  _internal_metadata_.Clear();
}

bool ValidateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.adapter.model.v1beta1.ValidateRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Any adapter_config = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_adapter_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, .google.protobuf.Any> inferred_types = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          ValidateRequest_InferredTypesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ValidateRequest_InferredTypesEntry_DoNotUse,
              ::std::string, ::google::protobuf::Any,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::Any > > parser(&inferred_types_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.adapter.model.v1beta1.ValidateRequest.InferredTypesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.adapter.model.v1beta1.ValidateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.adapter.model.v1beta1.ValidateRequest)
  return false;
#undef DO_
}

void ValidateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.adapter.model.v1beta1.ValidateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any adapter_config = 1;
  if (this->has_adapter_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_adapter_config(), output);
  }

  // map<string, .google.protobuf.Any> inferred_types = 2;
  if (!this->inferred_types().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.adapter.model.v1beta1.ValidateRequest.InferredTypesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->inferred_types().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->inferred_types().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->inferred_types().begin();
          it != this->inferred_types().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ValidateRequest_InferredTypesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(inferred_types_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ValidateRequest_InferredTypesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->inferred_types().begin();
          it != this->inferred_types().end(); ++it) {
        entry.reset(inferred_types_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.adapter.model.v1beta1.ValidateRequest)
}

::google::protobuf::uint8* ValidateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.adapter.model.v1beta1.ValidateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any adapter_config = 1;
  if (this->has_adapter_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_adapter_config(), deterministic, target);
  }

  // map<string, .google.protobuf.Any> inferred_types = 2;
  if (!this->inferred_types().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.adapter.model.v1beta1.ValidateRequest.InferredTypesEntry.key");
      }
    };

    if (deterministic &&
        this->inferred_types().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->inferred_types().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->inferred_types().begin();
          it != this->inferred_types().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ValidateRequest_InferredTypesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(inferred_types_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ValidateRequest_InferredTypesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
          it = this->inferred_types().begin();
          it != this->inferred_types().end(); ++it) {
        entry.reset(inferred_types_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.adapter.model.v1beta1.ValidateRequest)
  return target;
}

size_t ValidateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.adapter.model.v1beta1.ValidateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .google.protobuf.Any> inferred_types = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->inferred_types_size());
  {
    ::std::unique_ptr<ValidateRequest_InferredTypesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::Any >::const_iterator
        it = this->inferred_types().begin();
        it != this->inferred_types().end(); ++it) {
      entry.reset(inferred_types_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .google.protobuf.Any adapter_config = 1;
  if (this->has_adapter_config()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *adapter_config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.adapter.model.v1beta1.ValidateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValidateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.adapter.model.v1beta1.ValidateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.adapter.model.v1beta1.ValidateRequest)
    MergeFrom(*source);
  }
}

void ValidateRequest::MergeFrom(const ValidateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.adapter.model.v1beta1.ValidateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inferred_types_.MergeFrom(from.inferred_types_);
  if (from.has_adapter_config()) {
    mutable_adapter_config()->::google::protobuf::Any::MergeFrom(from.adapter_config());
  }
}

void ValidateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.adapter.model.v1beta1.ValidateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateRequest::CopyFrom(const ValidateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.adapter.model.v1beta1.ValidateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateRequest::IsInitialized() const {
  return true;
}

void ValidateRequest::Swap(ValidateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidateRequest::InternalSwap(ValidateRequest* other) {
  using std::swap;
  inferred_types_.Swap(&other->inferred_types_);
  swap(adapter_config_, other->adapter_config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValidateRequest::GetMetadata() const {
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ValidateResponse::InitAsDefaultInstance() {
  ::istio::mixer::adapter::model::v1beta1::_ValidateResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void ValidateResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ValidateResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ValidateResponse::ValidateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_ValidateResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.adapter.model.v1beta1.ValidateResponse)
}
ValidateResponse::ValidateResponse(const ValidateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:istio.mixer.adapter.model.v1beta1.ValidateResponse)
}

void ValidateResponse::SharedCtor() {
  status_ = NULL;
}

ValidateResponse::~ValidateResponse() {
  // @@protoc_insertion_point(destructor:istio.mixer.adapter.model.v1beta1.ValidateResponse)
  SharedDtor();
}

void ValidateResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void ValidateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ValidateResponse::descriptor() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ValidateResponse& ValidateResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_ValidateResponse.base);
  return *internal_default_instance();
}


void ValidateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.adapter.model.v1beta1.ValidateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool ValidateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.adapter.model.v1beta1.ValidateResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.rpc.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.adapter.model.v1beta1.ValidateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.adapter.model.v1beta1.ValidateResponse)
  return false;
#undef DO_
}

void ValidateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.adapter.model.v1beta1.ValidateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.adapter.model.v1beta1.ValidateResponse)
}

::google::protobuf::uint8* ValidateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.adapter.model.v1beta1.ValidateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.adapter.model.v1beta1.ValidateResponse)
  return target;
}

size_t ValidateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.adapter.model.v1beta1.ValidateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.rpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ValidateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.adapter.model.v1beta1.ValidateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ValidateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ValidateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.adapter.model.v1beta1.ValidateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.adapter.model.v1beta1.ValidateResponse)
    MergeFrom(*source);
  }
}

void ValidateResponse::MergeFrom(const ValidateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.adapter.model.v1beta1.ValidateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
}

void ValidateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.adapter.model.v1beta1.ValidateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ValidateResponse::CopyFrom(const ValidateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.adapter.model.v1beta1.ValidateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ValidateResponse::IsInitialized() const {
  return true;
}

void ValidateResponse::Swap(ValidateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ValidateResponse::InternalSwap(ValidateResponse* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ValidateResponse::GetMetadata() const {
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseSessionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseSessionRequest::kSessionIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseSessionRequest::CloseSessionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_CloseSessionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
}
CloseSessionRequest::CloseSessionRequest(const CloseSessionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.session_id().size() > 0) {
    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
  // @@protoc_insertion_point(copy_constructor:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
}

void CloseSessionRequest::SharedCtor() {
  session_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CloseSessionRequest::~CloseSessionRequest() {
  // @@protoc_insertion_point(destructor:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
  SharedDtor();
}

void CloseSessionRequest::SharedDtor() {
  session_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CloseSessionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CloseSessionRequest::descriptor() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseSessionRequest& CloseSessionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_CloseSessionRequest.base);
  return *internal_default_instance();
}


void CloseSessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CloseSessionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string session_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->session_id().data(), static_cast<int>(this->session_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.adapter.model.v1beta1.CloseSessionRequest.session_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
  return false;
#undef DO_
}

void CloseSessionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.adapter.model.v1beta1.CloseSessionRequest.session_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
}

::google::protobuf::uint8* CloseSessionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->session_id().data(), static_cast<int>(this->session_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "istio.mixer.adapter.model.v1beta1.CloseSessionRequest.session_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
  return target;
}

size_t CloseSessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string session_id = 1;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseSessionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseSessionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseSessionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
    MergeFrom(*source);
  }
}

void CloseSessionRequest::MergeFrom(const CloseSessionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id().size() > 0) {

    session_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_id_);
  }
}

void CloseSessionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseSessionRequest::CopyFrom(const CloseSessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.adapter.model.v1beta1.CloseSessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseSessionRequest::IsInitialized() const {
  return true;
}

void CloseSessionRequest::Swap(CloseSessionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseSessionRequest::InternalSwap(CloseSessionRequest* other) {
  using std::swap;
  session_id_.Swap(&other->session_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CloseSessionRequest::GetMetadata() const {
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CloseSessionResponse::InitAsDefaultInstance() {
  ::istio::mixer::adapter::model::v1beta1::_CloseSessionResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::google::rpc::Status*>(
      ::google::rpc::Status::internal_default_instance());
}
void CloseSessionResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CloseSessionResponse::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CloseSessionResponse::CloseSessionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_CloseSessionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
}
CloseSessionResponse::CloseSessionResponse(const CloseSessionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::google::rpc::Status(*from.status_);
  } else {
    status_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
}

void CloseSessionResponse::SharedCtor() {
  status_ = NULL;
}

CloseSessionResponse::~CloseSessionResponse() {
  // @@protoc_insertion_point(destructor:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
  SharedDtor();
}

void CloseSessionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
}

void CloseSessionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CloseSessionResponse::descriptor() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CloseSessionResponse& CloseSessionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::scc_info_CloseSessionResponse.base);
  return *internal_default_instance();
}


void CloseSessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  _internal_metadata_.Clear();
}

bool CloseSessionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.rpc.Status status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
  return false;
#undef DO_
}

void CloseSessionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.Status status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
}

::google::protobuf::uint8* CloseSessionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.rpc.Status status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
  return target;
}

size_t CloseSessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.rpc.Status status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseSessionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseSessionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CloseSessionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
    MergeFrom(*source);
  }
}

void CloseSessionResponse::MergeFrom(const CloseSessionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::google::rpc::Status::MergeFrom(from.status());
  }
}

void CloseSessionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseSessionResponse::CopyFrom(const CloseSessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.adapter.model.v1beta1.CloseSessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseSessionResponse::IsInitialized() const {
  return true;
}

void CloseSessionResponse::Swap(CloseSessionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CloseSessionResponse::InternalSwap(CloseSessionResponse* other) {
  using std::swap;
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CloseSessionResponse::GetMetadata() const {
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

InfrastructureBackend::~InfrastructureBackend() {}

const ::google::protobuf::ServiceDescriptor* InfrastructureBackend::descriptor() {
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* InfrastructureBackend::GetDescriptor() {
  return descriptor();
}

void InfrastructureBackend::Validate(::google::protobuf::RpcController* controller,
                         const ::istio::mixer::adapter::model::v1beta1::ValidateRequest*,
                         ::istio::mixer::adapter::model::v1beta1::ValidateResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method Validate() not implemented.");
  done->Run();
}

void InfrastructureBackend::CreateSession(::google::protobuf::RpcController* controller,
                         const ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest*,
                         ::istio::mixer::adapter::model::v1beta1::CreateSessionResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CreateSession() not implemented.");
  done->Run();
}

void InfrastructureBackend::CloseSession(::google::protobuf::RpcController* controller,
                         const ::istio::mixer::adapter::model::v1beta1::CloseSessionRequest*,
                         ::istio::mixer::adapter::model::v1beta1::CloseSessionResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method CloseSession() not implemented.");
  done->Run();
}

void InfrastructureBackend::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2finfrastructure_5fbackend_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      Validate(controller,
             ::google::protobuf::down_cast<const ::istio::mixer::adapter::model::v1beta1::ValidateRequest*>(request),
             ::google::protobuf::down_cast< ::istio::mixer::adapter::model::v1beta1::ValidateResponse*>(response),
             done);
      break;
    case 1:
      CreateSession(controller,
             ::google::protobuf::down_cast<const ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest*>(request),
             ::google::protobuf::down_cast< ::istio::mixer::adapter::model::v1beta1::CreateSessionResponse*>(response),
             done);
      break;
    case 2:
      CloseSession(controller,
             ::google::protobuf::down_cast<const ::istio::mixer::adapter::model::v1beta1::CloseSessionRequest*>(request),
             ::google::protobuf::down_cast< ::istio::mixer::adapter::model::v1beta1::CloseSessionResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& InfrastructureBackend::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::istio::mixer::adapter::model::v1beta1::ValidateRequest::default_instance();
    case 1:
      return ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest::default_instance();
    case 2:
      return ::istio::mixer::adapter::model::v1beta1::CloseSessionRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& InfrastructureBackend::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::istio::mixer::adapter::model::v1beta1::ValidateResponse::default_instance();
    case 1:
      return ::istio::mixer::adapter::model::v1beta1::CreateSessionResponse::default_instance();
    case 2:
      return ::istio::mixer::adapter::model::v1beta1::CloseSessionResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

InfrastructureBackend_Stub::InfrastructureBackend_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
InfrastructureBackend_Stub::InfrastructureBackend_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
InfrastructureBackend_Stub::~InfrastructureBackend_Stub() {
  if (owns_channel_) delete channel_;
}

void InfrastructureBackend_Stub::Validate(::google::protobuf::RpcController* controller,
                              const ::istio::mixer::adapter::model::v1beta1::ValidateRequest* request,
                              ::istio::mixer::adapter::model::v1beta1::ValidateResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void InfrastructureBackend_Stub::CreateSession(::google::protobuf::RpcController* controller,
                              const ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest* request,
                              ::istio::mixer::adapter::model::v1beta1::CreateSessionResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void InfrastructureBackend_Stub::CloseSession(::google::protobuf::RpcController* controller,
                              const ::istio::mixer::adapter::model::v1beta1::CloseSessionRequest* request,
                              ::istio::mixer::adapter::model::v1beta1::CloseSessionResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace model
}  // namespace adapter
}  // namespace mixer
}  // namespace istio
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest_InferredTypesEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest_InferredTypesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest_InferredTypesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest* Arena::CreateMaybeMessage< ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::istio::mixer::adapter::model::v1beta1::CreateSessionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::adapter::model::v1beta1::CreateSessionResponse* Arena::CreateMaybeMessage< ::istio::mixer::adapter::model::v1beta1::CreateSessionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::istio::mixer::adapter::model::v1beta1::CreateSessionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::adapter::model::v1beta1::ValidateRequest_InferredTypesEntry_DoNotUse* Arena::CreateMaybeMessage< ::istio::mixer::adapter::model::v1beta1::ValidateRequest_InferredTypesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::istio::mixer::adapter::model::v1beta1::ValidateRequest_InferredTypesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::adapter::model::v1beta1::ValidateRequest* Arena::CreateMaybeMessage< ::istio::mixer::adapter::model::v1beta1::ValidateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::istio::mixer::adapter::model::v1beta1::ValidateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::adapter::model::v1beta1::ValidateResponse* Arena::CreateMaybeMessage< ::istio::mixer::adapter::model::v1beta1::ValidateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::istio::mixer::adapter::model::v1beta1::ValidateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::adapter::model::v1beta1::CloseSessionRequest* Arena::CreateMaybeMessage< ::istio::mixer::adapter::model::v1beta1::CloseSessionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::istio::mixer::adapter::model::v1beta1::CloseSessionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::istio::mixer::adapter::model::v1beta1::CloseSessionResponse* Arena::CreateMaybeMessage< ::istio::mixer::adapter::model::v1beta1::CloseSessionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::istio::mixer::adapter::model::v1beta1::CloseSessionResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
