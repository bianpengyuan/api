// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/adapter/model/v1beta1/extensions.proto

#ifndef PROTOBUF_INCLUDED_mixer_2fadapter_2fmodel_2fv1beta1_2fextensions_2eproto
#define PROTOBUF_INCLUDED_mixer_2fadapter_2fmodel_2fv1beta1_2fextensions_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fextensions_2eproto 

namespace protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fextensions_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fextensions_2eproto
namespace istio {
namespace mixer {
namespace adapter {
namespace model {
namespace v1beta1 {
}  // namespace v1beta1
}  // namespace model
}  // namespace adapter
}  // namespace mixer
}  // namespace istio
namespace istio {
namespace mixer {
namespace adapter {
namespace model {
namespace v1beta1 {

enum TemplateVariety {
  TEMPLATE_VARIETY_CHECK = 0,
  TEMPLATE_VARIETY_REPORT = 1,
  TEMPLATE_VARIETY_QUOTA = 2,
  TEMPLATE_VARIETY_ATTRIBUTE_GENERATOR = 3,
  TEMPLATE_VARIETY_CHECK_WITH_OUTPUT = 4,
  TemplateVariety_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TemplateVariety_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool TemplateVariety_IsValid(int value);
const TemplateVariety TemplateVariety_MIN = TEMPLATE_VARIETY_CHECK;
const TemplateVariety TemplateVariety_MAX = TEMPLATE_VARIETY_CHECK_WITH_OUTPUT;
const int TemplateVariety_ARRAYSIZE = TemplateVariety_MAX + 1;

const ::google::protobuf::EnumDescriptor* TemplateVariety_descriptor();
inline const ::std::string& TemplateVariety_Name(TemplateVariety value) {
  return ::google::protobuf::internal::NameOfEnum(
    TemplateVariety_descriptor(), value);
}
inline bool TemplateVariety_Parse(
    const ::std::string& name, TemplateVariety* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TemplateVariety>(
    TemplateVariety_descriptor(), name, value);
}
// ===================================================================


// ===================================================================

static const int kTemplateVarietyFieldNumber = 72295727;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::istio::mixer::adapter::model::v1beta1::TemplateVariety, ::istio::mixer::adapter::model::v1beta1::TemplateVariety_IsValid>, 14, false >
  template_variety;
static const int kTemplateNameFieldNumber = 72295888;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  template_name;

// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace v1beta1
}  // namespace model
}  // namespace adapter
}  // namespace mixer
}  // namespace istio

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::istio::mixer::adapter::model::v1beta1::TemplateVariety> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::istio::mixer::adapter::model::v1beta1::TemplateVariety>() {
  return ::istio::mixer::adapter::model::v1beta1::TemplateVariety_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_mixer_2fadapter_2fmodel_2fv1beta1_2fextensions_2eproto
