// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/adapter/model/v1beta1/quota.proto

#include "mixer/adapter/model/v1beta1/quota.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace istio {
namespace mixer {
namespace adapter {
namespace model {
namespace v1beta1 {
class QuotaRequest_QuotaParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaRequest_QuotaParams>
      _instance;
} _QuotaRequest_QuotaParams_default_instance_;
class QuotaRequest_QuotasEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaRequest_QuotasEntry_DoNotUse>
      _instance;
} _QuotaRequest_QuotasEntry_DoNotUse_default_instance_;
class QuotaRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaRequest>
      _instance;
} _QuotaRequest_default_instance_;
class QuotaResult_ResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaResult_Result>
      _instance;
} _QuotaResult_Result_default_instance_;
class QuotaResult_QuotasEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaResult_QuotasEntry_DoNotUse>
      _instance;
} _QuotaResult_QuotasEntry_DoNotUse_default_instance_;
class QuotaResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QuotaResult>
      _instance;
} _QuotaResult_default_instance_;
}  // namespace v1beta1
}  // namespace model
}  // namespace adapter
}  // namespace mixer
}  // namespace istio
namespace protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto {
void InitDefaultsQuotaRequest_QuotaParamsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_QuotaRequest_QuotaParams_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams::InitAsDefaultInstance();
}

void InitDefaultsQuotaRequest_QuotaParams() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuotaRequest_QuotaParamsImpl);
}

void InitDefaultsQuotaRequest_QuotasEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::InitDefaultsQuotaRequest_QuotaParams();
  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_QuotaRequest_QuotasEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotasEntry_DoNotUse();
  }
  ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotasEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsQuotaRequest_QuotasEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuotaRequest_QuotasEntry_DoNotUseImpl);
}

void InitDefaultsQuotaRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::InitDefaultsQuotaRequest_QuotasEntry_DoNotUse();
  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_QuotaRequest_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::QuotaRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::adapter::model::v1beta1::QuotaRequest::InitAsDefaultInstance();
}

void InitDefaultsQuotaRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuotaRequestImpl);
}

void InitDefaultsQuotaResult_ResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaultsDuration();
  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_QuotaResult_Result_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::QuotaResult_Result();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::adapter::model::v1beta1::QuotaResult_Result::InitAsDefaultInstance();
}

void InitDefaultsQuotaResult_Result() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuotaResult_ResultImpl);
}

void InitDefaultsQuotaResult_QuotasEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::InitDefaultsQuotaResult_Result();
  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_QuotaResult_QuotasEntry_DoNotUse_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::QuotaResult_QuotasEntry_DoNotUse();
  }
  ::istio::mixer::adapter::model::v1beta1::QuotaResult_QuotasEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsQuotaResult_QuotasEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuotaResult_QuotasEntry_DoNotUseImpl);
}

void InitDefaultsQuotaResultImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::InitDefaultsQuotaResult_QuotasEntry_DoNotUse();
  {
    void* ptr = &::istio::mixer::adapter::model::v1beta1::_QuotaResult_default_instance_;
    new (ptr) ::istio::mixer::adapter::model::v1beta1::QuotaResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::istio::mixer::adapter::model::v1beta1::QuotaResult::InitAsDefaultInstance();
}

void InitDefaultsQuotaResult() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsQuotaResultImpl);
}

::google::protobuf::Metadata file_level_metadata[6];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams, best_effort_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotasEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotasEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotasEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotasEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaRequest, quotas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaResult_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaResult_Result, valid_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaResult_Result, granted_amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaResult_QuotasEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaResult_QuotasEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaResult_QuotasEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaResult_QuotasEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::istio::mixer::adapter::model::v1beta1::QuotaResult, quotas_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams)},
  { 7, 14, sizeof(::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotasEntry_DoNotUse)},
  { 16, -1, sizeof(::istio::mixer::adapter::model::v1beta1::QuotaRequest)},
  { 22, -1, sizeof(::istio::mixer::adapter::model::v1beta1::QuotaResult_Result)},
  { 29, 36, sizeof(::istio::mixer::adapter::model::v1beta1::QuotaResult_QuotasEntry_DoNotUse)},
  { 38, -1, sizeof(::istio::mixer::adapter::model::v1beta1::QuotaResult)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_QuotaRequest_QuotaParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_QuotaRequest_QuotasEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_QuotaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_QuotaResult_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_QuotaResult_QuotasEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::istio::mixer::adapter::model::v1beta1::_QuotaResult_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mixer/adapter/model/v1beta1/quota.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\'mixer/adapter/model/v1beta1/quota.prot"
      "o\022!istio.mixer.adapter.model.v1beta1\032\024go"
      "goproto/gogo.proto\032\036google/protobuf/dura"
      "tion.proto\"\201\002\n\014QuotaRequest\022Q\n\006quotas\030\001 "
      "\003(\0132;.istio.mixer.adapter.model.v1beta1."
      "QuotaRequest.QuotasEntryB\004\310\336\037\000\0322\n\013QuotaP"
      "arams\022\016\n\006amount\030\001 \001(\003\022\023\n\013best_effort\030\002 \001"
      "(\010\032j\n\013QuotasEntry\022\013\n\003key\030\001 \001(\t\022J\n\005value\030"
      "\002 \001(\0132;.istio.mixer.adapter.model.v1beta"
      "1.QuotaRequest.QuotaParams:\0028\001\"\244\002\n\013Quota"
      "Result\022P\n\006quotas\030\001 \003(\0132:.istio.mixer.ada"
      "pter.model.v1beta1.QuotaResult.QuotasEnt"
      "ryB\004\310\336\037\000\032]\n\006Result\022;\n\016valid_duration\030\002 \001"
      "(\0132\031.google.protobuf.DurationB\010\310\336\037\000\230\337\037\001\022"
      "\026\n\016granted_amount\030\003 \001(\003\032d\n\013QuotasEntry\022\013"
      "\n\003key\030\001 \001(\t\022D\n\005value\030\002 \001(\01325.istio.mixer"
      ".adapter.model.v1beta1.QuotaResult.Resul"
      "t:\0028\001B6Z(istio.io/api/mixer/adapter/mode"
      "l/v1beta1\310\341\036\000\250\342\036\000\360\341\036\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 749);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mixer/adapter/model/v1beta1/quota.proto", &protobuf_RegisterTypes);
  ::protobuf_gogoproto_2fgogo_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto
namespace istio {
namespace mixer {
namespace adapter {
namespace model {
namespace v1beta1 {

// ===================================================================

void QuotaRequest_QuotaParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaRequest_QuotaParams::kAmountFieldNumber;
const int QuotaRequest_QuotaParams::kBestEffortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaRequest_QuotaParams::QuotaRequest_QuotaParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::InitDefaultsQuotaRequest_QuotaParams();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
}
QuotaRequest_QuotaParams::QuotaRequest_QuotaParams(const QuotaRequest_QuotaParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&best_effort_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(best_effort_));
  // @@protoc_insertion_point(copy_constructor:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
}

void QuotaRequest_QuotaParams::SharedCtor() {
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&best_effort_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(best_effort_));
  _cached_size_ = 0;
}

QuotaRequest_QuotaParams::~QuotaRequest_QuotaParams() {
  // @@protoc_insertion_point(destructor:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
  SharedDtor();
}

void QuotaRequest_QuotaParams::SharedDtor() {
}

void QuotaRequest_QuotaParams::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuotaRequest_QuotaParams::descriptor() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuotaRequest_QuotaParams& QuotaRequest_QuotaParams::default_instance() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::InitDefaultsQuotaRequest_QuotaParams();
  return *internal_default_instance();
}

QuotaRequest_QuotaParams* QuotaRequest_QuotaParams::New(::google::protobuf::Arena* arena) const {
  QuotaRequest_QuotaParams* n = new QuotaRequest_QuotaParams;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuotaRequest_QuotaParams::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&best_effort_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(best_effort_));
  _internal_metadata_.Clear();
}

bool QuotaRequest_QuotaParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 amount = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool best_effort = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &best_effort_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
  return false;
#undef DO_
}

void QuotaRequest_QuotaParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 amount = 1;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->amount(), output);
  }

  // bool best_effort = 2;
  if (this->best_effort() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->best_effort(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
}

::google::protobuf::uint8* QuotaRequest_QuotaParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 amount = 1;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->amount(), target);
  }

  // bool best_effort = 2;
  if (this->best_effort() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->best_effort(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
  return target;
}

size_t QuotaRequest_QuotaParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 amount = 1;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  // bool best_effort = 2;
  if (this->best_effort() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuotaRequest_QuotaParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaRequest_QuotaParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaRequest_QuotaParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
    MergeFrom(*source);
  }
}

void QuotaRequest_QuotaParams::MergeFrom(const QuotaRequest_QuotaParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.best_effort() != 0) {
    set_best_effort(from.best_effort());
  }
}

void QuotaRequest_QuotaParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaRequest_QuotaParams::CopyFrom(const QuotaRequest_QuotaParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaRequest_QuotaParams::IsInitialized() const {
  return true;
}

void QuotaRequest_QuotaParams::Swap(QuotaRequest_QuotaParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuotaRequest_QuotaParams::InternalSwap(QuotaRequest_QuotaParams* other) {
  using std::swap;
  swap(amount_, other->amount_);
  swap(best_effort_, other->best_effort_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuotaRequest_QuotaParams::GetMetadata() const {
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

QuotaRequest_QuotasEntry_DoNotUse::QuotaRequest_QuotasEntry_DoNotUse() {}
QuotaRequest_QuotasEntry_DoNotUse::QuotaRequest_QuotasEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void QuotaRequest_QuotasEntry_DoNotUse::MergeFrom(const QuotaRequest_QuotasEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata QuotaRequest_QuotasEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::file_level_metadata[1];
}
void QuotaRequest_QuotasEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void QuotaRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaRequest::kQuotasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaRequest::QuotaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::InitDefaultsQuotaRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.adapter.model.v1beta1.QuotaRequest)
}
QuotaRequest::QuotaRequest(const QuotaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quotas_.MergeFrom(from.quotas_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.adapter.model.v1beta1.QuotaRequest)
}

void QuotaRequest::SharedCtor() {
  _cached_size_ = 0;
}

QuotaRequest::~QuotaRequest() {
  // @@protoc_insertion_point(destructor:istio.mixer.adapter.model.v1beta1.QuotaRequest)
  SharedDtor();
}

void QuotaRequest::SharedDtor() {
}

void QuotaRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuotaRequest::descriptor() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuotaRequest& QuotaRequest::default_instance() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::InitDefaultsQuotaRequest();
  return *internal_default_instance();
}

QuotaRequest* QuotaRequest::New(::google::protobuf::Arena* arena) const {
  QuotaRequest* n = new QuotaRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuotaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.adapter.model.v1beta1.QuotaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quotas_.Clear();
  _internal_metadata_.Clear();
}

bool QuotaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.adapter.model.v1beta1.QuotaRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams> quotas = 1 [(.gogoproto.nullable) = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          QuotaRequest_QuotasEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              QuotaRequest_QuotasEntry_DoNotUse,
              ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams > > parser(&quotas_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotasEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.adapter.model.v1beta1.QuotaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.adapter.model.v1beta1.QuotaRequest)
  return false;
#undef DO_
}

void QuotaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.adapter.model.v1beta1.QuotaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams> quotas = 1 [(.gogoproto.nullable) = false];
  if (!this->quotas().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotasEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->quotas().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->quotas().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<QuotaRequest_QuotasEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(quotas_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<QuotaRequest_QuotasEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it) {
        entry.reset(quotas_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.adapter.model.v1beta1.QuotaRequest)
}

::google::protobuf::uint8* QuotaRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.adapter.model.v1beta1.QuotaRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams> quotas = 1 [(.gogoproto.nullable) = false];
  if (!this->quotas().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotasEntry.key");
      }
    };

    if (deterministic &&
        this->quotas().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->quotas().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<QuotaRequest_QuotasEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(quotas_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<QuotaRequest_QuotasEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it) {
        entry.reset(quotas_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.adapter.model.v1beta1.QuotaRequest)
  return target;
}

size_t QuotaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.adapter.model.v1beta1.QuotaRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .istio.mixer.adapter.model.v1beta1.QuotaRequest.QuotaParams> quotas = 1 [(.gogoproto.nullable) = false];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->quotas_size());
  {
    ::google::protobuf::scoped_ptr<QuotaRequest_QuotasEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaRequest_QuotaParams >::const_iterator
        it = this->quotas().begin();
        it != this->quotas().end(); ++it) {
      entry.reset(quotas_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuotaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.adapter.model.v1beta1.QuotaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.adapter.model.v1beta1.QuotaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.adapter.model.v1beta1.QuotaRequest)
    MergeFrom(*source);
  }
}

void QuotaRequest::MergeFrom(const QuotaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.adapter.model.v1beta1.QuotaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quotas_.MergeFrom(from.quotas_);
}

void QuotaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.adapter.model.v1beta1.QuotaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaRequest::CopyFrom(const QuotaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.adapter.model.v1beta1.QuotaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaRequest::IsInitialized() const {
  return true;
}

void QuotaRequest::Swap(QuotaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuotaRequest::InternalSwap(QuotaRequest* other) {
  using std::swap;
  quotas_.Swap(&other->quotas_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuotaRequest::GetMetadata() const {
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QuotaResult_Result::InitAsDefaultInstance() {
  ::istio::mixer::adapter::model::v1beta1::_QuotaResult_Result_default_instance_._instance.get_mutable()->valid_duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void QuotaResult_Result::clear_valid_duration() {
  if (GetArenaNoVirtual() == NULL && valid_duration_ != NULL) {
    delete valid_duration_;
  }
  valid_duration_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaResult_Result::kValidDurationFieldNumber;
const int QuotaResult_Result::kGrantedAmountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaResult_Result::QuotaResult_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::InitDefaultsQuotaResult_Result();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
}
QuotaResult_Result::QuotaResult_Result(const QuotaResult_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_valid_duration()) {
    valid_duration_ = new ::google::protobuf::Duration(*from.valid_duration_);
  } else {
    valid_duration_ = NULL;
  }
  granted_amount_ = from.granted_amount_;
  // @@protoc_insertion_point(copy_constructor:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
}

void QuotaResult_Result::SharedCtor() {
  ::memset(&valid_duration_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&granted_amount_) -
      reinterpret_cast<char*>(&valid_duration_)) + sizeof(granted_amount_));
  _cached_size_ = 0;
}

QuotaResult_Result::~QuotaResult_Result() {
  // @@protoc_insertion_point(destructor:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
  SharedDtor();
}

void QuotaResult_Result::SharedDtor() {
  if (this != internal_default_instance()) delete valid_duration_;
}

void QuotaResult_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuotaResult_Result::descriptor() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuotaResult_Result& QuotaResult_Result::default_instance() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::InitDefaultsQuotaResult_Result();
  return *internal_default_instance();
}

QuotaResult_Result* QuotaResult_Result::New(::google::protobuf::Arena* arena) const {
  QuotaResult_Result* n = new QuotaResult_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuotaResult_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && valid_duration_ != NULL) {
    delete valid_duration_;
  }
  valid_duration_ = NULL;
  granted_amount_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool QuotaResult_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Duration valid_duration = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_valid_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 granted_amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &granted_amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
  return false;
#undef DO_
}

void QuotaResult_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration valid_duration = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  if (this->has_valid_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->valid_duration_, output);
  }

  // int64 granted_amount = 3;
  if (this->granted_amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->granted_amount(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
}

::google::protobuf::uint8* QuotaResult_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Duration valid_duration = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  if (this->has_valid_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->valid_duration_, deterministic, target);
  }

  // int64 granted_amount = 3;
  if (this->granted_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->granted_amount(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
  return target;
}

size_t QuotaResult_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .google.protobuf.Duration valid_duration = 2 [(.gogoproto.nullable) = false, (.gogoproto.stdduration) = true];
  if (this->has_valid_duration()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->valid_duration_);
  }

  // int64 granted_amount = 3;
  if (this->granted_amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->granted_amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuotaResult_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaResult_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaResult_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
    MergeFrom(*source);
  }
}

void QuotaResult_Result::MergeFrom(const QuotaResult_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_valid_duration()) {
    mutable_valid_duration()->::google::protobuf::Duration::MergeFrom(from.valid_duration());
  }
  if (from.granted_amount() != 0) {
    set_granted_amount(from.granted_amount());
  }
}

void QuotaResult_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaResult_Result::CopyFrom(const QuotaResult_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.adapter.model.v1beta1.QuotaResult.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaResult_Result::IsInitialized() const {
  return true;
}

void QuotaResult_Result::Swap(QuotaResult_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuotaResult_Result::InternalSwap(QuotaResult_Result* other) {
  using std::swap;
  swap(valid_duration_, other->valid_duration_);
  swap(granted_amount_, other->granted_amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuotaResult_Result::GetMetadata() const {
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

QuotaResult_QuotasEntry_DoNotUse::QuotaResult_QuotasEntry_DoNotUse() {}
QuotaResult_QuotasEntry_DoNotUse::QuotaResult_QuotasEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void QuotaResult_QuotasEntry_DoNotUse::MergeFrom(const QuotaResult_QuotasEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata QuotaResult_QuotasEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::file_level_metadata[4];
}
void QuotaResult_QuotasEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void QuotaResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuotaResult::kQuotasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuotaResult::QuotaResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::InitDefaultsQuotaResult();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:istio.mixer.adapter.model.v1beta1.QuotaResult)
}
QuotaResult::QuotaResult(const QuotaResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  quotas_.MergeFrom(from.quotas_);
  // @@protoc_insertion_point(copy_constructor:istio.mixer.adapter.model.v1beta1.QuotaResult)
}

void QuotaResult::SharedCtor() {
  _cached_size_ = 0;
}

QuotaResult::~QuotaResult() {
  // @@protoc_insertion_point(destructor:istio.mixer.adapter.model.v1beta1.QuotaResult)
  SharedDtor();
}

void QuotaResult::SharedDtor() {
}

void QuotaResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuotaResult::descriptor() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QuotaResult& QuotaResult::default_instance() {
  ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::InitDefaultsQuotaResult();
  return *internal_default_instance();
}

QuotaResult* QuotaResult::New(::google::protobuf::Arena* arena) const {
  QuotaResult* n = new QuotaResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuotaResult::Clear() {
// @@protoc_insertion_point(message_clear_start:istio.mixer.adapter.model.v1beta1.QuotaResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  quotas_.Clear();
  _internal_metadata_.Clear();
}

bool QuotaResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:istio.mixer.adapter.model.v1beta1.QuotaResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .istio.mixer.adapter.model.v1beta1.QuotaResult.Result> quotas = 1 [(.gogoproto.nullable) = false];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          QuotaResult_QuotasEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              QuotaResult_QuotasEntry_DoNotUse,
              ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaResult_Result,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaResult_Result > > parser(&quotas_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "istio.mixer.adapter.model.v1beta1.QuotaResult.QuotasEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:istio.mixer.adapter.model.v1beta1.QuotaResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:istio.mixer.adapter.model.v1beta1.QuotaResult)
  return false;
#undef DO_
}

void QuotaResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:istio.mixer.adapter.model.v1beta1.QuotaResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .istio.mixer.adapter.model.v1beta1.QuotaResult.Result> quotas = 1 [(.gogoproto.nullable) = false];
  if (!this->quotas().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaResult_Result >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.adapter.model.v1beta1.QuotaResult.QuotasEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->quotas().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->quotas().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaResult_Result >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaResult_Result >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<QuotaResult_QuotasEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(quotas_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<QuotaResult_QuotasEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaResult_Result >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it) {
        entry.reset(quotas_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:istio.mixer.adapter.model.v1beta1.QuotaResult)
}

::google::protobuf::uint8* QuotaResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:istio.mixer.adapter.model.v1beta1.QuotaResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .istio.mixer.adapter.model.v1beta1.QuotaResult.Result> quotas = 1 [(.gogoproto.nullable) = false];
  if (!this->quotas().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaResult_Result >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "istio.mixer.adapter.model.v1beta1.QuotaResult.QuotasEntry.key");
      }
    };

    if (deterministic &&
        this->quotas().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->quotas().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaResult_Result >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaResult_Result >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<QuotaResult_QuotasEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(quotas_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<QuotaResult_QuotasEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaResult_Result >::const_iterator
          it = this->quotas().begin();
          it != this->quotas().end(); ++it) {
        entry.reset(quotas_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:istio.mixer.adapter.model.v1beta1.QuotaResult)
  return target;
}

size_t QuotaResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:istio.mixer.adapter.model.v1beta1.QuotaResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .istio.mixer.adapter.model.v1beta1.QuotaResult.Result> quotas = 1 [(.gogoproto.nullable) = false];
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->quotas_size());
  {
    ::google::protobuf::scoped_ptr<QuotaResult_QuotasEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::istio::mixer::adapter::model::v1beta1::QuotaResult_Result >::const_iterator
        it = this->quotas().begin();
        it != this->quotas().end(); ++it) {
      entry.reset(quotas_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuotaResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:istio.mixer.adapter.model.v1beta1.QuotaResult)
  GOOGLE_DCHECK_NE(&from, this);
  const QuotaResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuotaResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:istio.mixer.adapter.model.v1beta1.QuotaResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:istio.mixer.adapter.model.v1beta1.QuotaResult)
    MergeFrom(*source);
  }
}

void QuotaResult::MergeFrom(const QuotaResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:istio.mixer.adapter.model.v1beta1.QuotaResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  quotas_.MergeFrom(from.quotas_);
}

void QuotaResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:istio.mixer.adapter.model.v1beta1.QuotaResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuotaResult::CopyFrom(const QuotaResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:istio.mixer.adapter.model.v1beta1.QuotaResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QuotaResult::IsInitialized() const {
  return true;
}

void QuotaResult::Swap(QuotaResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuotaResult::InternalSwap(QuotaResult* other) {
  using std::swap;
  quotas_.Swap(&other->quotas_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuotaResult::GetMetadata() const {
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fquota_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace model
}  // namespace adapter
}  // namespace mixer
}  // namespace istio

// @@protoc_insertion_point(global_scope)
