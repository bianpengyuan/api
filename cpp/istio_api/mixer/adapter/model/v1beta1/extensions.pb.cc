// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mixer/adapter/model/v1beta1/extensions.proto

#include "mixer/adapter/model/v1beta1/extensions.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace istio {
namespace mixer {
namespace adapter {
namespace model {
namespace v1beta1 {
}  // namespace v1beta1
}  // namespace model
}  // namespace adapter
}  // namespace mixer
}  // namespace istio
namespace protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fextensions_2eproto {
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];
const ::google::protobuf::uint32 TableStruct::offsets[1] = {};
static const ::google::protobuf::internal::MigrationSchema* schemas = NULL;
static const ::google::protobuf::Message* const* file_default_instances = NULL;

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "mixer/adapter/model/v1beta1/extensions.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      NULL, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n,mixer/adapter/model/v1beta1/extensions"
      ".proto\022!istio.mixer.adapter.model.v1beta"
      "1\032 google/protobuf/descriptor.proto*\270\001\n\017"
      "TemplateVariety\022\032\n\026TEMPLATE_VARIETY_CHEC"
      "K\020\000\022\033\n\027TEMPLATE_VARIETY_REPORT\020\001\022\032\n\026TEMP"
      "LATE_VARIETY_QUOTA\020\002\022(\n$TEMPLATE_VARIETY"
      "_ATTRIBUTE_GENERATOR\020\003\022&\n\"TEMPLATE_VARIE"
      "TY_CHECK_WITH_OUTPUT\020\004:m\n\020template_varie"
      "ty\022\034.google.protobuf.FileOptions\030\257\312\274\" \001("
      "\01622.istio.mixer.adapter.model.v1beta1.Te"
      "mplateVariety:6\n\rtemplate_name\022\034.google."
      "protobuf.FileOptions\030\320\313\274\" \001(\tB*Z(istio.i"
      "o/api/mixer/adapter/model/v1beta1b\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 521);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mixer/adapter/model/v1beta1/extensions.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fdescriptor_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fextensions_2eproto
namespace istio {
namespace mixer {
namespace adapter {
namespace model {
namespace v1beta1 {
const ::google::protobuf::EnumDescriptor* TemplateVariety_descriptor() {
  protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fextensions_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mixer_2fadapter_2fmodel_2fv1beta1_2fextensions_2eproto::file_level_enum_descriptors[0];
}
bool TemplateVariety_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::EnumTypeTraits< ::istio::mixer::adapter::model::v1beta1::TemplateVariety, ::istio::mixer::adapter::model::v1beta1::TemplateVariety_IsValid>, 14, false >
  template_variety(kTemplateVarietyFieldNumber, static_cast< ::istio::mixer::adapter::model::v1beta1::TemplateVariety >(0));
const ::std::string template_name_default("");
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::StringTypeTraits, 9, false >
  template_name(kTemplateNameFieldNumber, template_name_default);

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace model
}  // namespace adapter
}  // namespace mixer
}  // namespace istio

// @@protoc_insertion_point(global_scope)
